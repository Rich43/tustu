package java.lang;

import com.sun.glass.events.DndEvent;
import jdk.nashorn.internal.runtime.regexp.joni.constants.StackType;
import jdk.nashorn.internal.runtime.regexp.joni.encoding.CharacterType;

/* loaded from: rt.jar:java/lang/CharacterData00.class */
class CharacterData00 extends CharacterData {
    static final CharacterData00 instance;
    static final char[][][] charMap;

    /* renamed from: X, reason: collision with root package name */
    static final char[] f12420X;

    /* renamed from: Y, reason: collision with root package name */
    static final char[] f12421Y;

    /* renamed from: A, reason: collision with root package name */
    static final int[] f12422A;
    static final String A_DATA = "䠀ဏ䠀ဏ䠀ဏ堀䀏倀䀏堀䀏怀䀏倀䀏倀䀏倀䀏怀䀌栀\u0018栀\u0018⠀\u0018⠀怚⠀\u0018栀\u0018栀\u0018\ue800\u0015\ue800\u0016栀\u0018\u2000\u0019㠀\u0018\u2000\u0014㠀\u0018㠀\u0018᠀㘉᠀㘉㠀\u0018栀\u0018\ue800\u0019栀\u0019\ue800\u0019栀\u0018栀\u0018\u0082翡\u0082翡\u0082翡\u0082翡\ue800\u0015栀\u0018\ue800\u0016栀\u001b栀倗栀\u001b\u0081翢\u0081翢\u0081翢\u0081翢\ue800\u0015栀\u0019\ue800\u0016栀\u0019䠀ဏ䠀ဏ倀ဏ㠀\f栀\u0018⠀怚⠀怚栀\u001c栀\u0018栀\u001b栀\u001c��瀅\ue800\u001d栀\u0019䠀တ栀\u001c栀\u001b⠀\u001c⠀\u0019᠀؋᠀؋栀\u001b߽瀂栀\u001b᠀ԋ��瀅\ue800\u001e栀ࠋ栀ࠋ栀ࠋ栀\u0018\u0082瀁\u0082瀁\u0082瀁栀\u0019\u0082瀁߽瀂\u0081瀂\u0081瀂\u0081瀂栀\u0019\u0081瀂؝瀂\u0006瀁\u0005瀂߿\uf001Ρ瀂��瀂\u0006瀁\u0005瀂\u0006瀁\u0005瀂߽瀂؞瀁\u0006瀁ӵ瀂͊瀁̺瀁\u0006瀁\u0005瀂̶瀁̶瀁\u0006瀁\u0005瀂��瀂ľ瀁̪瀁̮瀁\u0006瀁̾瀁ٽ瀂͎瀁͆瀁յ瀂��瀂͎瀁͖瀁\u05f9瀂͚瀁ͪ瀁\u0006瀁\u0005瀂ͪ瀁��瀂��瀂\u0005瀂ͦ瀁ͦ瀁\u0006瀁\u0005瀂ͮ瀁��瀂��瀅��瀂ܡ瀂��瀅��瀅\n\uf001\u0007\uf003\t\uf002\n\uf001\u0007\uf003\t\uf002\t\uf002\u0006瀁\u0005瀂Ľ瀂߽瀂\n\uf001پ瀁ܢ瀁\u05fa瀁��瀂߾瀁\u0006瀁\u0005瀂ն瀁߾瀁߽瀂߽瀂\u0006瀁\u0005瀂Ӷ瀁Ė瀁Ğ瀁߽瀂߽瀂߽瀂͉瀂̹瀂��瀂̵瀂̵瀂��瀂̩瀂��瀂̭瀂̵瀂��瀂��瀂̽瀂��瀂߽瀂߽瀂��瀂ͅ瀂͍瀂��瀂͍瀂͕瀂��瀂��瀂͙瀂ͩ瀂��瀂��瀂ͩ瀂ͩ瀂ĕ瀂ͥ瀂ͥ瀂ĝ瀂��瀂ͭ瀂��瀂��瀅��瀂��瀄��瀄��瀄栀瀄栀瀄��瀄��瀄��瀄栀\u001b栀\u001b栀瀄栀瀄��瀄栀\u001b栀瀄栀\u001b��瀄栀\u001b䀀〆䀀〆䀀〆䚱〆砀��砀����瀄\u05f9瀂\u05f9瀂\u05f9瀂栀\u0018砀��\u009a瀁栀\u0018\u0096瀁\u0096瀁\u0096瀁砀��Ă瀁砀��þ瀁þ瀁߽瀂\u0082瀁砀��\u0082瀁\u0099瀂\u0095瀂\u0095瀂\u0095瀂߽瀂\u0081瀂}瀂\u0081瀂ā瀂ý瀂ý瀂\"瀁ù瀂å瀂��瀁��瀁��瀁½瀂Ù瀂!瀂ř瀂Ł瀂ߥ瀂��瀂ܒ瀁Ɓ瀂栀\u0019\u0006瀁\u0005瀂ߦ瀁��瀂\u05fa瀁\u05fa瀁\u05fa瀁ł瀁ł瀁Ł瀂Ł瀂��\u001c䀀〆䀀\u0007䀀\u0007>瀁\u0006瀁\u0005瀂=瀂砀��Â瀁Â瀁Â瀁Â瀁砀��砀����瀄��\u0018��\u0018砀��Á瀂Á瀂Á瀂Á瀂߽瀂砀����\u0018栀\u0014砀��砀��⠀怚砀��䀀〆䀀〆䀀〆ࠀ\u0014䀀〆ࠀ\u0018䀀〆䀀〆ࠀ\u0018ࠀ瀅ࠀ瀅ࠀ瀅砀��ࠀ瀅ࠀ\u0018ࠀ\u0018砀��\u3000တ\u3000တ\u3000တ砀��栀\u0019栀\u0019က\u0019⠀\u0018⠀\u0018က怚㠀\u0018က\u0018栀\u001c栀\u001c䀀〆က\u0018က\u0018က\u0018က瀅က瀅က瀄က瀅က瀅䀀〆䀀〆䀀〆\u3000㐉\u3000㐉⠀\u0018\u3000\u0018\u3000\u0018က\u0018䀀〆က瀅က\u0018က瀅䀀〆\u3000တ栀\u001c䀀〆䀀〆က瀄က瀄䀀〆䀀〆栀\u001cက瀅က\u001cက\u001cက瀅砀��ကတ䀀〆砀��砀��က瀅ࠀ㐉ࠀ㐉ࠀ瀅䀀〆ࠀ瀄ࠀ瀄ࠀ瀄砀��ࠀ瀄䀀〆䀀〆䀀〆ࠀ\u0018ࠀ\u0018က瀅砀��䀀〆砀��䀀〆��〈䀀〆��瀅��〈��〈��〈䀀〆��〈䀀〆��瀅䀀〆��㝉��㝉��\u0018��瀄砀����瀅砀��䀀〆��瀅砀��砀����〈��〈砀����ࠋ��ࠋ��ࠋ��۫��\u001c⠀怚��瀅䀀〆��\u0018⠀怚��\u001c��瀅䀀〆��瀅��\u074b��ࠋ��ࠋ栀\u001c栀\u001c⠀怚栀\u001c砀��栀ԋ栀ԋ栀ҫ栀ҫ栀ҫ��\u001c��〈��〆��〆��〈砀����\u001c��\u0018砀����瀄䀀〆䀀〆��\u0018��㘉��㘉��瀄砀����瀅��\u001c��\u001c��\u001c��\u0018��\u001c��㐉��㐉��〈��〈䀀〆��\u001c��\u001c砀����\u001c��\u0018��瀅��〈䀀〆��〈��〈��〈��〈��瀅䀀〆��〈��〈䀀〆��瀅��〈߾瀁߾瀁砀��߾瀁��瀅��\u0018��瀄��瀅��\u0018��܋��܋��܋��܋��Ы��Ջ��ࠋ��ࠋ砀��栀\u0014��瀅��\u0018��瀅怀䀌��瀅��瀅\ue800\u0015\ue800\u0016砀����瑪��瑪��瑪砀��栀؋栀؋栀\u0014栀\u0018栀\u0018䀀〆怀䀌砀����瀅��瀄��〈��瀅��ӫ砀��䀀〆��〈��瀄��瀂��瀄߽瀂��瀂��瀄߽瀂í瀂߾瀁��瀂ߡ瀂ߡ瀂ߢ瀁ߢ瀁߽瀂ߡ瀂砀��ߢ瀁ۙ瀂ۙ瀂ک瀂ک瀂ٱ瀂ٱ瀂\u0601瀂\u0601瀂ف瀂ف瀂؉瀂؉瀂߿\uf003߿\uf003߽瀂砀��ۚ瀁ۚ瀁߿\uf003栀\u001b߽瀂栀\u001bڪ瀁ڪ瀁ٲ瀁ٲ瀁砀��栀\u001b߽瀂ߥ瀂ق瀁ق瀁ߦ瀁栀\u001b\u0602瀁\u0602瀁؊瀁؊瀁栀\u001b砀��怀䀌怀䀌怀䀌怀\f怀䀌䠀တ䠀တ䠀တ��တࠀတ栀\u0014栀\u0014栀\u001d栀\u001e栀\u0015栀\u001d怀䀍倀䀎砀တ砀တ砀တ㠀\f⠀\u0018⠀\u0018⠀\u0018栀\u0018栀\u0018\ue800\u001d\ue800\u001e栀\u0018栀\u0018栀倗栀倗栀\u0018㠀\u0019\ue800\u0015\ue800\u0016栀\u0018栀\u0019栀\u0018栀\u0018怀䀌䠀တ砀��᠀؋��瀄\u2000\u0019\u2000\u0019栀\u0019\ue800\u0015\ue800\u0016��瀄᠀Ћ᠀Ћ��瀄砀��䀀〆䀀\u0007䀀\u0007䀀〆��瀁栀\u001c栀\u001c��瀁��瀂��瀁��瀁��瀂栀\u0019��瀁߾瀁栀\u001c⠀\u001c��瀂r瀁��瀁栀\u001c栀\u0019q瀂��\u001cB琪B琪B砊B砊A瘪A瘪A砊A砊��砊��砊��砊\u0006瀁\u0005瀂��琪��砊栀۫栀\u0019栀\u001c栀\u0019\ue800\u0019\ue800\u0019\ue800\u0019\u2000\u0019⠀\u0019栀\u001c\ue800\u0015\ue800\u0016栀\u001c��\u001c栀\u001c栀\u001c��\u001c栀Ы栀Ы栀֫栀֫᠀ܫ᠀ܫj\u001cj\u001ci\u001ci\u001c栀ۋ栀Ћ栀Ћ栀Ћ栀Ћ栀\u058b栀\u058b栀\u058b栀\u058b栀Ы砀��栀\u001c栀ի栀ի栀۫栀۫\ue800\u0019\ue800\u0015\ue800\u0016栀\u0019\ue800\u0016\ue800\u0015栀\u0019砀��Á瀂砀��\u0005瀂߾瀁��瀂栀\u001c栀\u001c\u0006瀁\u0005瀂䀀〆砀��栀\u0018栀\u0018栀ࠋ砀��߽瀂\ue800\u001d\ue800\u001e栀\u0018栀\u0014栀\u0018栀瀄栀\u001c��瀄��瀅��眪栀\u0014栀\u0015栀\u0016栀\u0016栀\u001c��琊��琊��琊栀\u0014��瀄��癊��睪��璊��瀄��瀅栀\u0018䀀〆栀\u001b栀\u001b��瀄��\u05eb��\u05eb��Ы��Ы��ы��ի��ڋ��ࠋ栀\u001c栀ҋ栀ҋ栀ҋ��\u001c栀ࠋ��瀅��瀅��瀅��瀅��瀄栀\u0018䀀\u0007栀\u0018��睪��睪��睪��瘪栀\u001b栀瀄栀瀄��\u001b��\u001b\u0006瀁��瀂砀��߾瀁砀��⠀怚⠀\u001c��〈��\u0018��瀄��〈��〈��\u0018��\u0013��\u0013��\u0012��\u0012��瀅��眅��瀅��盥��畅��瀅��病��瀅��瀅��皥��瀅��癥��瀅��疥砀��ࠀ瀅䀀〆ࠀ瀅ࠀ瀅\u2000\u0019က\u001bက\u001b栀\u0015栀\u0016က怚栀\u001c栀\u0018栀\u0015栀\u0016栀\u0018栀\u0014栀倗栀倗栀\u0015栀\u0016栀\u0015栀倗栀倗㠀\u0018砀��栀\u0018㠀\u0018栀\u0014\ue800\u0015\ue800\u0016⠀\u0018\u2000\u0019\u2000\u0014栀\u0018⠀怚砀��䠀တ栀\u0019栀\u001b⠀怚砀��砀��栀တ栀တ栀တ";

    /* renamed from: B, reason: collision with root package name */
    static final char[] f12423B;
    static final /* synthetic */ boolean $assertionsDisabled;

    /* JADX WARN: Multi-variable type inference failed */
    /* JADX WARN: Type inference failed for: r0v14, types: [char[][], char[][][]] */
    static {
        $assertionsDisabled = !CharacterData00.class.desiredAssertionStatus();
        instance = new CharacterData00();
        f12420X = "��\u0010 0@P`p\u0080\u0090 °ÀÐàð\u0080ĀĐĠİŀŐŠŰŰƀƐƠưǀǐǠǰȀ\u0080Ȑ\u0080Ƞ\u0080\u0080Ȱɀɐɠɰʀʐʠʰˀːʰʰˠ˰̠̀̐ʰʰ̰̀͐͠Ͱ\u0380ΐΐΠΐΰπϐϠϰЀАРарѐѠѰҀҐҠҰЀӀӐӠӰԀԐԠ\u0530ՀՐՠհր\u0590֠հְ׀אנװ\u0600ؐؠذـΐِ٠ٰΐڀڐڠڰۀې۠ΐ۰܀ܐܠܰ݀ݐݠ۰۰۰۰۰۰۰۰۰۰ݰ۰ހސޠ۰ް۰߀ߐߠ۰۰߰ࠀ۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰ࠐࠠ۰۰࠰ࡀࡐࡠࡰ۰ࢀ\u0890ࢠࢰ۰ࣀ࣐۰࣠۰ࣰऀऐठर۰ीॐॠ॰۰ঀঐঠরΐΐী\u09d0ৠৰ\u0a00ਐ۰ਠ۰ਰੀ\u0a50ΐΐ\u0a60ੰ\u0a80ઐઠરીઠŰૐ\u0080\u0080\u0080\u0080ૠ\u0080\u0080\u0080૰\u0b00ଐଠରୀ\u0b50ୠ୰\u0b80ஐ\u0ba0ரீௐ\u0be0௰ఀఐఠరీ\u0c50ౠ\u0c70ಀಐಠರೀ\u0cd0ೠ\u0cf0ഀഐഠരീ\u0d50ൠॠ൰\u0d80ඐචධවැॠॠॠॠॠ\u0de0\u0df0\u0e00ॠॠॠฐॠภॠॠะॠॠเ๐ॠ\u0e60\u0e70ഐഐഐഐഐഐഐഐ\u0e80\u0e80\u0e80\u0e80ຐຠະເ໐\u0ee0\u0ef0ༀ༐༠༰ཀॠཐའΐΐΐΐΐ\u0f70ྀྐྠ\u0080\u0080\u0080ྰ࿀࿐۰\u0fe0\u0ff0ကကတဠူΐΐ၀ॠॠၐॠॠॠॠॠॠၠၰႀ႐ؠ۰Ⴀࠀ۰ႰჀა۰۰რჰॠᄀᄐᄠᄰᅀᄠᅐᅠഐഐഐഐᅰഐഐᆀᆐᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆰॠॠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᆠᇀᇐᇠ۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰ᇰॠሀ\u0a50۰۰۰۰۰۰۰۰ሐሠ\u0080ሰቀ۰۰ቐበተ\u0080ኀነአΐኰዀዐ۰ዠደጀጐጠጰፀፐऀπ፠፰ΐ۰ᎀ᎐Ꭰ۰ᎰᏀᏐᏠᏰΐΐΐΐ۰᐀۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰۰ᐐᐠᐰᑀᑀᑀᑀᑀᑀᑀᑀᑀᑀᑀᑀᑀᑀᑀᑀᑀᑀᑀᑀᑀᑀᑀᑀᑀᑀᑀᑀᑀᑀᑀᑀᑀᑀᑀᑀᑀᑀᑀᑀᑀᑀᑀᑀᑀᑀᑀᑀᑀᑀᑀᑀᑀᑀᑀᑀᑀᑀᑀᑀᑀᑀᑀᑀᑐᑐᑐᑐᑐᑐᑐᑐᑐᑐᑐᑐᑐᑐᑐᑐᑐᑐᑐᑐᑐᑐᑐᑐᑐᑐᑐᑐᑐᑐᑐᑐᑐᑐᑐᑐᑐᑐᑐᑐᑐᑐᑐᑐᑐᑐᑐᑐᑐᑐᑐᑐᑐᑐᑐᑐᑐᑐᑐᑐᑐᑐᑐᑐᑐᑐᑐᑐᑐᑐᑐᑐᑐᑐᑐᑐᑐᑐᑐᑐᑐᑐᑐᑐᑐᑐᑐᑐᑐᑐᑐᑐᑐᑐᑐᑐᑐᑐᑐᑐᑐᑐᑐᑐᑐᑐᑐᑐᑐᑐᑐᑐᑐᑐᑐᑐᑐᑐᑐᑐᑐᑐᑐᑐᑐᑐᑐᑐᑐᑐᑐᑐᑐᑐᑐᑐᑐᑐᑐᑐᑐᑐᑐᑐᑐᑐᑐᑐᑐᑐᑐᑐᑐᑐᑐᑐᑐᑐᑐᑐᑐᑐᑐᑐᑐᑐᑐᑐᑐᑐᑐᑐᑐᑐᑐᑐᑐᑐᑐᑐᑐᑐᑐᑐᑐᑐᑐᑐᑐᑐᑐᑐᑐᑐᑐᑐᑐᑐᑐᑐᆠᆠᆠᑠᆠᑰᒀᒐᆠᆠᆠᒠᆠᆠᒰΐᓀᓐᓠʰʰᓰᔀʰʰʰʰʰʰʰʰʰʰᔐᔠʰᔰʰᕀᕐᕠᕰᖀᖐʰʰʰᖠᖰ ᗀᗐᗠᗰᘀᘐ".toCharArray();
        f12421Y = "��������\u0002\u0004\u0006��������������\b\u0004\n\f\u000e\u0010\u0012\u0014\u0016\u0018\u001a\u001a\u001a\u001a\u001a\u001c\u001e \"$$$$$$$$$$$$&(*,............024����6��������������������������8::<>@BDFHJ\u0010LNPRTTTTTTTTTTTVTTTXZZZZZZZZZZZ\\ZZZ^````````````````````````b```dfffffffh```````````````````````jffhl``nprtvxpz|`~\u0080\u0082```\u0084\u0086\u0088`\u0084\u008a\u008cf\u008e`\u0090`\u0092\u0094\u0094\u0096\u0098\u009a\u0096\u009cfffffff\u009e````````` \u009a`¢````¤`````````\u0088\u0088\u0088¦¨ª¬®°`````²´¶¸º¼\u0088\u0088¾ÀÂÄÆÂ\u0088ÈÂÊÌ\u0088\u0088\u0088Â\u0088ÎÐ\u0088\u0088ÒÔÖ\u0088\u0088ØÚ\u0088\u0088\u0088\u0088\u0088\u0088\u0088\u0088\u0088\u0088\u0088\u0088\u0088ÜÜÜÜÞàââÜääæææææâäääääääÜÜèäääêìääääääääîîîîîîîîîîîîîîîîîîðîîîîîîîîîîîîîîîîîîîîî``ê`òôöøòòäúüþĀĂĄTTTTTTTTĆTTTTĈĊČZZZZZZZZĎZZZZĐĒĔĖĘĚ````````````ĜĞĠĢĤ`ĦĨĪĪĪĪĪĪĪĪTTTTTTTTTTTTTTTTZZZZZZZZZZZZZZZZĬĬĬĬĬĬĬĬ`Įîîİ```````````ĲffffffĴ````````````òòòòĶĸĸĸĸĸĸĸĸĸĸĸĸĸĸĸĸĸĸĺļľľľŀłłłłłłłłłłłłłłłłłłńņňòŊŌîîîîîîîîîîîîîîîŎŎŎŎŎŎŎŐŒŔŎŒòòòòŖŖŖŖŖŖŖŖŖŖŖŖŖŘòòŖŚŜòòòòòŞŞŠŢŤŦŨŪŎŎŎŎŎŬòŮŰŰŰŰŰŰŰŰŰŰŰŰŰŰŰŰŲŰŰŰŰŴŎŎŎŎŎŎŶŎŎŎŸŸŸŸŸźżŰžŰŰŰŰŰŰŰŰŰŰŰŰŰŰŰŰŰƀŎŎŎƂƄŶŎƆƈƊîŶŰ\u001a\u001a\u001a\u001a\u001aŰƌƎŮŮŮŮŮŮŮƐŴŰŰŰŰŰŰŰŰŰŰŰŰŰŰŰŎŎŎŎŎŎŎŎîîîîîƒƔŰŰŰŰŰŰŰŰŰŰŰŰŎŎŎŎŎžòòòòòòòƖƖƖƖƖŖŖŖŖŖŖŖŖŖŖŖŖŖŖŖŖƘîîîîƚ<\u0010ƜòòŖŖŖŖŖŖŖŖŖŖŖŎîƞŎŎŎŎƞŎƞŎƠòƢƢƢƢƢƢƢŜŖŖŖŖŖŖŖŖŖŖŖŖƘîòŜòòòòòòòòòòòòòòòòƤŰŰŰŰŰƤòòòòòòòòòòòŎŎŎîîîŎŎŎŎŎŎŎƦŎƨ\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094ƨƪƬƮŎŎŎƨƬưƬƲîŶŎ\u0094\u0094\u0094\u0094\u0094Ŏľƴƴƴƴƴƶ\u0094\u0094\u0094Ƹ\u0094\u0094\u0094ƺƬƸ\u0094\u0094\u0094ƼƸƼƸ\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094Ƽ\u0094\u0094\u0094ƼƼò\u0094\u0094òƪƬƮŎƦƾǀƾưƼòòòƾòò\u0094Ƹ\u0094Ŏòƴƴƴƴƴ\u0094:ǂǂǄǆòòƺƨƸ\u0094\u0094ƼòƸƼƸ\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094Ƽ\u0094\u0094\u0094Ƽ\u0094ƸƼ\u0094òƒƬƮƦòƺƦƺƠòƺòòòƸ\u0094ƼƼòòòƴƴƴƴƴŎ\u0094ǈòòòòòƺƨƸ\u0094\u0094\u0094\u0094Ƹ\u0094Ƹ\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094Ƽ\u0094\u0094\u0094Ƽ\u0094Ƹ\u0094\u0094òƪƬƮŎŎƺƨƾưòƼòòòòòòò\u0094ŎòƴƴƴƴƴǊòòòòòòò\u0094\u0094\u0094\u0094Ƽ\u0094\u0094\u0094Ƽ\u0094Ƹ\u0094\u0094òƪƮƮŎƦƾǀƾưòòòòƨòò\u0094Ƹ\u0094ŎòƴƴƴƴƴǌǂǂǂòòòòòǎƸ\u0094\u0094Ƽò\u0094Ƽ\u0094\u0094òƸƼƼ\u0094òƸƼò\u0094Ƽò\u0094\u0094\u0094\u0094\u0094\u0094òòƬƨǀòƬǀƬưòƼòòƾòòòòòòòƴƴƴƴƴǐǒŪŪǔǖòòƾƬƸ\u0094\u0094\u0094Ƽ\u0094Ƽ\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094Ƽ\u0094\u0094\u0094\u0094\u0094Ƹ\u0094\u0094òƸŎƨƬǀŎƦŎƠòòòƺƦ\u0094òòò\u0094ŎòƴƴƴƴƴòòòòǘǘǚǜòƬƸ\u0094\u0094\u0094Ƽ\u0094Ƽ\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094Ƽ\u0094\u0094\u0094\u0094\u0094Ƹ\u0094\u0094òƪǞƬƬǀǠǀƬƠòòòƾǀòòòƼ\u0094ŎòƴƴƴƴƴƸƼòòòòòò\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094ƼƸƬƮŎƦƬǀƬưƼòòòƾòòòò\u0094ŎòƴƴƴƴƴǐǂǂòǢ\u0094\u0094\u0094òƬƸ\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094Ƽò\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094Ƹ\u0094\u0094\u0094\u0094Ƹò\u0094\u0094\u0094ƼòƒòƾƬŎƦƦƬƬƬƬòòòòòòòòòƬǤòòòòòƸ\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094ǈ\u0094ŎŎŎƦòŊ\u0094\u0094\u0094ǦîîŶǨǪǪǪǪǪľòòƸƼƼƸƼƼƸòòò\u0094\u0094Ƹ\u0094\u0094\u0094Ƹ\u0094ƸƸò\u0094Ƹ\u0094ǈ\u0094ŎŎŎƺǎò\u0094\u0094ƼǬîîŶòǪǪǪǪǪò\u0094\u0094ǮǰľľľľľľľǲǲǰîǰǰǰǴǴǴǴǴǂǂǂǂǂĮĮĮ\u0012\u0012Ƕ\u0094\u0094\u0094\u0094Ƹ\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094ƼòƺŎŎŎŎŎŎƨŎîǨî\u0094\u0094ǈŎŎŎŎŎƺŎŎŎŎŎŎŎŎŎŎŎŎŎŎŎŎŎƦǰǰǰǰǸǰǰǺǰľľǲǰǼǤòò\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094ǾƮŎƨŎŎƠưȀƮǎǴǴǴǴǴľľľ\u0094\u0094\u0094ƬŎ\u0094\u0094ŎǎȂȄǾȂǶǶ\u0094ǈŎǎ\u0094\u0094\u0094\u0094\u0094\u0094ƨƮȆǶǶȈȊǪǪǪǪǪǶƮǰȌȌȌȌȌȌȌȌȌȌȌȌȌȌȌȌȌȌȌȎòòȎò\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094ȐȒ\u0094\u0094\u0094\u0094\u0094Ƽ\u0094\u0094ò\u0094\u0094\u0094ƼƼ\u0094\u0094ò\u0094\u0094\u0094\u0094Ƽ\u0094\u0094ò\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094Ƽ\u0094\u0094ò\u0094\u0094\u0094ƼƼ\u0094\u0094ò\u0094\u0094\u0094\u0094\u0094\u0094\u0094Ƽ\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094Ƽ\u0094\u0094ò\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094ƼŌŶľľľľȔȖȖȖȖȘȚǂǂǂȜò\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094ŪŪŪŪŪòòò\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094ƼòòòòòȞ\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094ȐȠ\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094Ȣ\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094ȤȦò\u0094\u0094\u0094\u0094\u0094ȐľȨȪòòòòòòò\u0094\u0094\u0094\u0094\u0094\u0094Ƽ\u0094\u0094Ŏƒòòòòò\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094ŎǨǤòòòò\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094Ŏòòòòòò\u0094\u0094\u0094\u0094\u0094\u0094Ƽ\u0094ƼŎòòòòòò\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094îƮŎŎŎƬƬƬƬƨưîîîîîľƶľǊƲòǴǴǴǴǴòòòȬȬȬȬȬòòò\u0010\u0010\u0010Ȯ\u0010ȰîȲǪǪǪǪǪòòò\u0094ȴ\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094òòòò\u0094\u0094\u0094\u0094ǈƼòò\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094òòòòò\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094ƼòŎƨƬƮƨƬòòƬƨƬƬưîòòǖò\u0010ƴƴƴƴƴ\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094ò\u0094\u0094Ƽòòòòò\u0094\u0094\u0094\u0094\u0094\u0094òòƬƬƬƬƬƬƬƬȶ\u0094\u0094\u0094ƬòòòǪǪǪǪǪȸòŪŪŪŪŪŪŪŪŪŪŪŪŪŪŪŪŪ\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094ǈƨƬòľ\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094ǾƨŎŎŎƦȀƨƮŎŎŎƨƬƬƮƠîîîƒŌǴǴǴǴǴòòòǪǪǪǪǪòòòľľľƶľľľòòòòòòòòòŎŎȶ\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094ȀŎŎƨƨƬƬƨȄ\u0094\u0094\u0094òòǪǪǪǪǪľľľǲǰǰǰǰĮîîîîǰǰǰǰǺòŎȶ\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094ǾŎŎƬŎȈƬ\u0094ǪǪǪǪǪ\u0094\u0094\u0094\u0094\u0094\u0094ȀŎƬƮƮŎǶòòòòľľ\u0094\u0094ƬƬƬƬŎŎŎŎƬîòņľľǴǴǴǴǴòƸ\u0094ǪǪǪǪǪ\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094âââľľľľľòòòòîǨîîîîîîȺîîîƪ\u0094Ʋ\u0094\u0094ƬƪƼòòòò\u0088\u0088\u0088\u0088\u0088\u0088\u0088\u0088\u0088\u0088\u0088\u0088\u0088\u0088\u0088\u0088\u0088\u0088\u0088\u0088\u0088\u0088ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜȼ\u0088\u0088\u0088\u0088\u0088\u0088Ⱦ\u0088Â\u0088\u0088\u0088\u0088\u0088\u0088\u0088\u0088\u0088\u0088\u0088\u0088\u0088\u0088ɀÜÜîîîƒòòòòòòòòòòîî```````````²²ɂ\u0088ɄɆɆɆɆɈɈɈɈɆɆɆòɈɈɈòɆɆɆɆɈɈɈɈɆɆɆɆɈɈɈɈɆɆɆòɈɈɈòɊɊɊɊɌɌɌɌɆɆɆɆɈɈɈɈɎɐɐɒɔɖɘò²²²²ɚɚɚɚ²²²²ɚɚɚɚ²²²²ɚɚɚɚɆ²ɜ²Ɉɞɠɢä²ɜ²ɤɤɠäɆ²ò²ɈɦɨäɆ²ɪ²Ɉɬɮäò²ɜ²ɰɲɠɴɶɶɶɸɶɺɼɾʀʀʀ\u0010ʂʄʂʄ\u0010\u0010\u0010\u0010ʆʈʈʊʌʌʎ\u0010ʐʒ\u0010ʔʖ\u0010ʘʚ\u0010\u0010\u0010\u0010\u0010ʜʖ\u0010\u0010\u0010\u0010ʞɼɼʠòòɼɼɼʢòHHHʤʦʨʪʪʪʪʪʤʦȦÜÜÜÜÜÜʬò::::::::::::::::òòòòòòòòîîîîîîʮİʰİʰîîîîîƒòòòòòòòŪʲŪʴŪʶĖ\u0088ĖʸʴŪʺĖĖŪŪŪʲʼʲȌĖʾĖˀ\u0090\u0094ÚŪ\u0088Ė\u001eŢʺ\u0088\u0088˂Ū˄PPPPPPPPˆˆˆˆˆˆˈˈˊˊˊˊˊˊˌˌˎː˒ˎ˔òòòŢŢ˖ŪŪŢŪŪ˖˂Ū˖ŪŪŪ˖ŪŪŪŪŪŪŪŪŪŪŪŪŪŪŪŢŪ˖˖ŪŪŪŪŪŪŪŪŪŪŪŪŪŪŪŢŢŢŢŢŢ˘˚\u001eŢ˚˚˚Ţ˘˜˘\u001eŢ˚˚˘˚\u001e\u001e\u001eŢ˘˚˚˚˚ŢŢ˘˘˚˚˚˚˚˚˚˚\u001eŢŢ˚˚ŢŢŢŢ˘\u001e\u001e˚˚˚˚Ţ˚˚˚˚˚˚˚˚˚˚˚˚˚˚˚\u001e˘˚\u001eŢŢ\u001eŢŢŢŢ˚Ţ˚˚˚˚˚˚˚˚˚\u001eŢŢ˚ŢŢŢŢ˘˚˚Ţ˚ŢŢ˚˚˚˚˚˚˚˚˚˚˚˚Ţ˚˚˚˚˚˚˚˚ŪŪŪŪ˚˚ŪŪŪŪŪŪŪŪŪŪ˚ŪŪŪ˞ˠŪŪŪŪŪǰǰǰǰǰǰǰǰǰǰǰǰǰǰǰǰǰǰǰǰǰǰǰǰǰǰǰǰǰǰǰǰǰǰˢ˖ŪŪŪŪŪŪŪŪŪŪŪˤŪŪ˂ŢŢŢŢŢŢŢŢŢŢŢŢŪŪŪŪŪŪŪŪŪŪŪŪŪŪŪŪŪŪŪŪŢŢŢŪŪŪŪŪŪŪŪŪòòòòòòŪŪŪǖòòòòòòòòòòòòŪŪŪŪŪǖòòòòòòòòòò˦˦˦˦˦˦˦˦˦˦˨˨˨˨˨˨˨˨˨˨˪˪˪˪˪˪˪˪˪˪ǰǰǰǰǰǰǰǰǰǰǰǰǰˬˬˬˬˬˬˬˬˬˬˬˬˬˮˮˮˮˮˮˮˮˮˮˮˮˮ˰˲˲˲˲˴˶˶˶˶˸ŪŪŪŪŪŪŪŪŪŪŪ˂ŪŪŪŪ˂ŪŪŪŪŪŪŪŪŪŪŪŪŪŪŪŪŪŪŪŪŪŪŪŪŪŪŪŢŢŢŢŪŪŪŪŪŪŪ˂ŪŪŪŪŪŪŪŪŪŪŪŪŪŪˢŪŪŪŪŪŪŪŪŪ˺ŪŪŪŪŪŪŪŪŪŪŪŪŪŪŪŪŪŪŪ\u0012\u0012\u0012\u0012\u0012\u0012\u0012˼˼˼˼˼˦˦˦˦˦˾˾˾˾˾ŪŪŪŪŪŪ\u001e˘̀̂˚˘˚ŢŢ˘˚\u001eŢŢ˚\u001eŢ˚˚\u0012\u0012\u0012\u0012\u0012ŢŢŢŢŢŢŢŢŢŢŢŢŢŢŢŢŢŢŢŢŢŢŢŢŢʦ̄̄̄̄̄̄̄̄̄̄̂˘˚˚˚˚˚˚˚˚˚˚ŢŢŢŢ\u001eŢŢŢ˚˚˚Ţ˘ŢŢ˚˚\u001e˚Ţ\u0012\u0012\u001eŢ˘˘˚Ţ˚ŢŢŢŢŢ˚˚˚Ţ\u0012ŢŢŢŢŢŢ˚˚˚˚˚˚˚˚˚\u001e˚˚Ţ\u001e\u001e˘˘˚\u001eŢŢ˚ŢŢŢ˚\u001eŢŢŢŢŢŢŢŢŢŢŢ˘\u001eŢŢŢŢŢ˚ŢŢ˚˚˘\u001e˘\u001eŢ˘˚˚˚˚˚˚˚˚˚˚˚˚˚˚˚˚˚˚˚˚˚Ţ˚˚˚˚˘˚˚˚˚˚˚˚˚˚˚˚˚˚˚˚˚˚˚˚\u001eŢŢ\u001e\u001eŢ˚˚\u001eŢŢ˚\u001eŢ˘Ţ˘˚˚˘ŢŪŪŪŪŪŪŪŪŢŢŢŢŢŢŢŢŢŢ˖˂ŢŢ̆òŪŪŪŪŪòòòĸĸĸĸĸĸĸĸĸĸĸĸĸĸĸĸĸĸĸĸĸĸĸĺłłłłłłłłłłłłłłłłłłłłłłł̈`Ȍª¬ff̊ȌɄ`dt\u0088\u0088ÜȌ``̌ŪŪ̎f̐î`òò̒\u0010̔\u0010²²²²²²²²²²²²²²²²²²²̖òò̖ò\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094òòòļǤòòòòòòŌ\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094Ƽòòòò\u0094\u0094\u0094Ƽ\u0094\u0094\u0094Ƽ\u0094\u0094\u0094Ƽ\u0094\u0094\u0094ƼŎŎŎŎŎŎŎŎŎŎŎŎŎŎŎŎ\u0010̘̘\u0010ʐʒ̘\u0010\u0010\u0010\u0010̚\u0010Ȯ̘\u0010̘\u0012\u0012\u0012\u0012\u0010\u0010̜\u0010\u0010\u0010\u0010\u0010ʀòòŪŪŪŪŪŪŪŪŪŪŪŪŪ˺ŪŪŪŪŪŪŪŪŪŪŪŪòòòòòòŪŪŪŪŪŪŪŪŪŪŪòòòòòòòòòòòòòŪŪŪŪŪŪòò\n\u0010̞̠\u0012\u0012\u0012\u0012\u0012Ū\u0012\u0012\u0012\u0012̢̨̨̨̨̤̦îîǶ̪ââŪ̬̮̰Ū\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094ƼŌ̴̲Ȓ\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094̰âȒòòƸ\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094òƸ\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094Ƽǰ̶̶ǰǰǰǰǰ\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094ƼòòŪŪòòòòòò\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094ǰǰǰǰǰǰǰǰǰǰǰǰǰǰˢǖ̸̸̸̸̸ǰǰǰǰǰǰǰǰǰǰǰǰǰǰǰ̺̼ǂǂ̾̀̀̀̀̀PPǰǰǰǰǰǰǰǰǰǰǰǰǰǰŪˤǰǰǰǰǰǰǰǰ͂PPPPPPPǰǰǰǰǰǰŪŪǰǰǰǰǰǰǰǰǰǰǰǰǰǰǰǰǰǰǰˢŪˤǰǰǰǰǰǰǰǰǰǰǰǰǰǰǰǰǰŪǰǰǰǰǰǰǰǰǰǰǰǰǰǰǰˢ̈́̈́̈́̈́̈́̈́̈́̈́̈́̈́̈́̈́̈́̈́̈́̈́̈́̈́̈́̈́̈́̈́̈́̈́̈́̈́̈́òòòòò̈́̈́̈́̈́̈́̈́͆\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094òòòòòòòò\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094ȴ\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094ƼòŪŪŪŪŪŪŪŪŪŪŪǖòòòò\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094͈\u0010\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094ǴǴǴǴǴ\u0094òòòòòòòòòò```````Ʋİ͊ŎŎŎŎî̜````````````òòòƺ\u0094\u0094\u0094͎͌͌͌͌îľľľòòòòäääääääääää͐ææææä```````\u0088```````````````ȼ\u0088\u0088\u0088df̊`````͔͖͒̊``òòòòòò`````͘òòòòòòòòòòòòòòòòòòòòòòÜ\u0090\u0094\u0094\u0094ƪ\u0094ƪ\u0094Ʋ\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094ǾƮƨŪŪòòǂǂǂǰ͚òòò\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0010\u0010òòòòƬ\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094ƬƬƬƬƬƬƬƬƒòòòòľǪǪǪǪǪòòòîîîîîîîîî\u0094\u0094\u0094ľȠòòǴǴǴǴǴ\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094ŎŎƠîľ\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094ǈŎŎŎŎŎȂòòòòòņ\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094ƲƬŎŎƬƨƬ͜ľľľľľľļǪǪǪǪǪòòľ\u0094\u0094\u0094\u0094ǈŎŎƨƮƨƮƦòòòò\u0094ǈ\u0094\u0094\u0094\u0094ƨòǪǪǪǪǪòľľ\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094Ȓ\u0094\u0094ǮǰȊòò\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094ǎŎǎǈǎ\u0094\u0094ƠƲƼòòòòòòòòòòòƸȴľ\u0094\u0094\u0094\u0094\u0094ǾŎƬľȴ͞ƒòòòòƸ\u0094\u0094ƼƸ\u0094\u0094ƼƸ\u0094\u0094Ƽòòòò\u0094\u0094\u0094Ƽ\u0094\u0094\u0094Ƽòòòòòòòò\u0094ǾƮƬƨ͠ȈòǪǪǪǪǪòòò\u0094\u0094òòòòòò\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094ƼòƸ\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094òòͤͤͤͤͤͤͤͤͤͤͤͤͤͤͤͤ̈́̈́̈́̈́̈́ͦ̈́̈́̈́ͨ̈́̈́ͪ̈́̈́̈́̈́̈́̈́̈́̈́̈́̈́̈́̈́ͬ̈́̈́̈́̈́̈́̈́̈́̈́̈́̈́̈́̈́̈́̈́ͮ͢͢͢͢͢͢͢͢͢͢͢͢͢͢͢͢Ͱ̈́̈́̈́̈́̈́̈́̈́̈́̈́̈́̈́̈́̈́̈́̈́̈́̈́̈́̈́̈́Ͳ̈́̈́̈́̈́̈́̈́̈́̈́ò̈́̈́̈́̈́̈́̈́̈́̈́̈́̈́̈́̈́̈́̈́̈́̈́̈́̈́̈́̈́̈́òòò²²²ɜòòòòò̖²²òòʹͶŖŖŖŖ\u0378ŖŖŖŖŖŖŘŖŖŘŘŖʹŘŖŖŖŖŖŰŰŰŰŰŰŰŰŰŰŰŰŰŰŰŰŰͺͺͺͺͺͺͺͺòòòòòòòòƔŰŰŰŰŰŰŰŰŰŰŰŰŰŰŰŰŰŰŰŰŰͼòòòòòòòòŰŰŰŰŰŰŰŰŰŰŰŰŰŰŰŰòŰŰŰŰŰŰŰŰŰŰŰòòòòòòòòòòòòòòòòòòòòŰŰŰŰŰŰ;òîîîîîîîî\u0010\u0010\u0010\u0380\u0382òòòîîîƒòòòò̚΄ΆΈΈΈΈΈΈΈ\u0382\u0380\u0382\u0010ʔΊ\u001cΌΎ\u0010ΐ̄̄Β\u0010Δ˚̆ΖʎòòŰŰƤŰŰŰŰŰŰŰŰŰŰŰŰŰŰŰŰŰŰŰƤΘ̒\f\u000e\u0010\u0012\u0014\u0016\u0018\u001a\u001a\u001a\u001a\u001a\u001c\u001e ,............02ʦʚ\u0012\u0010\u0094\u0094\u0094\u0094\u0094Ȓ\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094â\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094\u0094Ƽò\u0094\u0094\u0094ò\u0094\u0094\u0094ò\u0094\u0094\u0094ò\u0094Ƽò:ΚǔΜ˂Ţ˖ǖòòòòΞΠŪò".toCharArray();
        f12422A = new int[930];
        f12423B = "��������������������������������������������������������������������������������������������������������������������������������\u0001��������������������������\u0001������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������\u0001\u0001\u0001������������������\u0001����������������\u0005����\u0001����������������������������������������������������������������������������������������������������������������������������������������������������������������������������������\u0004\u0004��\u0004��\u0004\u0004����������������������������������������������\u0004����������������\u0004��\u0004������������\u0004������\u0004������\u0004����\u0004\u0004����������������������������������������\u0004\u0004����������\u0004��\u0004\u0004����\u0004\u0004\u0004\u0004\u0004��������������������\u0004������\u0004\u0004����������������\u0004��������\u0004������������������������������\u0004\u0004\u0004\u0004����������������������������������������������������������\u0004��\u0004\u0004������\u0004����������������������������������������������������������������������������������������������\u0004����������\u0001��\u0001����\u0001��������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������\u0001����������\u0001����\u0001��������������������������������������������������\u0002\u0002\u0002\u0002\u0001\u0001\u0001\u0001������������������������������������������������������������\u0006\u0006\u0005\u0005������������������������������������������������������������������������������������������������\u0010\u0010����������\u0010\u0010\u0010����\u0010\u0010\u0010������������������������������������������\u0010\u0010\u0010������������������������������������������������\u0004\u0004����������\u0010\u0010\u0010\u0010\u0010\u0010\u0010\u0010\u0010\u0010\u0010\u0010\u0010\u0010����\u0004��������������������������������������������������������������������������������������".toCharArray();
        charMap = new char[][]{new char[]{new char[]{223}, new char[]{'S', 'S'}}, new char[]{new char[]{304}, new char[]{304}}, new char[]{new char[]{329}, new char[]{700, 'N'}}, new char[]{new char[]{496}, new char[]{'J', 780}}, new char[]{new char[]{912}, new char[]{921, 776, 769}}, new char[]{new char[]{944}, new char[]{933, 776, 769}}, new char[]{new char[]{1415}, new char[]{1333, 1362}}, new char[]{new char[]{7830}, new char[]{'H', 817}}, new char[]{new char[]{7831}, new char[]{'T', 776}}, new char[]{new char[]{7832}, new char[]{'W', 778}}, new char[]{new char[]{7833}, new char[]{'Y', 778}}, new char[]{new char[]{7834}, new char[]{'A', 702}}, new char[]{new char[]{8016}, new char[]{933, 787}}, new char[]{new char[]{8018}, new char[]{933, 787, 768}}, new char[]{new char[]{8020}, new char[]{933, 787, 769}}, new char[]{new char[]{8022}, new char[]{933, 787, 834}}, new char[]{new char[]{8064}, new char[]{7944, 921}}, new char[]{new char[]{8065}, new char[]{7945, 921}}, new char[]{new char[]{8066}, new char[]{7946, 921}}, new char[]{new char[]{8067}, new char[]{7947, 921}}, new char[]{new char[]{8068}, new char[]{7948, 921}}, new char[]{new char[]{8069}, new char[]{7949, 921}}, new char[]{new char[]{8070}, new char[]{7950, 921}}, new char[]{new char[]{8071}, new char[]{7951, 921}}, new char[]{new char[]{8072}, new char[]{7944, 921}}, new char[]{new char[]{8073}, new char[]{7945, 921}}, new char[]{new char[]{8074}, new char[]{7946, 921}}, new char[]{new char[]{8075}, new char[]{7947, 921}}, new char[]{new char[]{8076}, new char[]{7948, 921}}, new char[]{new char[]{8077}, new char[]{7949, 921}}, new char[]{new char[]{8078}, new char[]{7950, 921}}, new char[]{new char[]{8079}, new char[]{7951, 921}}, new char[]{new char[]{8080}, new char[]{7976, 921}}, new char[]{new char[]{8081}, new char[]{7977, 921}}, new char[]{new char[]{8082}, new char[]{7978, 921}}, new char[]{new char[]{8083}, new char[]{7979, 921}}, new char[]{new char[]{8084}, new char[]{7980, 921}}, new char[]{new char[]{8085}, new char[]{7981, 921}}, new char[]{new char[]{8086}, new char[]{7982, 921}}, new char[]{new char[]{8087}, new char[]{7983, 921}}, new char[]{new char[]{8088}, new char[]{7976, 921}}, new char[]{new char[]{8089}, new char[]{7977, 921}}, new char[]{new char[]{8090}, new char[]{7978, 921}}, new char[]{new char[]{8091}, new char[]{7979, 921}}, new char[]{new char[]{8092}, new char[]{7980, 921}}, new char[]{new char[]{8093}, new char[]{7981, 921}}, new char[]{new char[]{8094}, new char[]{7982, 921}}, new char[]{new char[]{8095}, new char[]{7983, 921}}, new char[]{new char[]{8096}, new char[]{8040, 921}}, new char[]{new char[]{8097}, new char[]{8041, 921}}, new char[]{new char[]{8098}, new char[]{8042, 921}}, new char[]{new char[]{8099}, new char[]{8043, 921}}, new char[]{new char[]{8100}, new char[]{8044, 921}}, new char[]{new char[]{8101}, new char[]{8045, 921}}, new char[]{new char[]{8102}, new char[]{8046, 921}}, new char[]{new char[]{8103}, new char[]{8047, 921}}, new char[]{new char[]{8104}, new char[]{8040, 921}}, new char[]{new char[]{8105}, new char[]{8041, 921}}, new char[]{new char[]{8106}, new char[]{8042, 921}}, new char[]{new char[]{8107}, new char[]{8043, 921}}, new char[]{new char[]{8108}, new char[]{8044, 921}}, new char[]{new char[]{8109}, new char[]{8045, 921}}, new char[]{new char[]{8110}, new char[]{8046, 921}}, new char[]{new char[]{8111}, new char[]{8047, 921}}, new char[]{new char[]{8114}, new char[]{8122, 921}}, new char[]{new char[]{8115}, new char[]{913, 921}}, new char[]{new char[]{8116}, new char[]{902, 921}}, new char[]{new char[]{8118}, new char[]{913, 834}}, new char[]{new char[]{8119}, new char[]{913, 834, 921}}, new char[]{new char[]{8124}, new char[]{913, 921}}, new char[]{new char[]{8130}, new char[]{8138, 921}}, new char[]{new char[]{8131}, new char[]{919, 921}}, new char[]{new char[]{8132}, new char[]{905, 921}}, new char[]{new char[]{8134}, new char[]{919, 834}}, new char[]{new char[]{8135}, new char[]{919, 834, 921}}, new char[]{new char[]{8140}, new char[]{919, 921}}, new char[]{new char[]{8146}, new char[]{921, 776, 768}}, new char[]{new char[]{8147}, new char[]{921, 776, 769}}, new char[]{new char[]{8150}, new char[]{921, 834}}, new char[]{new char[]{8151}, new char[]{921, 776, 834}}, new char[]{new char[]{8162}, new char[]{933, 776, 768}}, new char[]{new char[]{8163}, new char[]{933, 776, 769}}, new char[]{new char[]{8164}, new char[]{929, 787}}, new char[]{new char[]{8166}, new char[]{933, 834}}, new char[]{new char[]{8167}, new char[]{933, 776, 834}}, new char[]{new char[]{8178}, new char[]{8186, 921}}, new char[]{new char[]{8179}, new char[]{937, 921}}, new char[]{new char[]{8180}, new char[]{911, 921}}, new char[]{new char[]{8182}, new char[]{937, 834}}, new char[]{new char[]{8183}, new char[]{937, 834, 921}}, new char[]{new char[]{8188}, new char[]{937, 921}}, new char[]{new char[]{64256}, new char[]{'F', 'F'}}, new char[]{new char[]{64257}, new char[]{'F', 'I'}}, new char[]{new char[]{64258}, new char[]{'F', 'L'}}, new char[]{new char[]{64259}, new char[]{'F', 'F', 'I'}}, new char[]{new char[]{64260}, new char[]{'F', 'F', 'L'}}, new char[]{new char[]{64261}, new char[]{'S', 'T'}}, new char[]{new char[]{64262}, new char[]{'S', 'T'}}, new char[]{new char[]{64275}, new char[]{1348, 1350}}, new char[]{new char[]{64276}, new char[]{1348, 1333}}, new char[]{new char[]{64277}, new char[]{1348, 1339}}, new char[]{new char[]{64278}, new char[]{1358, 1350}}, new char[]{new char[]{64279}, new char[]{1348, 1341}}};
        char[] charArray = A_DATA.toCharArray();
        if (!$assertionsDisabled && charArray.length != 1860) {
            throw new AssertionError();
        }
        int i2 = 0;
        int i3 = 0;
        while (i2 < 1860) {
            int i4 = i2;
            int i5 = i2 + 1;
            int i6 = charArray[i4] << 16;
            int i7 = i3;
            i3++;
            i2 = i5 + 1;
            f12422A[i7] = i6 | charArray[i5];
        }
    }

    @Override // java.lang.CharacterData
    int getProperties(int i2) {
        char c2 = (char) i2;
        return f12422A[f12421Y[f12420X[c2 >> 5] | ((c2 >> 1) & 15)] | (c2 & 1)];
    }

    int getPropertiesEx(int i2) {
        char c2 = (char) i2;
        return f12423B[f12421Y[f12420X[c2 >> 5] | ((c2 >> 1) & 15)] | (c2 & 1)];
    }

    @Override // java.lang.CharacterData
    int getType(int i2) {
        return getProperties(i2) & 31;
    }

    @Override // java.lang.CharacterData
    boolean isOtherLowercase(int i2) {
        return (getPropertiesEx(i2) & 1) != 0;
    }

    @Override // java.lang.CharacterData
    boolean isOtherUppercase(int i2) {
        return (getPropertiesEx(i2) & 2) != 0;
    }

    @Override // java.lang.CharacterData
    boolean isOtherAlphabetic(int i2) {
        return (getPropertiesEx(i2) & 4) != 0;
    }

    @Override // java.lang.CharacterData
    boolean isIdeographic(int i2) {
        return (getPropertiesEx(i2) & 16) != 0;
    }

    @Override // java.lang.CharacterData
    boolean isJavaIdentifierStart(int i2) {
        if (i2 == 13055) {
            return false;
        }
        if (i2 < 8379 || i2 > 8383) {
            return (i2 < 40909 || i2 > 40943) && (getProperties(i2) & CharacterType.SPACE_MASK) >= 20480;
        }
        return false;
    }

    @Override // java.lang.CharacterData
    boolean isJavaIdentifierPart(int i2) {
        if (i2 == 13055) {
            return false;
        }
        if (i2 < 8379 || i2 > 8383) {
            return (i2 < 40909 || i2 > 40943) && (getProperties(i2) & StackType.NULL_CHECK_START) != 0;
        }
        return false;
    }

    @Override // java.lang.CharacterData
    boolean isUnicodeIdentifierStart(int i2) {
        return (getProperties(i2) & CharacterType.SPACE_MASK) == 28672;
    }

    @Override // java.lang.CharacterData
    boolean isUnicodeIdentifierPart(int i2) {
        return (getProperties(i2) & 4096) != 0;
    }

    @Override // java.lang.CharacterData
    boolean isIdentifierIgnorable(int i2) {
        return (getProperties(i2) & CharacterType.SPACE_MASK) == 4096;
    }

    @Override // java.lang.CharacterData
    int toLowerCase(int i2) {
        int i3 = i2;
        int properties = getProperties(i2);
        if ((properties & 131072) != 0) {
            if ((properties & 133955584) == 133955584) {
                switch (i2) {
                    case 304:
                        i3 = 105;
                        break;
                    case 570:
                        i3 = 11365;
                        break;
                    case 574:
                        i3 = 11366;
                        break;
                    case 4256:
                        i3 = 11520;
                        break;
                    case 4257:
                        i3 = 11521;
                        break;
                    case 4258:
                        i3 = 11522;
                        break;
                    case 4259:
                        i3 = 11523;
                        break;
                    case 4260:
                        i3 = 11524;
                        break;
                    case 4261:
                        i3 = 11525;
                        break;
                    case 4262:
                        i3 = 11526;
                        break;
                    case 4263:
                        i3 = 11527;
                        break;
                    case 4264:
                        i3 = 11528;
                        break;
                    case 4265:
                        i3 = 11529;
                        break;
                    case 4266:
                        i3 = 11530;
                        break;
                    case 4267:
                        i3 = 11531;
                        break;
                    case 4268:
                        i3 = 11532;
                        break;
                    case 4269:
                        i3 = 11533;
                        break;
                    case 4270:
                        i3 = 11534;
                        break;
                    case 4271:
                        i3 = 11535;
                        break;
                    case 4272:
                        i3 = 11536;
                        break;
                    case 4273:
                        i3 = 11537;
                        break;
                    case 4274:
                        i3 = 11538;
                        break;
                    case 4275:
                        i3 = 11539;
                        break;
                    case 4276:
                        i3 = 11540;
                        break;
                    case 4277:
                        i3 = 11541;
                        break;
                    case 4278:
                        i3 = 11542;
                        break;
                    case 4279:
                        i3 = 11543;
                        break;
                    case 4280:
                        i3 = 11544;
                        break;
                    case 4281:
                        i3 = 11545;
                        break;
                    case 4282:
                        i3 = 11546;
                        break;
                    case 4283:
                        i3 = 11547;
                        break;
                    case 4284:
                        i3 = 11548;
                        break;
                    case 4285:
                        i3 = 11549;
                        break;
                    case 4286:
                        i3 = 11550;
                        break;
                    case 4287:
                        i3 = 11551;
                        break;
                    case 4288:
                        i3 = 11552;
                        break;
                    case 4289:
                        i3 = 11553;
                        break;
                    case 4290:
                        i3 = 11554;
                        break;
                    case 4291:
                        i3 = 11555;
                        break;
                    case 4292:
                        i3 = 11556;
                        break;
                    case 4293:
                        i3 = 11557;
                        break;
                    case 4295:
                        i3 = 11559;
                        break;
                    case 4301:
                        i3 = 11565;
                        break;
                    case 7838:
                        i3 = 223;
                        break;
                    case 8072:
                        i3 = 8064;
                        break;
                    case 8073:
                        i3 = 8065;
                        break;
                    case 8074:
                        i3 = 8066;
                        break;
                    case 8075:
                        i3 = 8067;
                        break;
                    case 8076:
                        i3 = 8068;
                        break;
                    case 8077:
                        i3 = 8069;
                        break;
                    case 8078:
                        i3 = 8070;
                        break;
                    case 8079:
                        i3 = 8071;
                        break;
                    case 8088:
                        i3 = 8080;
                        break;
                    case 8089:
                        i3 = 8081;
                        break;
                    case 8090:
                        i3 = 8082;
                        break;
                    case 8091:
                        i3 = 8083;
                        break;
                    case 8092:
                        i3 = 8084;
                        break;
                    case 8093:
                        i3 = 8085;
                        break;
                    case 8094:
                        i3 = 8086;
                        break;
                    case 8095:
                        i3 = 8087;
                        break;
                    case 8104:
                        i3 = 8096;
                        break;
                    case 8105:
                        i3 = 8097;
                        break;
                    case 8106:
                        i3 = 8098;
                        break;
                    case 8107:
                        i3 = 8099;
                        break;
                    case 8108:
                        i3 = 8100;
                        break;
                    case 8109:
                        i3 = 8101;
                        break;
                    case 8110:
                        i3 = 8102;
                        break;
                    case 8111:
                        i3 = 8103;
                        break;
                    case 8124:
                        i3 = 8115;
                        break;
                    case 8140:
                        i3 = 8131;
                        break;
                    case 8188:
                        i3 = 8179;
                        break;
                    case 8486:
                        i3 = 969;
                        break;
                    case 8490:
                        i3 = 107;
                        break;
                    case 8491:
                        i3 = 229;
                        break;
                    case 11362:
                        i3 = 619;
                        break;
                    case 11363:
                        i3 = 7549;
                        break;
                    case 11364:
                        i3 = 637;
                        break;
                    case 11373:
                        i3 = 593;
                        break;
                    case 11374:
                        i3 = 625;
                        break;
                    case 11375:
                        i3 = 592;
                        break;
                    case 11376:
                        i3 = 594;
                        break;
                    case 11390:
                        i3 = 575;
                        break;
                    case 11391:
                        i3 = 576;
                        break;
                    case 42877:
                        i3 = 7545;
                        break;
                    case 42893:
                        i3 = 613;
                        break;
                    case 42922:
                        i3 = 614;
                        break;
                }
            } else {
                i3 = i2 + ((properties << 5) >> 23);
            }
        }
        return i3;
    }

    @Override // java.lang.CharacterData
    int toUpperCase(int i2) {
        int i3 = i2;
        int properties = getProperties(i2);
        if ((properties & 65536) != 0) {
            if ((properties & 133955584) == 133955584) {
                switch (i2) {
                    case 181:
                        i3 = 924;
                        break;
                    case 383:
                        i3 = 83;
                        break;
                    case 575:
                        i3 = 11390;
                        break;
                    case 576:
                        i3 = 11391;
                        break;
                    case 592:
                        i3 = 11375;
                        break;
                    case 593:
                        i3 = 11373;
                        break;
                    case 594:
                        i3 = 11376;
                        break;
                    case DndEvent.PERFORM /* 613 */:
                        i3 = 42893;
                        break;
                    case DndEvent.EXIT /* 614 */:
                        i3 = 42922;
                        break;
                    case 619:
                        i3 = 11362;
                        break;
                    case 625:
                        i3 = 11374;
                        break;
                    case 637:
                        i3 = 11364;
                        break;
                    case 7545:
                        i3 = 42877;
                        break;
                    case 7549:
                        i3 = 11363;
                        break;
                    case 8064:
                        i3 = 8072;
                        break;
                    case 8065:
                        i3 = 8073;
                        break;
                    case 8066:
                        i3 = 8074;
                        break;
                    case 8067:
                        i3 = 8075;
                        break;
                    case 8068:
                        i3 = 8076;
                        break;
                    case 8069:
                        i3 = 8077;
                        break;
                    case 8070:
                        i3 = 8078;
                        break;
                    case 8071:
                        i3 = 8079;
                        break;
                    case 8080:
                        i3 = 8088;
                        break;
                    case 8081:
                        i3 = 8089;
                        break;
                    case 8082:
                        i3 = 8090;
                        break;
                    case 8083:
                        i3 = 8091;
                        break;
                    case 8084:
                        i3 = 8092;
                        break;
                    case 8085:
                        i3 = 8093;
                        break;
                    case 8086:
                        i3 = 8094;
                        break;
                    case 8087:
                        i3 = 8095;
                        break;
                    case 8096:
                        i3 = 8104;
                        break;
                    case 8097:
                        i3 = 8105;
                        break;
                    case 8098:
                        i3 = 8106;
                        break;
                    case 8099:
                        i3 = 8107;
                        break;
                    case 8100:
                        i3 = 8108;
                        break;
                    case 8101:
                        i3 = 8109;
                        break;
                    case 8102:
                        i3 = 8110;
                        break;
                    case 8103:
                        i3 = 8111;
                        break;
                    case 8115:
                        i3 = 8124;
                        break;
                    case 8126:
                        i3 = 921;
                        break;
                    case 8131:
                        i3 = 8140;
                        break;
                    case 8179:
                        i3 = 8188;
                        break;
                    case 11365:
                        i3 = 570;
                        break;
                    case 11366:
                        i3 = 574;
                        break;
                    case 11520:
                        i3 = 4256;
                        break;
                    case 11521:
                        i3 = 4257;
                        break;
                    case 11522:
                        i3 = 4258;
                        break;
                    case 11523:
                        i3 = 4259;
                        break;
                    case 11524:
                        i3 = 4260;
                        break;
                    case 11525:
                        i3 = 4261;
                        break;
                    case 11526:
                        i3 = 4262;
                        break;
                    case 11527:
                        i3 = 4263;
                        break;
                    case 11528:
                        i3 = 4264;
                        break;
                    case 11529:
                        i3 = 4265;
                        break;
                    case 11530:
                        i3 = 4266;
                        break;
                    case 11531:
                        i3 = 4267;
                        break;
                    case 11532:
                        i3 = 4268;
                        break;
                    case 11533:
                        i3 = 4269;
                        break;
                    case 11534:
                        i3 = 4270;
                        break;
                    case 11535:
                        i3 = 4271;
                        break;
                    case 11536:
                        i3 = 4272;
                        break;
                    case 11537:
                        i3 = 4273;
                        break;
                    case 11538:
                        i3 = 4274;
                        break;
                    case 11539:
                        i3 = 4275;
                        break;
                    case 11540:
                        i3 = 4276;
                        break;
                    case 11541:
                        i3 = 4277;
                        break;
                    case 11542:
                        i3 = 4278;
                        break;
                    case 11543:
                        i3 = 4279;
                        break;
                    case 11544:
                        i3 = 4280;
                        break;
                    case 11545:
                        i3 = 4281;
                        break;
                    case 11546:
                        i3 = 4282;
                        break;
                    case 11547:
                        i3 = 4283;
                        break;
                    case 11548:
                        i3 = 4284;
                        break;
                    case 11549:
                        i3 = 4285;
                        break;
                    case 11550:
                        i3 = 4286;
                        break;
                    case 11551:
                        i3 = 4287;
                        break;
                    case 11552:
                        i3 = 4288;
                        break;
                    case 11553:
                        i3 = 4289;
                        break;
                    case 11554:
                        i3 = 4290;
                        break;
                    case 11555:
                        i3 = 4291;
                        break;
                    case 11556:
                        i3 = 4292;
                        break;
                    case 11557:
                        i3 = 4293;
                        break;
                    case 11559:
                        i3 = 4295;
                        break;
                    case 11565:
                        i3 = 4301;
                        break;
                }
            } else {
                i3 = i2 - ((properties << 5) >> 23);
            }
        }
        return i3;
    }

    @Override // java.lang.CharacterData
    int toTitleCase(int i2) {
        int upperCase = i2;
        int properties = getProperties(i2);
        if ((properties & 32768) != 0) {
            if ((properties & 65536) == 0) {
                upperCase = i2 + 1;
            } else if ((properties & 131072) == 0) {
                upperCase = i2 - 1;
            }
        } else if ((properties & 65536) != 0) {
            upperCase = toUpperCase(i2);
        }
        return upperCase;
    }

    @Override // java.lang.CharacterData
    int digit(int i2, int i3) {
        int i4 = -1;
        if (i3 >= 2 && i3 <= 36) {
            int properties = getProperties(i2);
            if ((properties & 31) == 9) {
                i4 = (i2 + ((properties & 992) >> 5)) & 31;
            } else if ((properties & 3072) == 3072) {
                i4 = ((i2 + ((properties & 992) >> 5)) & 31) + 10;
            }
        }
        if (i4 < i3) {
            return i4;
        }
        return -1;
    }

    @Override // java.lang.CharacterData
    int getNumericValue(int i2) {
        int i3;
        int properties = getProperties(i2);
        switch (properties & 3072) {
            case 0:
            default:
                i3 = -1;
                break;
            case 1024:
                i3 = (i2 + ((properties & 992) >> 5)) & 31;
                break;
            case 2048:
                switch (i2) {
                    case 3057:
                        i3 = 100;
                        break;
                    case 3058:
                        i3 = 1000;
                        break;
                    case 3441:
                        i3 = 100;
                        break;
                    case 3442:
                        i3 = 1000;
                        break;
                    case 4981:
                        i3 = 40;
                        break;
                    case 4982:
                        i3 = 50;
                        break;
                    case 4983:
                        i3 = 60;
                        break;
                    case 4984:
                        i3 = 70;
                        break;
                    case 4985:
                        i3 = 80;
                        break;
                    case 4986:
                        i3 = 90;
                        break;
                    case 4987:
                        i3 = 100;
                        break;
                    case 4988:
                        i3 = 10000;
                        break;
                    case 8543:
                        i3 = 1;
                        break;
                    case 8556:
                        i3 = 50;
                        break;
                    case 8557:
                        i3 = 100;
                        break;
                    case 8558:
                        i3 = 500;
                        break;
                    case 8559:
                        i3 = 1000;
                        break;
                    case 8572:
                        i3 = 50;
                        break;
                    case 8573:
                        i3 = 100;
                        break;
                    case 8574:
                        i3 = 500;
                        break;
                    case 8575:
                        i3 = 1000;
                        break;
                    case 8576:
                        i3 = 1000;
                        break;
                    case 8577:
                        i3 = 5000;
                        break;
                    case 8578:
                        i3 = 10000;
                        break;
                    case 8582:
                        i3 = 50;
                        break;
                    case 8583:
                        i3 = 50000;
                        break;
                    case 8584:
                        i3 = 100000;
                        break;
                    case 12875:
                        i3 = 40;
                        break;
                    case 12876:
                        i3 = 50;
                        break;
                    case 12877:
                        i3 = 60;
                        break;
                    case 12878:
                        i3 = 70;
                        break;
                    case 12879:
                        i3 = 80;
                        break;
                    case 12892:
                        i3 = 32;
                        break;
                    case 12893:
                        i3 = 33;
                        break;
                    case 12894:
                        i3 = 34;
                        break;
                    case 12895:
                        i3 = 35;
                        break;
                    case 12977:
                        i3 = 36;
                        break;
                    case 12978:
                        i3 = 37;
                        break;
                    case 12979:
                        i3 = 38;
                        break;
                    case 12980:
                        i3 = 39;
                        break;
                    case 12981:
                        i3 = 40;
                        break;
                    case 12982:
                        i3 = 41;
                        break;
                    case 12983:
                        i3 = 42;
                        break;
                    case 12984:
                        i3 = 43;
                        break;
                    case 12985:
                        i3 = 44;
                        break;
                    case 12986:
                        i3 = 45;
                        break;
                    case 12987:
                        i3 = 46;
                        break;
                    case 12988:
                        i3 = 47;
                        break;
                    case 12989:
                        i3 = 48;
                        break;
                    case 12990:
                        i3 = 49;
                        break;
                    case 12991:
                        i3 = 50;
                        break;
                    default:
                        i3 = -2;
                        break;
                }
            case 3072:
                i3 = ((i2 + ((properties & 992) >> 5)) & 31) + 10;
                break;
        }
        return i3;
    }

    @Override // java.lang.CharacterData
    boolean isWhitespace(int i2) {
        return (getProperties(i2) & CharacterType.SPACE_MASK) == 16384;
    }

    @Override // java.lang.CharacterData
    byte getDirectionality(int i2) {
        byte properties = (byte) ((getProperties(i2) & 2013265920) >> 27);
        if (properties == 15) {
            switch (i2) {
                case 8234:
                    properties = 14;
                    break;
                case 8235:
                    properties = 16;
                    break;
                case 8236:
                    properties = 18;
                    break;
                case 8237:
                    properties = 15;
                    break;
                case 8238:
                    properties = 17;
                    break;
                default:
                    properties = -1;
                    break;
            }
        }
        return properties;
    }

    @Override // java.lang.CharacterData
    boolean isMirrored(int i2) {
        return (getProperties(i2) & Integer.MIN_VALUE) != 0;
    }

    @Override // java.lang.CharacterData
    int toUpperCaseEx(int i2) {
        int i3 = i2;
        int properties = getProperties(i2);
        if ((properties & 65536) != 0) {
            if ((properties & 133955584) != 133955584) {
                i3 = i2 - ((properties << 5) >> 23);
            } else {
                switch (i2) {
                    case 181:
                        i3 = 924;
                        break;
                    case 383:
                        i3 = 83;
                        break;
                    case 575:
                        i3 = 11390;
                        break;
                    case 576:
                        i3 = 11391;
                        break;
                    case 592:
                        i3 = 11375;
                        break;
                    case 593:
                        i3 = 11373;
                        break;
                    case 594:
                        i3 = 11376;
                        break;
                    case DndEvent.PERFORM /* 613 */:
                        i3 = 42893;
                        break;
                    case DndEvent.EXIT /* 614 */:
                        i3 = 42922;
                        break;
                    case 619:
                        i3 = 11362;
                        break;
                    case 625:
                        i3 = 11374;
                        break;
                    case 637:
                        i3 = 11364;
                        break;
                    case 7545:
                        i3 = 42877;
                        break;
                    case 7549:
                        i3 = 11363;
                        break;
                    case 8126:
                        i3 = 921;
                        break;
                    case 11365:
                        i3 = 570;
                        break;
                    case 11366:
                        i3 = 574;
                        break;
                    case 11520:
                        i3 = 4256;
                        break;
                    case 11521:
                        i3 = 4257;
                        break;
                    case 11522:
                        i3 = 4258;
                        break;
                    case 11523:
                        i3 = 4259;
                        break;
                    case 11524:
                        i3 = 4260;
                        break;
                    case 11525:
                        i3 = 4261;
                        break;
                    case 11526:
                        i3 = 4262;
                        break;
                    case 11527:
                        i3 = 4263;
                        break;
                    case 11528:
                        i3 = 4264;
                        break;
                    case 11529:
                        i3 = 4265;
                        break;
                    case 11530:
                        i3 = 4266;
                        break;
                    case 11531:
                        i3 = 4267;
                        break;
                    case 11532:
                        i3 = 4268;
                        break;
                    case 11533:
                        i3 = 4269;
                        break;
                    case 11534:
                        i3 = 4270;
                        break;
                    case 11535:
                        i3 = 4271;
                        break;
                    case 11536:
                        i3 = 4272;
                        break;
                    case 11537:
                        i3 = 4273;
                        break;
                    case 11538:
                        i3 = 4274;
                        break;
                    case 11539:
                        i3 = 4275;
                        break;
                    case 11540:
                        i3 = 4276;
                        break;
                    case 11541:
                        i3 = 4277;
                        break;
                    case 11542:
                        i3 = 4278;
                        break;
                    case 11543:
                        i3 = 4279;
                        break;
                    case 11544:
                        i3 = 4280;
                        break;
                    case 11545:
                        i3 = 4281;
                        break;
                    case 11546:
                        i3 = 4282;
                        break;
                    case 11547:
                        i3 = 4283;
                        break;
                    case 11548:
                        i3 = 4284;
                        break;
                    case 11549:
                        i3 = 4285;
                        break;
                    case 11550:
                        i3 = 4286;
                        break;
                    case 11551:
                        i3 = 4287;
                        break;
                    case 11552:
                        i3 = 4288;
                        break;
                    case 11553:
                        i3 = 4289;
                        break;
                    case 11554:
                        i3 = 4290;
                        break;
                    case 11555:
                        i3 = 4291;
                        break;
                    case 11556:
                        i3 = 4292;
                        break;
                    case 11557:
                        i3 = 4293;
                        break;
                    case 11559:
                        i3 = 4295;
                        break;
                    case 11565:
                        i3 = 4301;
                        break;
                    default:
                        i3 = -1;
                        break;
                }
            }
        }
        return i3;
    }

    @Override // java.lang.CharacterData
    char[] toUpperCaseCharArray(int i2) {
        char[] cArr = {(char) i2};
        int iFindInCharMap = findInCharMap(i2);
        if (iFindInCharMap != -1) {
            cArr = charMap[iFindInCharMap][1];
        }
        return cArr;
    }

    int findInCharMap(int i2) {
        int i3;
        if (charMap == null || charMap.length == 0) {
            return -1;
        }
        int i4 = 0;
        int length = charMap.length;
        int i5 = length;
        while (true) {
            i3 = i5 / 2;
            if (length - i4 <= 1) {
                break;
            }
            if (i2 >= charMap[i3][0][0]) {
                i4 = i3;
            } else {
                length = i3;
            }
            i5 = length + i4;
        }
        if (i2 == charMap[i3][0][0]) {
            return i3;
        }
        return -1;
    }

    private CharacterData00() {
    }
}
