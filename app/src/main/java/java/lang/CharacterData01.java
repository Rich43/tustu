package java.lang;

import jdk.nashorn.internal.runtime.regexp.joni.constants.StackType;
import jdk.nashorn.internal.runtime.regexp.joni.encoding.CharacterType;

/* loaded from: rt.jar:java/lang/CharacterData01.class */
class CharacterData01 extends CharacterData {
    static final CharacterData instance;

    /* renamed from: X, reason: collision with root package name */
    static final char[] f12424X;

    /* renamed from: Y, reason: collision with root package name */
    static final char[] f12425Y;

    /* renamed from: A, reason: collision with root package name */
    static final int[] f12426A;
    static final String A_DATA = "��瀅��瀅砀����瀅��瀅砀��砀��砀����\u0018栀\u0018��\u0018砀��砀����\u074b��\u074b��\u074b��\u074b��ѫ��\u058b��ࠋ��ࠋ��ࠋ砀����\u001c��\u001c��\u001c栀砊栀砊栀矪栀瑊栀瞪栀琪栀砊栀益栀睊栀砊栀砊栀癪栀甪栀甊栀瓪栀瓪栀瓊栀璪栀璊栀瓊栀畊栀甪栀甊栀瓪栀瓊栀眪栀砊栀癊栀砊栀ࠋ栀ࠋ栀ࠋ栀ࠋ栀\u001c栀\u001c栀\u001c栀ۋ砀����\u001c䀀〆��Ы��ҋ��ԋ��ࠋ��瀅��砊��砊砀��砀����\u0018��\u0018��瘊��瘊��盪��琊��砊¢瀁¢瀁¡瀂¡瀂��㐉��㐉ࠀ瀅ࠀ瀅ࠀ瀅砀��砀��ࠀ瀅砀��ࠀ\u0018ࠀԫࠀԫࠀԫࠀ\u05ebࠀ܋ࠀࠋࠀࠋࠀࠋࠀիࠀ٫ࠀދࠀࠋࠀԋࠀԋ砀��栀\u0018ࠀ瀅䀀〆䀀〆䀀〆砀��䀀〆䀀〆砀��䀀〆䀀〆䀀〆砀��砀��䀀〆ࠀЫࠀЫࠀӋࠀ\u05ebࠀ\u0018ࠀ\u0018ࠀ\u0018砀��ࠀ瀅ࠀҋࠀࠋࠀ\u0018栀\u0018栀\u0018ࠀ\u05cbࠀ۫\u3000Ы\u3000Ы\u3000Ջ\u3000٫\u3000ࠋ\u3000ࠋ\u3000ࠋ砀����〈䀀〆��〈��瀅䀀〆��\u0018��\u0018��\u0018栀\u05eb栀\u05eb栀܋栀Ы��㝉��㝉��〈��〈䀀〆��〈��〈䀀〆��\u0018��တ��㘉��㘉䀀〆��瀅��瀅䀀〆䀀〆䀀〆��㕉��㕉��瀅��〈��〈��瀅��瀅��\u0018��〈䀀〆��瑊��瑊��睪��睪��睪��皪��皪��皪��皪��疊��疊��疊��瑪��瑪��瑪��矪��矪��矊��矊��矊��皪��皊��皊��皊��砊��砊��疪��疪��疪��疊��甪��甊��甊��瓪��瓊��璪��瓊��瓊��璪��璊��璊��瑪��瑪��瑊��琪��琊��眊��眊��眊��癊��癊��癊��癊��瘪��瘪��瘊��甪��甪��〈砀��䀀〆��瀄��瀄��瀄��\u001c砀����\u001c��〈��〈��〈��〈䠀တ䠀တ䠀တ䠀တ䀀〆䀀〆��\u001c䀀〆栀\u001c栀\u001c砀����Ы��Ы��Ջ��٫��瀁��瀁��瀂��瀂��瀂砀����瀁砀��砀����瀁砀����瀂��瀁��\u0019��瀂\ue800\u0019��瀁��瀂᠀㙉᠀㙉᠀㔉᠀㔉᠀㟉᠀㟉᠀㚉᠀㚉᠀㕉᠀㕉က瀅က瀅砀��က瀅က瀅砀��栀\u0019栀\u0019砀��栀\u001c᠀Ћ᠀߫᠀߫᠀߫᠀߫砀��";

    /* renamed from: B, reason: collision with root package name */
    static final char[] f12427B;
    static final /* synthetic */ boolean $assertionsDisabled;

    static {
        $assertionsDisabled = !CharacterData01.class.desiredAssertionStatus();
        instance = new CharacterData01();
        f12424X = "��\u0001\u0002\u0003\u0004\u0004\u0004\u0005\u0006\u0007\b\t\n\u0003\u000b\f\u0003\u0003\u0003\u0003\r\u0004\u000e\u0003\u000f\u0010\u0011\u0003\u0012\u0004\u0013\u0003\u0014\u0015\u0016\u0004\u0017\u0018\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0019\u001a\u001b\u0003\u0003\u0003\u0003\u0003\u001c\u001d\u0003\u0003\u001e\u001f\u0003\u0003 !\"#\u0003\u0003\u0003\u0003\u001e$%&\u0003\u0003\u0003\u0003\u001e\u001e'\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003(\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003)*+,-./0123\u0003456\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u00047\u0018\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0004\u0004\u0004\u0004\u0004\u0004\u0004\u0004\u0004\u0004\u0004\u0004\u0004\u0004\u0004\u0004\u0004\u0004\u0004\u0004\u0004\u0004\u0004\u0004\u0004\u0004\u00048\u0003\u0003\u0003\u00039:;<\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0004\u0004\u0004\u0004\u0004\u0004\u0004\u0004\u0004\u0004\u0004\u0004\u0004\u0004\u0004\u0004\u0004\u0004\u0004\u0004\u0004\u0004\u0004\u0004\u0004\u0004\u0004\u0004\u0004\u0004\u0004\u0004\u00048\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0004\u0004\u0004\u0004\u0004\u0004\u0004\u0004\u0004\u0004\u0004\u0004\u0004\u0004\u0004\u0004\u0004=\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0004\u0004>?@\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003A\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003BBBBBBBCBDBEFGH\u0003IIJ\u0003\u0003\u0003\u0003\u0003IIKL\u0003\u0003\u0003\u0003MNOPQRSTUVWXYMNZP[\\]T^_`abcdefgh\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003ijklmn\u0003o\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003IpIIqrs\u0003tuBvw\u0003\u0003xywz\u0003\u0003\u0003\u0003\u0003I{I|qI}~I\u007f\u0080IIII\u0081I\u0082\u0083\u0084\u0003\u0003\u0003\u0085II\u0086\u0003II\u0087\u0003IIIq\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003".toCharArray();
        f12425Y = "������������\u0001������������������������\u0002������������������\u0002��\u0001��������������\u0003��������������\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003����������������������������������������������������������\u0002\u0003\u0003\u0004\u0005\u0003\u0006\u0007\u0007\u0007\u0007\b\t\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u0003\u000b\f\f\f\f\r\u000e\r\r\u000f\r\r\u0010\u0011\r\r\u0012\u0013\u0014\u0015\u0016\u0017\u0018\u0019\r\r\r\r\r\r\u001a\u001b\u001c\u001d\u001e\u001e\u001e\u001e\u001e\u001e\u001e\u001e\u001f\u0003\u0003\u001e\u001e\u001e\u001e\u001e\u001e\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f \u0003����������������������������\u0002\u0003����������������\u0002\u0003\u0003\u0003\u0003\u0003\u0003\u0003������������������������������\u0002!\"\u0003\u0003\u0003\u0003\u0003\u0003����������������#��������$\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003������������������������������%����\u0003\u0003��������&'(\u0003\u0003\u0003\u0003\u0003))))))))))))))))))))********************����������������������������������������������\u0003+++++\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003,,,\u0003-,,,,,,,,,,,,,,,,,,,,,,.-\u0003-.,,,,,,,,,,,/0123,,,,,,,,,,,456\u00037,,,,,,,,,,,,,\u0003\u0003/,,,,,,,,,,,,,,,,,,,,,,,,,,,,\u0003\u0003\u0003,89:;\u0003\u000399,,.,.,,,,,,,,,,,,,\u0003\u0003<=\u0003>??@3\u0003\u0003\u0003\u0003AAAAB\u0003\u0003\u0003,,,,,,,,,,,,,,CD,,,,,,,,,,,\u00037EEE,,,,,,,,,,,\u000300F3,,,,,,,,,-\u0003\u000300F3,,,,-\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003GGGGGHIIIIIIIIIJKL����������������������������������������������������9999999MNNN\u0003\u0003OOOOOP\u001c\u001c\u001c\u001cQQQQQ\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003<L��������������������������������������������RK9STMUNN\u0003\u0003\u0003\u0003\u0003\u0003\u0003������������������������\u0002\u0003\u0003\u0003VVVVV\u0003\u0003\u00039W����������������������������������X99K99Y=ZZZZZNN\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u00039L����������������������������������������������[R9999S\\��]N\u0005\u0003\u0003\u0003VVVVV\u0003\u0003\u0003����������XKR999^\u0003\u0003\u0003\u0003��������������\u0002\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003____```abbcddddeefghhhbijklmdnopqrstuvvwxyzk{kkkk$\u0003\u0003\u0003\u0003\u0003\u0003NN\u0003\u0003\u0003\u0003\u0003\u0003������������������������\u0002\u0003\u0003\u0003����\u0002\u0003\u0003\u0003\u0003\u0003[RRRRRRRRRRRRRRRRRRRRRR|\u0003\u0003\u0003\u0003\u0003\u0003\u0003><}~~~~~~��\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f\u0003\u0003\u0003\u0003\u0003\f\f\f\u007f\u000b\f\f\f\f\f\f\f\f\f\f\f\f\f\u0080^<\f\u0080\u0081\u0081\u0082\u0083\u0083\u0083\u0084<<<\u0085 <<<\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f<<\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f\u0003\u001e\u001e\u001e\u001e\u001e\u001e\u001e\u001e\u001e\u001e\u001e\u001e\u001e\u001e\u001e\u001e\u001e<\u0086\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u001e\u001e\u001e\u001e\u001e\u001e\u001e\u001e\u001e\u001e\u001e\u0087\u0003\u0003\u0003\u0003\u0088\u0088\u0088\u0088\u0088\u0089\n\n\n\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u008a\u008a\u008a\u008a\u008a\u008a\u008a\u008a\u008a\u008a\u008a\u008a\u008a\u008b\u008b\u008b\u008b\u008b\u008b\u008b\u008b\u008b\u008b\u008b\u008b\u008b\u008a\u008a\u008a\u008a\u008a\u008a\u008a\u008a\u008a\u008a\u008a\u008a\u008a\u008b\u008b\u008b\u008c\u008b\u008b\u008b\u008b\u008b\u008b\u008b\u008b\u008b\u008a\u008a\u008a\u008a\u008a\u008a\u008a\u008a\u008a\u008a\u008a\u008a\u008a\u008b\u008b\u008b\u008b\u008b\u008b\u008b\u008b\u008b\u008b\u008b\u008b\u008b\u008d\u008a\u0003\u008d\u008e\u008d\u008e\u008a\u008d\u008a\u008a\u008a\u008a\u008b\u008b\u008f\u008f\u008b\u008b\u008b\u008f\u008b\u008b\u008b\u008b\u008b\u008a\u008a\u008a\u008a\u008a\u008a\u008a\u008a\u008a\u008a\u008a\u008a\u008a\u008b\u008b\u008b\u008b\u008b\u008b\u008b\u008b\u008b\u008b\u008b\u008b\u008b\u008a\u008e\u008a\u008d\u008e\u008a\u008a\u008a\u008d\u008a\u008a\u008a\u008d\u008b\u008b\u008b\u008b\u008b\u008b\u008b\u008b\u008b\u008b\u008b\u008b\u008b\u008a\u008e\u008a\u008d\u008a\u008a\u008d\u008d\u0003\u008a\u008a\u008a\u008d\u008b\u008b\u008b\u008b\u008b\u008b\u008b\u008b\u008b\u008b\u008b\u008b\u008b\u008a\u008a\u008a\u008a\u008a\u008a\u008a\u008a\u008a\u008a\u008a\u008a\u008a\u008b\u008b\u008b\u008b\u008b\u008b\u008b\u008b\u008b\u008b\u008b\u008b\u008b\u008a\u008a\u008a\u008a\u008a\u008a\u008a\u008b\u008b\u008b\u008b\u008b\u008b\u008b\u008b\u008b\u008a\u008b\u008b\u008b\u008b\u008b\u008b\u008b\u008b\u008b\u008b\u008b\u008b\u008b\u008a\u008a\u008a\u008a\u008a\u008a\u008a\u008a\u008a\u008a\u008a\u008a\u008a\u008b\u008b\u008b\u008b\u008b\u008b\u008b\u008b\u008b\u008b\u008b\u008b\u008b\u008a\u008a\u008a\u008a\u008a\u008a\u008a\u008a\u008b\u008b\u008b\u0003\u008a\u008a\u008a\u008a\u008a\u008a\u008a\u008a\u008a\u008a\u008a\u008a\u0090\u008b\u008b\u008b\u008b\u008b\u008b\u008b\u008b\u008b\u008b\u008b\u008b\u0091\u008b\u008b\u008b\u008a\u008a\u008a\u008a\u008a\u008a\u008a\u008a\u008a\u008a\u008a\u008a\u0090\u008b\u008b\u008b\u008b\u008b\u008b\u008b\u008b\u008b\u008b\u008b\u008b\u0091\u008b\u008b\u008b\u008a\u008a\u008a\u008a\u008a\u008a\u008a\u008a\u008a\u008a\u008a\u008a\u0090\u008b\u008b\u008b\u008b\u008b\u008b\u008b\u008b\u008b\u008b\u008b\u008b\u0091\u008b\u008b\u008b\u008a\u008a\u008a\u008a\u008a\u008a\u008a\u008a\u008a\u008a\u008a\u008a\u0090\u008b\u008b\u008b\u008b\u008b\u008b\u008b\u008b\u008b\u008b\u008b\u008b\u0091\u008b\u008b\u008b\u008a\u008a\u008a\u008a\u008a\u008a\u008a\u008a\u008a\u008a\u008a\u008a\u0090\u008b\u008b\u008b\u008b\u008b\u008b\u008b\u008b\u008b\u008b\u008b\u008b\u0091\u008b\u008b\u008b\u0092\u0003\u0093\u0093\u0093\u0093\u0093\u0094\u0094\u0094\u0094\u0094\u0095\u0095\u0095\u0095\u0095\u0096\u0096\u0096\u0096\u0096\u0097\u0097\u0097\u0097\u0097\u0098\u0098\u0099\u0098\u0098\u0098\u0098\u0098\u0098\u0098\u0098\u0098\u0098\u0098\u0098\u0098\u0099\u009a\u009a\u0099\u0099\u0098\u0098\u0098\u0098\u009a\u0098\u0098\u0099\u0099\u0003\u0003\u0003\u009a\u0003\u0099\u0099\u0099\u0099\u0098\u0099\u009a\u009a\u0099\u0099\u0099\u0099\u0099\u0099\u009a\u009a\u0099\u0098\u009a\u0098\u0098\u0098\u009a\u0098\u0098\u0099\u0098\u009a\u009a\u0098\u0098\u0098\u0098\u0098\u0099\u0098\u0098\u0098\u0098\u0098\u0098\u0098\u0098\u0003\u0003\u0099\u0098\u0099\u0098\u0098\u0099\u0098\u0098\u0098\u0098\u0098\u0098\u0098\u0098\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u009b\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u001e\u001e\u001e\u001e\u001e\u001e\u0003\u0003\u001e\u001e\u001e\u001e\u001e\u001e\u001e\u001e\u001e\u001e\u001e\u001e\u001e\u001e\u001e\u001e\u001e\u001e\u0003\u0003\u0003\u0003\u0003\u0003\u001e\u001e\u001e\u001e\u001e\u001e\u001e\u0087\u009c\u001e\u001e\u001e\u001e\u001e\u001e\u0087\u009c\u001e\u001e\u001e\u001e\u001e\u001e\u001e\u009c\u001e\u001e\u001e\u001e\u001e\u001e\u001e\u009d\u009e\u009e\u009e\u009e\u009f\u0003\u0003\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f\u007f\f\f\f\f\f\f\f\f\f\f\f\f\f\u001e\u0003\u0003\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f\u007f\u0003\u0003\u0003\u0003\u0003\f\f\f\f\f\f\f\f\f\f\f\f\f\f\u007f\u0003\u0003\u0003\u0003\u0003\u0003\f\f\f\f\f\f\f\f\f\f\f\f\u007f\u0003\u0003\u0003\f\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0087\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u001e\u001e\u001e\u009c\u001e\u001e\u001e\u001e\u001e\u001e\u001e\u001e\u001e\u001e\u001e\u001e\u001e\u001e\u001e\u001e\u001e\u001e\u0087\u0003\u001e\u001e\u0087\u001e\u001e\u0087\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u001e\u001e\u001e\u001e\u001e\u001e\u001e\u001e\u0087\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u001e\u001e\u001e\u001e\u001e\u001e\u001e\u001e\u001e\u001e\u001e\u001e\u001e\u001e\u001e\u0087\u0087\u001e\u001e\u001e\u001e\u001e\u001e\u001e\u001e\u001e\u001e\u001e\u001e\u001e\u001e\u001e\u001e\u001e\u001e\u001e\u001e\u001e\u001e\u001e\u001e\u001e\u001e\u001e\u009c\u001e\u0087\u0003\u001e\u001e\u001e\u001e\u001e\u001e\u001e\u001e\u001e\u001e\u001e\u001e\u001e\u001e\u001e\u0003\u001e\u001e\u0003\u0003\u0003\u0003\u0003\u0003\u001e\u001e\u001e\u001e\u001e\u001e\u001e\u001e\u001e\u001e\u001e\u001e\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u009c\u001e\u001e\u0087\u0003\u009c\u001e\u001e\u001e\u001e\u001e\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u001e\u001e\u001e\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003".toCharArray();
        f12426A = new int[320];
        f12427B = "����������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������\u0004\u0004\u0004��\u0004\u0004��������������������������������������������������������������\u0004\u0004\u0004����������������������\u0004\u0004\u0004\u0004\u0004����������\u0004����\u0004\u0004��������\u0004��������������������������������������������������������������������������������������������������������������������������������\u0004����������������������������������������������������������������������������������������������������������������������������������������������".toCharArray();
        char[] charArray = A_DATA.toCharArray();
        if (!$assertionsDisabled && charArray.length != 640) {
            throw new AssertionError();
        }
        int i2 = 0;
        int i3 = 0;
        while (i2 < 640) {
            int i4 = i2;
            int i5 = i2 + 1;
            int i6 = charArray[i4] << 16;
            int i7 = i3;
            i3++;
            i2 = i5 + 1;
            f12426A[i7] = i6 | charArray[i5];
        }
    }

    @Override // java.lang.CharacterData
    int getProperties(int i2) {
        char c2 = (char) i2;
        return f12426A[(f12425Y[(f12424X[c2 >> 5] << 4) | ((c2 >> 1) & 15)] << 1) | (c2 & 1)];
    }

    int getPropertiesEx(int i2) {
        char c2 = (char) i2;
        return f12427B[(f12425Y[(f12424X[c2 >> 5] << 4) | ((c2 >> 1) & 15)] << 1) | (c2 & 1)];
    }

    @Override // java.lang.CharacterData
    int getType(int i2) {
        return getProperties(i2) & 31;
    }

    @Override // java.lang.CharacterData
    boolean isOtherLowercase(int i2) {
        return (getPropertiesEx(i2) & 1) != 0;
    }

    @Override // java.lang.CharacterData
    boolean isOtherUppercase(int i2) {
        return (getPropertiesEx(i2) & 2) != 0;
    }

    @Override // java.lang.CharacterData
    boolean isOtherAlphabetic(int i2) {
        return (getPropertiesEx(i2) & 4) != 0;
    }

    @Override // java.lang.CharacterData
    boolean isIdeographic(int i2) {
        return (getPropertiesEx(i2) & 16) != 0;
    }

    @Override // java.lang.CharacterData
    boolean isJavaIdentifierStart(int i2) {
        return (getProperties(i2) & CharacterType.SPACE_MASK) >= 20480;
    }

    @Override // java.lang.CharacterData
    boolean isJavaIdentifierPart(int i2) {
        return (getProperties(i2) & StackType.NULL_CHECK_START) != 0;
    }

    @Override // java.lang.CharacterData
    boolean isUnicodeIdentifierStart(int i2) {
        return (getProperties(i2) & CharacterType.SPACE_MASK) == 28672;
    }

    @Override // java.lang.CharacterData
    boolean isUnicodeIdentifierPart(int i2) {
        return (getProperties(i2) & 4096) != 0;
    }

    @Override // java.lang.CharacterData
    boolean isIdentifierIgnorable(int i2) {
        return (getProperties(i2) & CharacterType.SPACE_MASK) == 4096;
    }

    @Override // java.lang.CharacterData
    int toLowerCase(int i2) {
        int i3 = i2;
        int properties = getProperties(i2);
        if ((properties & 131072) != 0) {
            i3 = i2 + ((properties << 5) >> 23);
        }
        return i3;
    }

    @Override // java.lang.CharacterData
    int toUpperCase(int i2) {
        int i3 = i2;
        int properties = getProperties(i2);
        if ((properties & 65536) != 0) {
            i3 = i2 - ((properties << 5) >> 23);
        }
        return i3;
    }

    @Override // java.lang.CharacterData
    int toTitleCase(int i2) {
        int upperCase = i2;
        int properties = getProperties(i2);
        if ((properties & 32768) != 0) {
            if ((properties & 65536) == 0) {
                upperCase = i2 + 1;
            } else if ((properties & 131072) == 0) {
                upperCase = i2 - 1;
            }
        } else if ((properties & 65536) != 0) {
            upperCase = toUpperCase(i2);
        }
        return upperCase;
    }

    @Override // java.lang.CharacterData
    int digit(int i2, int i3) {
        int i4 = -1;
        if (i3 >= 2 && i3 <= 36) {
            int properties = getProperties(i2);
            if ((properties & 31) == 9) {
                i4 = (i2 + ((properties & 992) >> 5)) & 31;
            } else if ((properties & 3072) == 3072) {
                i4 = ((i2 + ((properties & 992) >> 5)) & 31) + 10;
            }
        }
        if (i4 < i3) {
            return i4;
        }
        return -1;
    }

    @Override // java.lang.CharacterData
    int getNumericValue(int i2) {
        int i3;
        int properties = getProperties(i2);
        switch (properties & 3072) {
            case 0:
            default:
                i3 = -1;
                break;
            case 1024:
                i3 = (i2 + ((properties & 992) >> 5)) & 31;
                break;
            case 2048:
                switch (i2) {
                    case 65811:
                        i3 = 40;
                        break;
                    case 65812:
                        i3 = 50;
                        break;
                    case 65813:
                        i3 = 60;
                        break;
                    case 65814:
                        i3 = 70;
                        break;
                    case 65815:
                        i3 = 80;
                        break;
                    case 65816:
                        i3 = 90;
                        break;
                    case 65817:
                        i3 = 100;
                        break;
                    case 65818:
                        i3 = 200;
                        break;
                    case 65819:
                        i3 = 300;
                        break;
                    case 65820:
                        i3 = 400;
                        break;
                    case 65821:
                        i3 = 500;
                        break;
                    case 65822:
                        i3 = 600;
                        break;
                    case 65823:
                        i3 = 700;
                        break;
                    case 65824:
                        i3 = 800;
                        break;
                    case 65825:
                        i3 = 900;
                        break;
                    case 65826:
                        i3 = 1000;
                        break;
                    case 65827:
                        i3 = 2000;
                        break;
                    case 65828:
                        i3 = 3000;
                        break;
                    case 65829:
                        i3 = 4000;
                        break;
                    case 65830:
                        i3 = 5000;
                        break;
                    case 65831:
                        i3 = 6000;
                        break;
                    case 65832:
                        i3 = 7000;
                        break;
                    case 65833:
                        i3 = 8000;
                        break;
                    case 65834:
                        i3 = 9000;
                        break;
                    case 65835:
                        i3 = 10000;
                        break;
                    case 65836:
                        i3 = 20000;
                        break;
                    case 65837:
                        i3 = 30000;
                        break;
                    case 65838:
                        i3 = 40000;
                        break;
                    case 65839:
                        i3 = 50000;
                        break;
                    case 65840:
                        i3 = 60000;
                        break;
                    case 65841:
                        i3 = 70000;
                        break;
                    case 65842:
                        i3 = 80000;
                        break;
                    case 65843:
                        i3 = 90000;
                        break;
                    case 65860:
                        i3 = 50;
                        break;
                    case 65861:
                        i3 = 500;
                        break;
                    case 65862:
                        i3 = 5000;
                        break;
                    case 65863:
                        i3 = 50000;
                        break;
                    case 65866:
                        i3 = 50;
                        break;
                    case 65867:
                        i3 = 100;
                        break;
                    case 65868:
                        i3 = 500;
                        break;
                    case 65869:
                        i3 = 1000;
                        break;
                    case 65870:
                        i3 = 5000;
                        break;
                    case 65873:
                        i3 = 50;
                        break;
                    case 65874:
                        i3 = 100;
                        break;
                    case 65875:
                        i3 = 500;
                        break;
                    case 65876:
                        i3 = 1000;
                        break;
                    case 65877:
                        i3 = 10000;
                        break;
                    case 65878:
                        i3 = 50000;
                        break;
                    case 65894:
                        i3 = 50;
                        break;
                    case 65895:
                        i3 = 50;
                        break;
                    case 65896:
                        i3 = 50;
                        break;
                    case 65897:
                        i3 = 50;
                        break;
                    case 65898:
                        i3 = 100;
                        break;
                    case 65899:
                        i3 = 300;
                        break;
                    case 65900:
                        i3 = 500;
                        break;
                    case 65901:
                        i3 = 500;
                        break;
                    case 65902:
                        i3 = 500;
                        break;
                    case 65903:
                        i3 = 500;
                        break;
                    case 65904:
                        i3 = 500;
                        break;
                    case 65905:
                        i3 = 1000;
                        break;
                    case 65906:
                        i3 = 5000;
                        break;
                    case 65908:
                        i3 = 50;
                        break;
                    case 66339:
                        i3 = 50;
                        break;
                    case 66369:
                        i3 = 90;
                        break;
                    case 66378:
                        i3 = 900;
                        break;
                    case 66517:
                        i3 = 100;
                        break;
                    case 67677:
                        i3 = 100;
                        break;
                    case 67678:
                        i3 = 1000;
                        break;
                    case 67679:
                        i3 = 10000;
                        break;
                    case 67865:
                        i3 = 100;
                        break;
                    case 68166:
                        i3 = 100;
                        break;
                    case 68167:
                        i3 = 1000;
                        break;
                    case 68222:
                        i3 = 50;
                        break;
                    case 68446:
                        i3 = 100;
                        break;
                    case 68447:
                        i3 = 1000;
                        break;
                    case 68478:
                        i3 = 100;
                        break;
                    case 68479:
                        i3 = 1000;
                        break;
                    case 69228:
                        i3 = 40;
                        break;
                    case 69229:
                        i3 = 50;
                        break;
                    case 69230:
                        i3 = 60;
                        break;
                    case 69231:
                        i3 = 70;
                        break;
                    case 69232:
                        i3 = 80;
                        break;
                    case 69233:
                        i3 = 90;
                        break;
                    case 69234:
                        i3 = 100;
                        break;
                    case 69235:
                        i3 = 200;
                        break;
                    case 69236:
                        i3 = 300;
                        break;
                    case 69237:
                        i3 = 400;
                        break;
                    case 69238:
                        i3 = 500;
                        break;
                    case 69239:
                        i3 = 600;
                        break;
                    case 69240:
                        i3 = 700;
                        break;
                    case 69241:
                        i3 = 800;
                        break;
                    case 69242:
                        i3 = 900;
                        break;
                    case 69726:
                        i3 = 40;
                        break;
                    case 69727:
                        i3 = 50;
                        break;
                    case 69728:
                        i3 = 60;
                        break;
                    case 69729:
                        i3 = 70;
                        break;
                    case 69730:
                        i3 = 80;
                        break;
                    case 69731:
                        i3 = 90;
                        break;
                    case 69732:
                        i3 = 100;
                        break;
                    case 69733:
                        i3 = 1000;
                        break;
                    case 74802:
                        i3 = 216000;
                        break;
                    case 74803:
                        i3 = 432000;
                        break;
                    case 119660:
                        i3 = 40;
                        break;
                    case 119661:
                        i3 = 50;
                        break;
                    case 119662:
                        i3 = 60;
                        break;
                    case 119663:
                        i3 = 70;
                        break;
                    case 119664:
                        i3 = 80;
                        break;
                    case 119665:
                        i3 = 90;
                        break;
                    default:
                        i3 = -2;
                        break;
                }
            case 3072:
                i3 = ((i2 + ((properties & 992) >> 5)) & 31) + 10;
                break;
        }
        return i3;
    }

    @Override // java.lang.CharacterData
    boolean isWhitespace(int i2) {
        return (getProperties(i2) & CharacterType.SPACE_MASK) == 16384;
    }

    @Override // java.lang.CharacterData
    byte getDirectionality(int i2) {
        byte properties = (byte) ((getProperties(i2) & 2013265920) >> 27);
        if (properties == 15) {
            properties = -1;
        }
        return properties;
    }

    @Override // java.lang.CharacterData
    boolean isMirrored(int i2) {
        return (getProperties(i2) & Integer.MIN_VALUE) != 0;
    }

    private CharacterData01() {
    }
}
