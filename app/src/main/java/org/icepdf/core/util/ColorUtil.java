package org.icepdf.core.util;

import java.awt.Color;
import java.util.HashMap;
import javafx.fxml.FXMLLoader;
import sun.text.normalizer.NormalizerImpl;

/* loaded from: icepdf-core.jar:org/icepdf/core/util/ColorUtil.class */
public class ColorUtil {
    private static final int[] defaultColors = {15792383, 16444375, 65535, 8388564, 15794175, 16119260, 16770244, 0, 16772045, 255, 9055202, 10824234, 14596231, 6266528, 8388352, 13789470, 16744272, 6591981, 16775388, 14423100, 65535, 139, 35723, 12092939, 11119017, 25600, 11119017, 12433259, 9109643, 5597999, 16747520, 10040012, 9109504, 15308410, 9419919, 4734347, 3100495, 3100495, 52945, 9699539, 16716947, 49151, 6908265, 6908265, 2003199, 11674146, 16775920, 2263842, 16711935, 14474460, 16316671, 16766720, 14329120, 8421504, 8421504, 32768, 11403055, 15794160, 16738740, 13458524, 4915330, 16777200, 15787660, 15132410, 16773365, 8190976, 16775885, 11393254, 15761536, 14745599, 16448210, 13882323, 9498256, 13882323, 16758465, 16752762, 2142890, 8900346, 7833753, 7833753, 11584734, 16777184, NormalizerImpl.CC_MASK, 3329330, 16445670, 16711935, 8388608, 6737322, 205, 12211667, 9662683, 3978097, 8087790, 64154, 4772300, 13047173, 1644912, 16121850, 16770273, 16770229, 16768685, 128, 16643558, 8421376, 7048739, 16753920, 16729344, 14315734, 15657130, 10025880, 11529966, 14381203, 16773077, 16767673, 13468991, 16761035, 14524637, 11591910, 8388736, 16711680, 12357519, 4286945, 9127187, 16416882, 16032864, 3050327, 16774638, 10506797, 12632256, 8900331, 6970061, 7372944, 7372944, 16775930, 65407, 4620980, 13808780, 32896, 14204888, 16737095, 4251856, 15631086, 16113331, 16777215, 16119285, 16776960, 10145074};
    private static final HashMap colors = new HashMap();

    public static final String convertColorNameToRGB(String name) {
        int c2 = convertNamedColor(name.toLowerCase());
        if (c2 >= 0) {
            char[] buf = new char[7];
            buf[0] = '#';
            int pos = 1;
            for (int shift = 20; shift >= 0; shift -= 4) {
                int d2 = 15 & (c2 >> shift);
                buf[pos] = (char) (d2 < 10 ? d2 + 48 : (d2 + 65) - 10);
                pos++;
            }
            name = new String(buf, 0, 7);
        }
        return name;
    }

    public static final String convertColorToRGB(Color color) {
        int c2 = color.getRGB();
        return String.format("#%06X", Integer.valueOf(16777215 & c2));
    }

    public static int convertColor(String name) {
        try {
            if (name.startsWith(FXMLLoader.CONTROLLER_METHOD_PREFIX)) {
                name = name.substring(1);
            }
            return Integer.parseInt(name, 16);
        } catch (NumberFormatException e2) {
            return convertNamedColor(name);
        }
    }

    public static final int convertNamedColor(String name) {
        int index = getDefaultColorIndex(name);
        if (index >= 0) {
            return defaultColors[index];
        }
        Integer ii = (Integer) colors.get(name);
        if (ii != null) {
            return ii.intValue();
        }
        return -1;
    }

    /*  JADX ERROR: JadxRuntimeException in pass: RegionMakerVisitor
        jadx.core.utils.exceptions.JadxRuntimeException: Failed to find switch 'out' block (already processed)
        	at jadx.core.dex.visitors.regions.maker.SwitchRegionMaker.calcSwitchOut(SwitchRegionMaker.java:200)
        	at jadx.core.dex.visitors.regions.maker.SwitchRegionMaker.process(SwitchRegionMaker.java:61)
        	at jadx.core.dex.visitors.regions.maker.RegionMaker.traverse(RegionMaker.java:112)
        	at jadx.core.dex.visitors.regions.maker.RegionMaker.makeRegion(RegionMaker.java:66)
        	at jadx.core.dex.visitors.regions.maker.SwitchRegionMaker.processFallThroughCases(SwitchRegionMaker.java:105)
        	at jadx.core.dex.visitors.regions.maker.SwitchRegionMaker.process(SwitchRegionMaker.java:64)
        	at jadx.core.dex.visitors.regions.maker.RegionMaker.traverse(RegionMaker.java:112)
        	at jadx.core.dex.visitors.regions.maker.RegionMaker.makeRegion(RegionMaker.java:66)
        	at jadx.core.dex.visitors.regions.maker.RegionMaker.makeMthRegion(RegionMaker.java:48)
        	at jadx.core.dex.visitors.regions.RegionMakerVisitor.visit(RegionMakerVisitor.java:25)
        */
    /* JADX WARN: Can't fix incorrect switch cases order, some code will duplicate */
    /* JADX WARN: Removed duplicated region for block: B:343:0x106c A[PHI: r4 r152
  0x106c: PHI (r4v1 'id' int) = 
  (r4v0 'id' int)
  (r4v3 'id' int)
  (r4v4 'id' int)
  (r4v5 'id' int)
  (r4v0 'id' int)
  (r4v6 'id' int)
  (r4v7 'id' int)
  (r4v8 'id' int)
  (r4v0 'id' int)
  (r4v9 'id' int)
  (r4v10 'id' int)
  (r4v11 'id' int)
  (r4v0 'id' int)
  (r4v12 'id' int)
  (r4v13 'id' int)
  (r4v14 'id' int)
  (r4v15 'id' int)
  (r4v0 'id' int)
  (r4v16 'id' int)
  (r4v17 'id' int)
  (r4v0 'id' int)
  (r4v18 'id' int)
  (r4v19 'id' int)
  (r4v0 'id' int)
  (r4v20 'id' int)
  (r4v21 'id' int)
  (r4v22 'id' int)
  (r4v0 'id' int)
  (r4v23 'id' int)
  (r4v24 'id' int)
  (r4v25 'id' int)
  (r4v0 'id' int)
  (r4v26 'id' int)
  (r4v27 'id' int)
  (r4v28 'id' int)
  (r4v29 'id' int)
  (r4v30 'id' int)
  (r4v31 'id' int)
  (r4v32 'id' int)
  (r4v0 'id' int)
  (r4v0 'id' int)
  (r4v33 'id' int)
  (r4v34 'id' int)
  (r4v35 'id' int)
  (r4v36 'id' int)
  (r4v37 'id' int)
  (r4v38 'id' int)
  (r4v39 'id' int)
  (r4v40 'id' int)
  (r4v41 'id' int)
  (r4v42 'id' int)
  (r4v43 'id' int)
  (r4v0 'id' int)
  (r4v44 'id' int)
  (r4v0 'id' int)
  (r4v45 'id' int)
  (r4v46 'id' int)
  (r4v47 'id' int)
  (r4v48 'id' int)
  (r4v49 'id' int)
  (r4v50 'id' int)
  (r4v51 'id' int)
  (r4v52 'id' int)
  (r4v0 'id' int)
  (r4v53 'id' int)
  (r4v54 'id' int)
  (r4v55 'id' int)
  (r4v0 'id' int)
  (r4v56 'id' int)
  (r4v57 'id' int)
  (r4v58 'id' int)
  (r4v59 'id' int)
  (r4v0 'id' int)
  (r4v60 'id' int)
  (r4v0 'id' int)
  (r4v0 'id' int)
  (r4v61 'id' int)
  (r4v62 'id' int)
  (r4v63 'id' int)
  (r4v64 'id' int)
  (r4v0 'id' int)
  (r4v65 'id' int)
  (r4v66 'id' int)
  (r4v0 'id' int)
  (r4v67 'id' int)
  (r4v68 'id' int)
  (r4v0 'id' int)
  (r4v69 'id' int)
  (r4v70 'id' int)
  (r4v0 'id' int)
  (r4v71 'id' int)
  (r4v72 'id' int)
  (r4v0 'id' int)
  (r4v0 'id' int)
  (r4v73 'id' int)
  (r4v74 'id' int)
  (r4v75 'id' int)
  (r4v0 'id' int)
  (r4v76 'id' int)
  (r4v77 'id' int)
  (r4v78 'id' int)
  (r4v79 'id' int)
  (r4v80 'id' int)
  (r4v0 'id' int)
  (r4v81 'id' int)
  (r4v82 'id' int)
  (r4v83 'id' int)
  (r4v0 'id' int)
  (r4v84 'id' int)
  (r4v85 'id' int)
  (r4v0 'id' int)
  (r4v86 'id' int)
  (r4v87 'id' int)
  (r4v88 'id' int)
  (r4v89 'id' int)
  (r4v0 'id' int)
  (r4v90 'id' int)
  (r4v91 'id' int)
  (r4v92 'id' int)
  (r4v93 'id' int)
  (r4v94 'id' int)
  (r4v95 'id' int)
  (r4v0 'id' int)
  (r4v96 'id' int)
  (r4v97 'id' int)
  (r4v98 'id' int)
  (r4v99 'id' int)
  (r4v100 'id' int)
  (r4v0 'id' int)
  (r4v101 'id' int)
  (r4v102 'id' int)
  (r4v103 'id' int)
  (r4v104 'id' int)
  (r4v105 'id' int)
  (r4v106 'id' int)
  (r4v0 'id' int)
  (r4v107 'id' int)
  (r4v108 'id' int)
  (r4v109 'id' int)
  (r4v110 'id' int)
  (r4v0 'id' int)
  (r4v111 'id' int)
  (r4v112 'id' int)
  (r4v113 'id' int)
  (r4v114 'id' int)
  (r4v0 'id' int)
  (r4v115 'id' int)
  (r4v116 'id' int)
  (r4v117 'id' int)
  (r4v0 'id' int)
  (r4v118 'id' int)
  (r4v119 'id' int)
  (r4v120 'id' int)
  (r4v121 'id' int)
  (r4v122 'id' int)
  (r4v0 'id' int)
  (r4v0 'id' int)
  (r4v123 'id' int)
  (r4v124 'id' int)
  (r4v125 'id' int)
  (r4v126 'id' int)
  (r4v127 'id' int)
  (r4v128 'id' int)
  (r4v129 'id' int)
  (r4v130 'id' int)
  (r4v0 'id' int)
  (r4v131 'id' int)
  (r4v132 'id' int)
  (r4v133 'id' int)
  (r4v134 'id' int)
  (r4v0 'id' int)
  (r4v0 'id' int)
  (r4v0 'id' int)
  (r4v0 'id' int)
  (r4v0 'id' int)
  (r4v0 'id' int)
  (r4v0 'id' int)
  (r4v0 'id' int)
  (r4v138 'id' int)
  (r4v139 'id' int)
  (r4v140 'id' int)
  (r4v141 'id' int)
  (r4v142 'id' int)
  (r4v143 'id' int)
  (r4v0 'id' int)
  (r4v0 'id' int)
  (r4v0 'id' int)
  (r4v0 'id' int)
  (r4v0 'id' int)
  (r4v146 'id' int)
  (r4v147 'id' int)
  (r4v0 'id' int)
  (r4v0 'id' int)
  (r4v0 'id' int)
  (r4v0 'id' int)
  (r4v0 'id' int)
 binds: [B:3:0x0262, B:342:0x1062, B:341:0x1058, B:340:0x104e, B:338:0x1041, B:339:0x1044, B:336:0x1033, B:333:0x1022, B:318:0x0f65, B:329:0x1006, B:328:0x0ffc, B:327:0x0ff2, B:325:0x0fe5, B:326:0x0fe8, B:323:0x0fd7, B:320:0x0fbe, B:319:0x0fb4, B:293:0x0e5e, B:315:0x0f52, B:314:0x0f48, B:312:0x0f3b, B:313:0x0f3e, B:310:0x0f2d, B:306:0x0f12, B:307:0x0f15, B:304:0x0f04, B:301:0x0eec, B:299:0x0edf, B:300:0x0ee2, B:297:0x0ed1, B:294:0x0eb8, B:283:0x0db6, B:290:0x0e4b, B:289:0x0e42, B:288:0x0e38, B:287:0x0e2e, B:286:0x0e24, B:285:0x0e1a, B:284:0x0e10, B:265:0x0cb5, B:279:0x0da0, B:280:0x0da3, B:277:0x0d92, B:274:0x0d79, B:273:0x0d6f, B:272:0x0d65, B:271:0x0d5b, B:270:0x0d51, B:269:0x0d47, B:268:0x0d3c, B:267:0x0d32, B:266:0x0d28, B:230:0x0b56, B:262:0x0ca3, B:260:0x0c96, B:261:0x0c99, B:258:0x0c88, B:255:0x0c77, B:252:0x0c5f, B:251:0x0c55, B:250:0x0c4b, B:249:0x0c42, B:248:0x0c37, B:246:0x0c2a, B:247:0x0c2d, B:244:0x0c1c, B:241:0x0c04, B:239:0x0bf7, B:240:0x0bfa, B:237:0x0be9, B:234:0x0bd8, B:231:0x0bc0, B:148:0x088c, B:227:0x0b42, B:220:0x0b14, B:225:0x0b34, B:226:0x0b37, B:223:0x0b25, B:218:0x0b05, B:215:0x0af3, B:211:0x0ad7, B:212:0x0ada, B:209:0x0ac9, B:205:0x0aad, B:206:0x0ab0, B:203:0x0a9f, B:199:0x0a83, B:200:0x0a86, B:197:0x0a75, B:193:0x0a59, B:194:0x0a5c, B:191:0x0a4b, B:172:0x0995, B:186:0x0a2c, B:187:0x0a2f, B:184:0x0a1e, B:181:0x0a06, B:179:0x09f9, B:180:0x09fc, B:177:0x09eb, B:174:0x09d2, B:173:0x09c8, B:170:0x0986, B:168:0x0979, B:169:0x097c, B:166:0x096b, B:163:0x0952, B:161:0x0945, B:162:0x0948, B:159:0x0937, B:155:0x091b, B:156:0x091e, B:153:0x090d, B:150:0x08f5, B:149:0x08ec, B:130:0x078f, B:145:0x087a, B:144:0x0870, B:143:0x0866, B:142:0x085c, B:141:0x0852, B:140:0x0848, B:138:0x083b, B:139:0x083e, B:136:0x082d, B:133:0x0814, B:132:0x080a, B:131:0x0800, B:113:0x06b7, B:127:0x077c, B:126:0x0772, B:125:0x0768, B:124:0x075e, B:123:0x0754, B:122:0x074a, B:120:0x073d, B:121:0x0740, B:118:0x072f, B:115:0x0717, B:114:0x070c, B:90:0x05a2, B:110:0x06a4, B:109:0x069a, B:108:0x0690, B:107:0x0686, B:105:0x0678, B:106:0x067b, B:103:0x066a, B:100:0x0652, B:98:0x0644, B:99:0x0647, B:96:0x0635, B:93:0x061d, B:92:0x0613, B:91:0x0608, B:65:0x0484, B:86:0x058c, B:87:0x058f, B:84:0x057d, B:81:0x0565, B:80:0x055b, B:79:0x0551, B:78:0x0547, B:77:0x053d, B:76:0x0533, B:74:0x0526, B:75:0x0529, B:72:0x0518, B:69:0x0507, B:66:0x04f0, B:19:0x0307, B:57:0x045f, B:59:0x0469, B:61:0x0473, B:52:0x0448, B:54:0x0452, B:45:0x0427, B:47:0x0431, B:41:0x0407, B:40:0x03fd, B:39:0x03f3, B:38:0x03e9, B:37:0x03de, B:36:0x03d4, B:30:0x03b7, B:32:0x03c1, B:34:0x03cb, B:25:0x03a0, B:27:0x03aa, B:21:0x0381, B:20:0x0378, B:12:0x02e4, B:14:0x02ee, B:16:0x02f8, B:7:0x02cd, B:9:0x02d7] A[DONT_GENERATE, DONT_INLINE]
  0x106c: PHI (r152v1 'X' java.lang.String) = 
  (r152v0 'X' java.lang.String)
  (r152v2 'X' java.lang.String)
  (r152v3 'X' java.lang.String)
  (r152v4 'X' java.lang.String)
  (r152v0 'X' java.lang.String)
  (r152v5 'X' java.lang.String)
  (r152v6 'X' java.lang.String)
  (r152v7 'X' java.lang.String)
  (r152v0 'X' java.lang.String)
  (r152v8 'X' java.lang.String)
  (r152v9 'X' java.lang.String)
  (r152v10 'X' java.lang.String)
  (r152v0 'X' java.lang.String)
  (r152v11 'X' java.lang.String)
  (r152v12 'X' java.lang.String)
  (r152v13 'X' java.lang.String)
  (r152v14 'X' java.lang.String)
  (r152v0 'X' java.lang.String)
  (r152v15 'X' java.lang.String)
  (r152v16 'X' java.lang.String)
  (r152v0 'X' java.lang.String)
  (r152v17 'X' java.lang.String)
  (r152v18 'X' java.lang.String)
  (r152v0 'X' java.lang.String)
  (r152v19 'X' java.lang.String)
  (r152v20 'X' java.lang.String)
  (r152v21 'X' java.lang.String)
  (r152v0 'X' java.lang.String)
  (r152v22 'X' java.lang.String)
  (r152v23 'X' java.lang.String)
  (r152v24 'X' java.lang.String)
  (r152v0 'X' java.lang.String)
  (r152v25 'X' java.lang.String)
  (r152v26 'X' java.lang.String)
  (r152v27 'X' java.lang.String)
  (r152v28 'X' java.lang.String)
  (r152v29 'X' java.lang.String)
  (r152v30 'X' java.lang.String)
  (r152v31 'X' java.lang.String)
  (r152v0 'X' java.lang.String)
  (r152v0 'X' java.lang.String)
  (r152v32 'X' java.lang.String)
  (r152v33 'X' java.lang.String)
  (r152v34 'X' java.lang.String)
  (r152v35 'X' java.lang.String)
  (r152v36 'X' java.lang.String)
  (r152v37 'X' java.lang.String)
  (r152v38 'X' java.lang.String)
  (r152v39 'X' java.lang.String)
  (r152v40 'X' java.lang.String)
  (r152v41 'X' java.lang.String)
  (r152v42 'X' java.lang.String)
  (r152v0 'X' java.lang.String)
  (r152v43 'X' java.lang.String)
  (r152v0 'X' java.lang.String)
  (r152v44 'X' java.lang.String)
  (r152v45 'X' java.lang.String)
  (r152v46 'X' java.lang.String)
  (r152v47 'X' java.lang.String)
  (r152v48 'X' java.lang.String)
  (r152v49 'X' java.lang.String)
  (r152v50 'X' java.lang.String)
  (r152v51 'X' java.lang.String)
  (r152v0 'X' java.lang.String)
  (r152v52 'X' java.lang.String)
  (r152v53 'X' java.lang.String)
  (r152v54 'X' java.lang.String)
  (r152v0 'X' java.lang.String)
  (r152v55 'X' java.lang.String)
  (r152v56 'X' java.lang.String)
  (r152v57 'X' java.lang.String)
  (r152v58 'X' java.lang.String)
  (r152v0 'X' java.lang.String)
  (r152v59 'X' java.lang.String)
  (r152v0 'X' java.lang.String)
  (r152v0 'X' java.lang.String)
  (r152v60 'X' java.lang.String)
  (r152v61 'X' java.lang.String)
  (r152v62 'X' java.lang.String)
  (r152v63 'X' java.lang.String)
  (r152v0 'X' java.lang.String)
  (r152v64 'X' java.lang.String)
  (r152v65 'X' java.lang.String)
  (r152v0 'X' java.lang.String)
  (r152v66 'X' java.lang.String)
  (r152v67 'X' java.lang.String)
  (r152v0 'X' java.lang.String)
  (r152v68 'X' java.lang.String)
  (r152v69 'X' java.lang.String)
  (r152v0 'X' java.lang.String)
  (r152v70 'X' java.lang.String)
  (r152v71 'X' java.lang.String)
  (r152v0 'X' java.lang.String)
  (r152v0 'X' java.lang.String)
  (r152v72 'X' java.lang.String)
  (r152v73 'X' java.lang.String)
  (r152v74 'X' java.lang.String)
  (r152v0 'X' java.lang.String)
  (r152v75 'X' java.lang.String)
  (r152v76 'X' java.lang.String)
  (r152v77 'X' java.lang.String)
  (r152v78 'X' java.lang.String)
  (r152v79 'X' java.lang.String)
  (r152v0 'X' java.lang.String)
  (r152v80 'X' java.lang.String)
  (r152v81 'X' java.lang.String)
  (r152v82 'X' java.lang.String)
  (r152v0 'X' java.lang.String)
  (r152v83 'X' java.lang.String)
  (r152v84 'X' java.lang.String)
  (r152v0 'X' java.lang.String)
  (r152v85 'X' java.lang.String)
  (r152v86 'X' java.lang.String)
  (r152v87 'X' java.lang.String)
  (r152v88 'X' java.lang.String)
  (r152v0 'X' java.lang.String)
  (r152v89 'X' java.lang.String)
  (r152v90 'X' java.lang.String)
  (r152v91 'X' java.lang.String)
  (r152v92 'X' java.lang.String)
  (r152v93 'X' java.lang.String)
  (r152v94 'X' java.lang.String)
  (r152v0 'X' java.lang.String)
  (r152v95 'X' java.lang.String)
  (r152v96 'X' java.lang.String)
  (r152v97 'X' java.lang.String)
  (r152v98 'X' java.lang.String)
  (r152v99 'X' java.lang.String)
  (r152v0 'X' java.lang.String)
  (r152v100 'X' java.lang.String)
  (r152v101 'X' java.lang.String)
  (r152v102 'X' java.lang.String)
  (r152v103 'X' java.lang.String)
  (r152v104 'X' java.lang.String)
  (r152v105 'X' java.lang.String)
  (r152v0 'X' java.lang.String)
  (r152v106 'X' java.lang.String)
  (r152v107 'X' java.lang.String)
  (r152v108 'X' java.lang.String)
  (r152v109 'X' java.lang.String)
  (r152v0 'X' java.lang.String)
  (r152v110 'X' java.lang.String)
  (r152v111 'X' java.lang.String)
  (r152v112 'X' java.lang.String)
  (r152v113 'X' java.lang.String)
  (r152v0 'X' java.lang.String)
  (r152v114 'X' java.lang.String)
  (r152v115 'X' java.lang.String)
  (r152v116 'X' java.lang.String)
  (r152v0 'X' java.lang.String)
  (r152v117 'X' java.lang.String)
  (r152v118 'X' java.lang.String)
  (r152v119 'X' java.lang.String)
  (r152v120 'X' java.lang.String)
  (r152v121 'X' java.lang.String)
  (r152v0 'X' java.lang.String)
  (r152v0 'X' java.lang.String)
  (r152v122 'X' java.lang.String)
  (r152v123 'X' java.lang.String)
  (r152v124 'X' java.lang.String)
  (r152v125 'X' java.lang.String)
  (r152v126 'X' java.lang.String)
  (r152v127 'X' java.lang.String)
  (r152v128 'X' java.lang.String)
  (r152v129 'X' java.lang.String)
  (r152v0 'X' java.lang.String)
  (r152v130 'X' java.lang.String)
  (r152v131 'X' java.lang.String)
  (r152v132 'X' java.lang.String)
  (r152v133 'X' java.lang.String)
  (r152v0 'X' java.lang.String)
  (r152v0 'X' java.lang.String)
  (r152v0 'X' java.lang.String)
  (r152v0 'X' java.lang.String)
  (r152v0 'X' java.lang.String)
  (r152v0 'X' java.lang.String)
  (r152v0 'X' java.lang.String)
  (r152v0 'X' java.lang.String)
  (r152v134 'X' java.lang.String)
  (r152v135 'X' java.lang.String)
  (r152v136 'X' java.lang.String)
  (r152v137 'X' java.lang.String)
  (r152v138 'X' java.lang.String)
  (r152v139 'X' java.lang.String)
  (r152v0 'X' java.lang.String)
  (r152v0 'X' java.lang.String)
  (r152v0 'X' java.lang.String)
  (r152v0 'X' java.lang.String)
  (r152v0 'X' java.lang.String)
  (r152v140 'X' java.lang.String)
  (r152v141 'X' java.lang.String)
  (r152v0 'X' java.lang.String)
  (r152v0 'X' java.lang.String)
  (r152v0 'X' java.lang.String)
  (r152v0 'X' java.lang.String)
  (r152v0 'X' java.lang.String)
 binds: [B:3:0x0262, B:342:0x1062, B:341:0x1058, B:340:0x104e, B:338:0x1041, B:339:0x1044, B:336:0x1033, B:333:0x1022, B:318:0x0f65, B:329:0x1006, B:328:0x0ffc, B:327:0x0ff2, B:325:0x0fe5, B:326:0x0fe8, B:323:0x0fd7, B:320:0x0fbe, B:319:0x0fb4, B:293:0x0e5e, B:315:0x0f52, B:314:0x0f48, B:312:0x0f3b, B:313:0x0f3e, B:310:0x0f2d, B:306:0x0f12, B:307:0x0f15, B:304:0x0f04, B:301:0x0eec, B:299:0x0edf, B:300:0x0ee2, B:297:0x0ed1, B:294:0x0eb8, B:283:0x0db6, B:290:0x0e4b, B:289:0x0e42, B:288:0x0e38, B:287:0x0e2e, B:286:0x0e24, B:285:0x0e1a, B:284:0x0e10, B:265:0x0cb5, B:279:0x0da0, B:280:0x0da3, B:277:0x0d92, B:274:0x0d79, B:273:0x0d6f, B:272:0x0d65, B:271:0x0d5b, B:270:0x0d51, B:269:0x0d47, B:268:0x0d3c, B:267:0x0d32, B:266:0x0d28, B:230:0x0b56, B:262:0x0ca3, B:260:0x0c96, B:261:0x0c99, B:258:0x0c88, B:255:0x0c77, B:252:0x0c5f, B:251:0x0c55, B:250:0x0c4b, B:249:0x0c42, B:248:0x0c37, B:246:0x0c2a, B:247:0x0c2d, B:244:0x0c1c, B:241:0x0c04, B:239:0x0bf7, B:240:0x0bfa, B:237:0x0be9, B:234:0x0bd8, B:231:0x0bc0, B:148:0x088c, B:227:0x0b42, B:220:0x0b14, B:225:0x0b34, B:226:0x0b37, B:223:0x0b25, B:218:0x0b05, B:215:0x0af3, B:211:0x0ad7, B:212:0x0ada, B:209:0x0ac9, B:205:0x0aad, B:206:0x0ab0, B:203:0x0a9f, B:199:0x0a83, B:200:0x0a86, B:197:0x0a75, B:193:0x0a59, B:194:0x0a5c, B:191:0x0a4b, B:172:0x0995, B:186:0x0a2c, B:187:0x0a2f, B:184:0x0a1e, B:181:0x0a06, B:179:0x09f9, B:180:0x09fc, B:177:0x09eb, B:174:0x09d2, B:173:0x09c8, B:170:0x0986, B:168:0x0979, B:169:0x097c, B:166:0x096b, B:163:0x0952, B:161:0x0945, B:162:0x0948, B:159:0x0937, B:155:0x091b, B:156:0x091e, B:153:0x090d, B:150:0x08f5, B:149:0x08ec, B:130:0x078f, B:145:0x087a, B:144:0x0870, B:143:0x0866, B:142:0x085c, B:141:0x0852, B:140:0x0848, B:138:0x083b, B:139:0x083e, B:136:0x082d, B:133:0x0814, B:132:0x080a, B:131:0x0800, B:113:0x06b7, B:127:0x077c, B:126:0x0772, B:125:0x0768, B:124:0x075e, B:123:0x0754, B:122:0x074a, B:120:0x073d, B:121:0x0740, B:118:0x072f, B:115:0x0717, B:114:0x070c, B:90:0x05a2, B:110:0x06a4, B:109:0x069a, B:108:0x0690, B:107:0x0686, B:105:0x0678, B:106:0x067b, B:103:0x066a, B:100:0x0652, B:98:0x0644, B:99:0x0647, B:96:0x0635, B:93:0x061d, B:92:0x0613, B:91:0x0608, B:65:0x0484, B:86:0x058c, B:87:0x058f, B:84:0x057d, B:81:0x0565, B:80:0x055b, B:79:0x0551, B:78:0x0547, B:77:0x053d, B:76:0x0533, B:74:0x0526, B:75:0x0529, B:72:0x0518, B:69:0x0507, B:66:0x04f0, B:19:0x0307, B:57:0x045f, B:59:0x0469, B:61:0x0473, B:52:0x0448, B:54:0x0452, B:45:0x0427, B:47:0x0431, B:41:0x0407, B:40:0x03fd, B:39:0x03f3, B:38:0x03e9, B:37:0x03de, B:36:0x03d4, B:30:0x03b7, B:32:0x03c1, B:34:0x03cb, B:25:0x03a0, B:27:0x03aa, B:21:0x0381, B:20:0x0378, B:12:0x02e4, B:14:0x02ee, B:16:0x02f8, B:7:0x02cd, B:9:0x02d7] A[DONT_GENERATE, DONT_INLINE]] */
    /* JADX WARN: Removed duplicated region for block: B:345:0x1071  */
    /*
        Code decompiled incorrectly, please refer to instructions dump.
        To view partially-correct code enable 'Show inconsistent code' option in preferences
    */
    private static final int getDefaultColorIndex(java.lang.String r3) {
        /*
            Method dump skipped, instructions count: 4230
            To view this dump change 'Code comments level' option to 'DEBUG'
        */
        throw new UnsupportedOperationException("Method not decompiled: org.icepdf.core.util.ColorUtil.getDefaultColorIndex(java.lang.String):int");
    }
}
