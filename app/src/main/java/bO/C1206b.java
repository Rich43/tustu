package bo;

import G.R;
import aP.cZ;
import bH.C;
import bn.InterfaceC1200a;
import com.efiAnalytics.ui.C1677fh;
import com.efiAnalytics.ui.C1701s;
import com.efiAnalytics.ui.C1703u;
import com.efiAnalytics.ui.C1705w;
import com.efiAnalytics.ui.Cdo;
import com.efiAnalytics.ui.InterfaceC1565bc;
import com.efiAnalytics.ui.InterfaceC1662et;
import com.efiAnalytics.ui.bV;
import java.awt.BorderLayout;
import java.awt.Component;
import java.awt.Dialog;
import java.awt.Frame;
import java.awt.GridLayout;
import java.awt.HeadlessException;
import java.awt.Toolkit;
import java.awt.Window;
import javax.swing.BorderFactory;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JCheckBox;
import javax.swing.JComboBox;
import javax.swing.JDialog;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JMenu;
import javax.swing.JMenuBar;
import javax.swing.JMenuItem;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import s.C1818g;

/* renamed from: bo.b, reason: case insensitive filesystem */
/* loaded from: TunerStudioMS.jar:bo/b.class */
public class C1206b extends JPanel implements InterfaceC1200a, InterfaceC1565bc {

    /* renamed from: a, reason: collision with root package name */
    C1705w f8275a;

    /* renamed from: F, reason: collision with root package name */
    private int f8301F;

    /* renamed from: s, reason: collision with root package name */
    C1701s f8302s;

    /* renamed from: t, reason: collision with root package name */
    InterfaceC1662et f8303t;

    /* renamed from: u, reason: collision with root package name */
    String f8304u;

    /* renamed from: x, reason: collision with root package name */
    private static String f8289x = C1818g.b("Naturally Aspirated");

    /* renamed from: y, reason: collision with root package name */
    private static String f8290y = C1818g.b("Turbo");

    /* renamed from: z, reason: collision with root package name */
    private static String f8291z = C1818g.b("Turbo w/Intercooler");

    /* renamed from: A, reason: collision with root package name */
    private static String f8292A = C1818g.b("Supercharger");

    /* renamed from: B, reason: collision with root package name */
    private static String f8293B = C1818g.b("Supercharger w/Intercooler");

    /* renamed from: C, reason: collision with root package name */
    private static String f8295C = C1818g.b("Generate X & Y Bins");

    /* renamed from: D, reason: collision with root package name */
    private static String f8296D = C1818g.b("Use existing X & Y Bins");

    /* renamed from: p, reason: collision with root package name */
    public static int f8297p = 0;

    /* renamed from: q, reason: collision with root package name */
    public static int f8298q = 1;

    /* renamed from: r, reason: collision with root package name */
    public static int f8299r = 2;

    /* renamed from: E, reason: collision with root package name */
    private static double f8300E = 0.06802721088435375d;

    /* renamed from: b, reason: collision with root package name */
    Cdo f8276b = new Cdo();

    /* renamed from: c, reason: collision with root package name */
    Cdo f8277c = new Cdo();

    /* renamed from: d, reason: collision with root package name */
    Cdo f8278d = new Cdo();

    /* renamed from: e, reason: collision with root package name */
    Cdo f8279e = new Cdo();

    /* renamed from: f, reason: collision with root package name */
    Cdo f8280f = new Cdo();

    /* renamed from: g, reason: collision with root package name */
    Cdo f8281g = new Cdo();

    /* renamed from: h, reason: collision with root package name */
    Cdo f8282h = new Cdo();

    /* renamed from: i, reason: collision with root package name */
    Cdo f8283i = new Cdo();

    /* renamed from: j, reason: collision with root package name */
    Cdo f8284j = new Cdo();

    /* renamed from: k, reason: collision with root package name */
    Cdo f8285k = new Cdo();

    /* renamed from: l, reason: collision with root package name */
    Cdo f8286l = new Cdo();

    /* renamed from: m, reason: collision with root package name */
    JComboBox f8287m = new JComboBox();

    /* renamed from: n, reason: collision with root package name */
    JCheckBox f8288n = new JCheckBox(C1818g.b("Scale for AFR"));

    /* renamed from: o, reason: collision with root package name */
    JComboBox f8294o = new JComboBox();

    /* renamed from: v, reason: collision with root package name */
    JDialog f8305v = null;

    /* renamed from: w, reason: collision with root package name */
    String f8306w = "<html><body><center><h2>Table Generators</h2></center><br>The tables generated by this Table Generator are meant to assist<br>in creating an estimated rough starting point to start and <br>begin tuning a vehicle.<br>It is recommended that you use realistic values in this dialog<br>As you likely do not have values for your specific engine, find <br>real numbers for a similar engine. Guessed values can cause <br>disproportionate values and significantly scewed output.<br><br>There should be no expectation that this Table Generator will <br>produce a final or tuned table. The generated table should be<br>reviewed by a person understanding the risks of running an untuned engine <br>before use. EFI Analytics is not to be held liable for any resulting damages.<br><br><center><b>EFI Analytics, Inc</b> &copy; 2012</center></body></html>";

    public C1206b(String str, R r2, String str2, C1701s c1701s, InterfaceC1662et interfaceC1662et, int i2) {
        this.f8275a = null;
        this.f8301F = f8297p;
        this.f8302s = null;
        this.f8303t = null;
        this.f8304u = "";
        this.f8304u = str;
        this.f8302s = c1701s;
        this.f8303t = interfaceC1662et;
        this.f8301F = i2;
        setLayout(new BorderLayout(8, 8));
        setBorder(BorderFactory.createEmptyBorder(5, 5, 5, 5));
        C1701s c1701sB = C1677fh.b(c1701s);
        c1701sB.q();
        this.f8275a = new C1705w(c1701sB);
        this.f8275a.h().a(r2.c(r2.f(str2).c()).u());
        add(BorderLayout.CENTER, this.f8275a);
        JPanel jPanel = new JPanel();
        jPanel.setLayout(new BorderLayout(5, 5));
        JPanel jPanel2 = new JPanel();
        jPanel2.setLayout(new BorderLayout(5, 5));
        JPanel jPanel3 = new JPanel();
        jPanel3.setLayout(new GridLayout(0, 1, 4, 4));
        jPanel3.add(h());
        jPanel2.add("North", jPanel3);
        JPanel jPanel4 = new JPanel();
        jPanel4.setLayout(new BorderLayout());
        jPanel4.add("North", j());
        jPanel2.add(BorderLayout.CENTER, jPanel4);
        jPanel2.setBorder(BorderFactory.createTitledBorder(a("Engine Characteristics")));
        jPanel.add(BorderLayout.CENTER, jPanel2);
        JPanel jPanel5 = new JPanel();
        jPanel5.setLayout(new BorderLayout());
        JPanel jPanel6 = new JPanel();
        jPanel6.setLayout(new BorderLayout(4, 4));
        jPanel6.add(BorderLayout.CENTER, i());
        jPanel5.add("West", jPanel6);
        JPanel jPanel7 = new JPanel();
        jPanel7.setLayout(new GridLayout(1, 0, 4, 4));
        JButton jButton = new JButton(a("Generate"));
        jButton.addActionListener(new C1207c(this));
        jPanel7.add(jButton);
        JButton jButton2 = new JButton(a("Apply") + " - " + this.f8304u);
        jButton2.addActionListener(new C1208d(this));
        jPanel7.add(jButton2);
        JButton jButton3 = new JButton(a("Cancel"));
        jButton3.addActionListener(new C1209e(this));
        jPanel7.add(jButton3);
        jPanel5.add("East", jPanel7);
        add("South", jPanel5);
        add("West", jPanel);
        f();
    }

    private JMenuBar c() {
        JMenuBar jMenuBar = new JMenuBar();
        JMenu jMenu = new JMenu(a("Help"));
        JMenuItem jMenuItem = new JMenuItem(a("About"));
        jMenuItem.addActionListener(new C1210f(this));
        jMenu.add(jMenuItem);
        jMenuBar.add(jMenu);
        return jMenuBar;
    }

    /* JADX INFO: Access modifiers changed from: private */
    public void d() throws HeadlessException {
        JFrame jFrameC = cZ.a().c();
        JOptionPane.showMessageDialog(jFrameC, this.f8306w, a("About Table Generators"), 1, new ImageIcon(Toolkit.getDefaultToolkit().getImage(jFrameC.getClass().getResource("resources/companyLogo.png"))));
    }

    /* JADX INFO: Access modifiers changed from: private */
    public void e() {
        C1677fh.a(this.f8275a.g(), this.f8302s);
        close();
    }

    private void f() {
        this.f8276b.setText(a("txtIdleRpm", "700"));
        this.f8277c.setText(a("txtIdleMap", "35"));
        this.f8278d.setText(a("txtPkHpRpm", ""));
        this.f8279e.setText(a("txtMaxRpm", ""));
        this.f8280f.setText(a("txtPkHp", ""));
        this.f8281g.setText(a("txtPkHpMap", "100"));
        this.f8282h.setText(a("txtPkTqRpm", ""));
        this.f8283i.setText(a("txtPkTq", ""));
        this.f8284j.setText(a("txtPkTqMap", "100"));
        this.f8285k.setText(a("txtDisplacementCid", ""));
        this.f8286l.setText(a("txtDisplacementCc", ""));
        this.f8287m.setSelectedItem(a("cBoost", f8289x));
    }

    private void g() {
        b("txtIdleRpm", this.f8276b.getText());
        b("txtIdleMap", this.f8277c.getText());
        b("txtPkHpRpm", this.f8278d.getText());
        b("txtMaxRpm", this.f8279e.getText());
        b("txtPkHp", this.f8280f.getText());
        b("txtPkHpMap", this.f8281g.getText());
        b("txtPkTqRpm", this.f8282h.getText());
        b("txtPkTq", this.f8283i.getText());
        b("txtPkTqMap", this.f8284j.getText());
        b("txtDisplacementCid", this.f8285k.getText());
        b("txtDisplacementCc", this.f8286l.getText());
        b("cBoost", this.f8287m.getSelectedItem().toString());
    }

    private JPanel h() {
        JPanel jPanel = new JPanel();
        jPanel.setLayout(new BorderLayout(4, 4));
        jPanel.add(BorderLayout.CENTER, new JLabel(C1818g.b("Engine Type:"), 4));
        this.f8287m.setEditable(false);
        this.f8287m.addItem(f8289x);
        this.f8287m.addItem(f8290y);
        this.f8287m.addItem(f8291z);
        this.f8287m.addItem(f8292A);
        this.f8287m.addItem(f8293B);
        jPanel.add("East", this.f8287m);
        this.f8287m.addActionListener(new C1211g(this));
        return jPanel;
    }

    private JPanel i() {
        JPanel jPanel = new JPanel();
        jPanel.setLayout(new BorderLayout(4, 4));
        jPanel.add(BorderLayout.CENTER, new JLabel(C1818g.b("X & Y Axis:"), 4));
        this.f8294o.setEditable(false);
        this.f8294o.addItem(f8295C);
        this.f8294o.addItem(f8296D);
        jPanel.add("East", this.f8294o);
        return jPanel;
    }

    public boolean a() {
        String str;
        String str2 = "";
        if (this.f8276b.getText().equals("")) {
            str2 = str2 + "Idle RPM\n";
        } else if (this.f8277c.getText().equals("")) {
            str2 = str2 + "IdleMap\n";
        } else if (this.f8278d.getText().equals("")) {
            str2 = str2 + "Peak HP RPM\n";
        } else if (this.f8279e.getText().equals("")) {
            str2 = str2 + "Maximum RPM\n";
        } else if (this.f8280f.getText().equals("")) {
            str2 = str2 + "Peak HP\n";
        } else if (this.f8281g.getText().equals("")) {
            str2 = str2 + "Peak HP MAP\n";
        } else if (this.f8282h.getText().equals("")) {
            str2 = str2 + "Peak Torque RPM\n";
        } else if (this.f8283i.getText().equals("")) {
            str2 = str2 + "Peak Torque\n";
        } else if (this.f8284j.getText().equals("")) {
            str2 = str2 + "Peak Torque MAP";
        } else if (this.f8285k.getText().equals("")) {
            str2 = str2 + "Displacement (CID)";
        } else if (this.f8286l.getText().equals("")) {
            str2 = str2 + "Displacement (cc)";
        }
        if (str2.length() > 0) {
            bV.d("Please set values for:\n" + str2, this);
            return false;
        }
        if (this.f8287m.getSelectedItem().equals(f8289x)) {
            str = "";
            str = this.f8281g.e() > 102.0d ? str + "Peak HP MAP\n" : "";
            if (this.f8284j.e() > 102.0d) {
                str = str + "Peak Torque MAP\n";
            }
            if (str.length() > 0 && !bV.a(a("The following have values greater than 100:") + "\n" + str + a("This is odd.") + "\n" + a("Are you sure you want to use these values?"), (Component) this, true)) {
                return false;
            }
        }
        boolean z2 = this.f8287m.getSelectedItem().equals(f8291z) || this.f8287m.getSelectedItem().equals(f8293B);
        double d2 = this.f8281g.e() > 101.3d ? z2 ? 0.52d : 0.56d : 0.46d;
        double d3 = this.f8281g.e() > 101.3d ? z2 ? 0.56d : 0.6d : 0.49d;
        if (((941100.0d * d3) * this.f8280f.e()) / (this.f8285k.e() * this.f8278d.e()) <= ((((941100.0d * d2) * this.f8283i.e()) / (this.f8285k.e() * 5252.0d)) * d3) / d2 || bV.a(a("Volumetric Efficency is higher at peak HP than at peak Torque.") + "\n" + a("These numbers do not appear to be realistic guesses.") + "\n" + a("Are you sure you want to use these values?"), (Component) this, true)) {
            return this.f8278d.e() >= this.f8279e.e() / 2.0d || bV.a(new StringBuilder().append(a("Peak RPM seems very high compared to power RPM.")).append("\n").append(a("Are you sure you want to use these values?")).toString(), (Component) this, true);
        }
        return false;
    }

    private String a(String str) {
        return C1818g.b(str);
    }

    private JPanel j() {
        JPanel jPanel = new JPanel();
        jPanel.setLayout(new GridLayout(0, 1, 3, 3));
        C1215k c1215k = new C1215k(this, "", new JLabel(""));
        c1215k.a(new JLabel(C1818g.b("RPM"), 0));
        c1215k.a(new JLabel(C1818g.b("MAP (kPa)"), 0));
        jPanel.add(c1215k);
        C1215k c1215k2 = new C1215k(this, C1818g.b("Idle"), new JLabel());
        c1215k2.a(this.f8276b);
        c1215k2.a(this.f8277c);
        jPanel.add(c1215k2);
        C1215k c1215k3 = new C1215k(this, C1818g.b("Engine Redline"), new JLabel());
        c1215k3.a(this.f8279e);
        c1215k3.a(new JLabel());
        jPanel.add(c1215k3);
        C1215k c1215k4 = new C1215k(this, "", new JLabel("HP", 0));
        c1215k4.a(new JLabel(C1818g.b("RPM"), 0));
        c1215k4.a(new JLabel(C1818g.b("MAP (kPa)"), 0));
        jPanel.add(c1215k4);
        C1215k c1215k5 = new C1215k(this, C1818g.b("Peak Power"), this.f8280f);
        c1215k5.a(this.f8278d);
        c1215k5.a(this.f8281g);
        jPanel.add(c1215k5);
        C1215k c1215k6 = new C1215k(this, "", new JLabel("lbs-ft", 0));
        c1215k6.a(new JLabel(C1818g.b("RPM"), 0));
        c1215k6.a(new JLabel(C1818g.b("MAP (kPa)"), 0));
        jPanel.add(c1215k6);
        C1215k c1215k7 = new C1215k(this, C1818g.b("Peak Torque"), this.f8283i);
        c1215k7.a(this.f8282h);
        c1215k7.a(this.f8284j);
        jPanel.add(c1215k7);
        C1215k c1215k8 = new C1215k(this, "", new JLabel("   CID   ", 0));
        c1215k8.a(new JLabel(C1818g.b("      cc      "), 0));
        jPanel.add(c1215k8);
        C1215k c1215k9 = new C1215k(this, C1818g.b("Engine Displacement"), this.f8285k);
        c1215k9.a(this.f8286l);
        jPanel.add(c1215k9);
        this.f8285k.addKeyListener(new C1212h(this));
        this.f8286l.addKeyListener(new C1213i(this));
        C1216l c1216l = new C1216l(this);
        this.f8276b.addFocusListener(c1216l);
        this.f8277c.addFocusListener(c1216l);
        this.f8278d.addFocusListener(c1216l);
        this.f8279e.addFocusListener(c1216l);
        this.f8280f.addFocusListener(c1216l);
        this.f8281g.addFocusListener(c1216l);
        this.f8282h.addFocusListener(c1216l);
        this.f8283i.addFocusListener(c1216l);
        this.f8284j.addFocusListener(c1216l);
        this.f8285k.addFocusListener(c1216l);
        this.f8286l.addFocusListener(c1216l);
        return jPanel;
    }

    /* JADX INFO: Access modifiers changed from: private */
    public void k() {
        if (a()) {
            if (this.f8301F == f8297p) {
                l();
            } else if (this.f8301F == f8298q || this.f8301F == f8299r) {
                m();
            } else {
                bV.d("Undefined Table type.\nDon't know what to generate??", this);
            }
        }
    }

    private void l() {
        try {
            C1701s c1701sG = this.f8275a.g();
            C1701s c1701s = new C1701s();
            c1701s.a(c1701sG.getRowCount(), c1701sG.getColumnCount());
            C1701s c1701sA = C1703u.a(c1701s, 20.0d, 400.0d, this.f8276b.e(), this.f8279e.e());
            for (int i2 = 0; i2 < c1701sA.getRowCount(); i2++) {
                for (int i3 = 0; i3 < c1701sA.getColumnCount(); i3++) {
                    c1701sA.setValueAt(Double.valueOf(14.7d), i2, i3);
                }
            }
            boolean z2 = this.f8287m.getSelectedItem().equals(f8291z) || this.f8287m.getSelectedItem().equals(f8293B);
            if (this.f8294o.getSelectedItem().equals(f8296D)) {
                C1703u.a(c1701sG, c1701sA, this.f8276b.e(), this.f8277c.e(), this.f8278d.e(), this.f8280f.e(), this.f8281g.e(), this.f8282h.e(), this.f8283i.e(), this.f8284j.e(), this.f8285k.e(), z2, 1.0d);
            } else {
                C1677fh.a(C1703u.a(c1701sA, c1701sG.getColumnCount(), c1701sG.getRowCount(), this.f8276b.e(), this.f8277c.e(), this.f8278d.e(), this.f8279e.e(), this.f8280f.e(), this.f8281g.e(), this.f8282h.e(), this.f8283i.e(), this.f8284j.e(), this.f8285k.e(), z2, 1.0d), c1701sG);
            }
            g();
        } catch (V.a e2) {
            C.a("Failed to generate VE Table", e2, this);
        }
    }

    private void m() {
        try {
            C1701s c1701sG = this.f8275a.g();
            C1701s c1701s = new C1701s();
            c1701s.a(c1701sG.getRowCount(), c1701sG.getColumnCount());
            if (this.f8294o.getSelectedItem().equals(f8296D)) {
                C1677fh.a(c1701sG, c1701s);
            } else {
                c1701s = C1703u.a(c1701s, this.f8276b.e(), this.f8277c.e(), this.f8278d.e(), this.f8279e.e(), this.f8280f.e(), this.f8281g.e(), this.f8282h.e(), this.f8283i.e(), this.f8284j.e(), this.f8287m.getSelectedItem().equals(f8291z) || this.f8287m.getSelectedItem().equals(f8293B));
            }
            C1677fh.a(C1703u.a(c1701s, this.f8301F == f8299r ? f8300E : 1.0d), c1701sG);
            g();
        } catch (V.a e2) {
            C.a("Failed to generate VE Table", e2, this);
        }
    }

    private String a(String str, String str2) {
        String strA;
        return (this.f8303t == null || (strA = this.f8303t.a(str)) == null || strA.equals("")) ? str2 : strA;
    }

    private void b(String str, String str2) {
        this.f8303t.a(str, str2);
    }

    @Override // com.efiAnalytics.ui.InterfaceC1565bc
    public void close() {
        g();
        if (this.f8305v != null) {
            this.f8305v.dispose();
        }
    }

    @Override // bn.InterfaceC1200a
    public void a(Component component) {
        Window windowB = bV.b(component);
        if (windowB instanceof Frame) {
            this.f8305v = new JDialog((Frame) windowB, a("Table Generator"));
        } else if (windowB instanceof JDialog) {
            this.f8305v = new JDialog((Dialog) windowB, a("Table Generator"));
        } else {
            this.f8305v = new JDialog((Frame) null, a("Table Generator"));
        }
        this.f8305v.add("North", c());
        this.f8305v.add(BorderLayout.CENTER, this);
        this.f8305v.addKeyListener(new C1214j(this));
        this.f8305v.enableInputMethods(true);
        this.f8305v.add("North", c());
        this.f8305v.pack();
        bV.a(component, this.f8305v);
        this.f8305v.setVisible(true);
    }
}
