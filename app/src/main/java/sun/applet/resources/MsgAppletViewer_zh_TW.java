package sun.applet.resources;

import java.util.ListResourceBundle;

/* loaded from: rt.jar:sun/applet/resources/MsgAppletViewer_zh_TW.class */
public class MsgAppletViewer_zh_TW extends ListResourceBundle {
    /* JADX WARN: Type inference failed for: r0v1, types: [java.lang.Object[], java.lang.Object[][]] */
    @Override // java.util.ListResourceBundle
    public Object[][] getContents() {
        return new Object[]{new Object[]{"textframe.button.dismiss", "關閉"}, new Object[]{"appletviewer.tool.title", "Applet 檢視器: {0}"}, new Object[]{"appletviewer.menu.applet", "Applet"}, new Object[]{"appletviewer.menuitem.restart", "重新啟動"}, new Object[]{"appletviewer.menuitem.reload", "重新載入"}, new Object[]{"appletviewer.menuitem.stop", "停止"}, new Object[]{"appletviewer.menuitem.save", "儲存..."}, new Object[]{"appletviewer.menuitem.start", "啟動"}, new Object[]{"appletviewer.menuitem.clone", "複製..."}, new Object[]{"appletviewer.menuitem.tag", "標記..."}, new Object[]{"appletviewer.menuitem.info", "資訊..."}, new Object[]{"appletviewer.menuitem.edit", "編輯"}, new Object[]{"appletviewer.menuitem.encoding", "字元編碼"}, new Object[]{"appletviewer.menuitem.print", "列印..."}, new Object[]{"appletviewer.menuitem.props", "屬性..."}, new Object[]{"appletviewer.menuitem.close", "關閉"}, new Object[]{"appletviewer.menuitem.quit", "結束"}, new Object[]{"appletviewer.label.hello", "您好..."}, new Object[]{"appletviewer.status.start", "正在啟動 Applet..."}, new Object[]{"appletviewer.appletsave.filedialogtitle", "將 Applet 序列化為檔案"}, new Object[]{"appletviewer.appletsave.err1", "將 {0} 序列化為 {1}"}, new Object[]{"appletviewer.appletsave.err2", "在 appletSave 中: {0}"}, new Object[]{"appletviewer.applettag", "顯示的標記"}, new Object[]{"appletviewer.applettag.textframe", "Applet HTML 標記"}, new Object[]{"appletviewer.appletinfo.applet", "-- 無 Applet 資訊 --"}, new Object[]{"appletviewer.appletinfo.param", "-- 無參數資訊 --"}, new Object[]{"appletviewer.appletinfo.textframe", "Applet 資訊"}, new Object[]{"appletviewer.appletprint.fail", "列印失敗。"}, new Object[]{"appletviewer.appletprint.finish", "完成列印。"}, new Object[]{"appletviewer.appletprint.cancel", "列印取消。"}, new Object[]{"appletviewer.appletencoding", "字元編碼: {0}"}, new Object[]{"appletviewer.parse.warning.requiresname", "警告: <參數名稱=... 值=...> 標記需要名稱屬性。"}, new Object[]{"appletviewer.parse.warning.paramoutside", "警告: <param> 標記在 <applet> ... </applet> 之外。"}, new Object[]{"appletviewer.parse.warning.applet.requirescode", "警告: <applet> 標記需要代碼屬性。"}, new Object[]{"appletviewer.parse.warning.applet.requiresheight", "警告: <applet> 標記需要高度屬性。"}, new Object[]{"appletviewer.parse.warning.applet.requireswidth", "警告: <applet> 標記需要寬度屬性。"}, new Object[]{"appletviewer.parse.warning.object.requirescode", "警告: <object> 標記需要代碼屬性。"}, new Object[]{"appletviewer.parse.warning.object.requiresheight", "警告: <object> 標記需要高度屬性。"}, new Object[]{"appletviewer.parse.warning.object.requireswidth", "警告: <object> 標記需要寬度屬性。"}, new Object[]{"appletviewer.parse.warning.embed.requirescode", "警告: <embed> 標記需要代碼屬性。"}, new Object[]{"appletviewer.parse.warning.embed.requiresheight", "警告: <embed> 標記需要高度屬性。"}, new Object[]{"appletviewer.parse.warning.embed.requireswidth", "警告: <embed> 標記需要寬度屬性。"}, new Object[]{"appletviewer.parse.warning.appnotLongersupported", "警告: 不再支援 <app> 標記，請改用 <applet>:"}, new Object[]{"appletviewer.usage", "用法: appletviewer <options> url(s)\n\n其中的 <options> 包括:\n  -debug                  在 Java 除錯程式中啟動 Applet 檢視器\n  -encoding <encoding>    指定 HTML 檔案使用的字元編碼\n  -J<runtime flag>        將引數傳送至 java 解譯器\n\n -J 選項不是標準選項，若有變更不另行通知。"}, new Object[]{"appletviewer.main.err.unsupportedopt", "不支援的選項: {0}"}, new Object[]{"appletviewer.main.err.unrecognizedarg", "無法辨識的引數: {0}"}, new Object[]{"appletviewer.main.err.dupoption", "重複使用選項: {0}"}, new Object[]{"appletviewer.main.err.inputfile", "未指定輸入檔案。"}, new Object[]{"appletviewer.main.err.badurl", "錯誤的 URL: {0} ( {1} )"}, new Object[]{"appletviewer.main.err.io", "讀取時發生 I/O 異常狀況: {0}"}, new Object[]{"appletviewer.main.err.readablefile", "確認 {0} 為檔案且可讀取。"}, new Object[]{"appletviewer.main.err.correcturl", "{0} 是否為正確的 URL？"}, new Object[]{"appletviewer.main.prop.store", "AppletViewer 的使用者特定屬性"}, new Object[]{"appletviewer.main.err.prop.cantread", "無法讀取使用者屬性檔案: {0}"}, new Object[]{"appletviewer.main.err.prop.cantsave", "無法儲存使用者屬性檔案: {0}"}, new Object[]{"appletviewer.main.warn.nosecmgr", "警告: 停用安全功能。"}, new Object[]{"appletviewer.main.debug.cantfinddebug", "找不到除錯程式！"}, new Object[]{"appletviewer.main.debug.cantfindmain", "在除錯程式中找不到主要方法！"}, new Object[]{"appletviewer.main.debug.exceptionindebug", "除錯程式發生異常狀況！"}, new Object[]{"appletviewer.main.debug.cantaccess", "無法存取除錯程式！"}, new Object[]{"appletviewer.main.nosecmgr", "警告: 未安裝 SecurityManager！"}, new Object[]{"appletviewer.main.warning", "警告: 未啟動 Applet。請確認輸入包含 <applet> 標記。"}, new Object[]{"appletviewer.main.warn.prop.overwrite", "警告: 依照使用者要求，暫時覆寫系統屬性: 索引鍵: {0} 舊值: {1} 新值: {2}"}, new Object[]{"appletviewer.main.warn.cantreadprops", "警告: 無法讀取 AppletViewer 屬性檔案: {0} 使用預設值。"}, new Object[]{"appletioexception.loadclass.throw.interrupted", "類別載入中斷: {0}"}, new Object[]{"appletioexception.loadclass.throw.notloaded", "未載入類別: {0}"}, new Object[]{"appletclassloader.loadcode.verbose", "開啟 {0} 的串流以取得 {1}"}, new Object[]{"appletclassloader.filenotfound", "尋找 {0} 時找不到檔案"}, new Object[]{"appletclassloader.fileformat", "載入時發生檔案格式異常狀況: {0}"}, new Object[]{"appletclassloader.fileioexception", "載入時發生 I/O 異常狀況: {0}"}, new Object[]{"appletclassloader.fileexception", "載入時發生 {0} 異常狀況: {1}"}, new Object[]{"appletclassloader.filedeath", "載入時刪除 {0}: {1}"}, new Object[]{"appletclassloader.fileerror", "載入時發生 {0} 錯誤: {1}"}, new Object[]{"appletclassloader.findclass.verbose.openstream", "開啟 {0} 的串流以取得 {1}"}, new Object[]{"appletclassloader.getresource.verbose.forname", "AppletClassLoader.getResource 的名稱: {0}"}, new Object[]{"appletclassloader.getresource.verbose.found", "找到資源: {0} 作為系統資源"}, new Object[]{"appletclassloader.getresourceasstream.verbose", "找到資源: {0} 作為系統資源"}, new Object[]{"appletpanel.runloader.err", "物件或代碼參數！"}, new Object[]{"appletpanel.runloader.exception", "還原序列化 {0} 時發生異常狀況"}, new Object[]{"appletpanel.destroyed", "已損毀 Applet。"}, new Object[]{"appletpanel.loaded", "已載入 Applet。"}, new Object[]{"appletpanel.started", "已啟用 Applet。"}, new Object[]{"appletpanel.inited", "已起始 Applet。"}, new Object[]{"appletpanel.stopped", "已停止 Applet。"}, new Object[]{"appletpanel.disposed", "已處置 Applet。"}, new Object[]{"appletpanel.nocode", "APPLET 標記遺漏 CODE 參數。"}, new Object[]{"appletpanel.notfound", "載入: 找不到類別 {0}。"}, new Object[]{"appletpanel.nocreate", "載入: 無法建立 {0}。"}, new Object[]{"appletpanel.noconstruct", "載入: {0} 非公用或沒有公用建構子。"}, new Object[]{"appletpanel.death", "已刪除"}, new Object[]{"appletpanel.exception", "異常狀況: {0}。"}, new Object[]{"appletpanel.exception2", "異常狀況: {0}: {1}。"}, new Object[]{"appletpanel.error", "錯誤: {0}。"}, new Object[]{"appletpanel.error2", "錯誤: {0}: {1}。"}, new Object[]{"appletpanel.notloaded", "起始: 未載入 Applet。"}, new Object[]{"appletpanel.notinited", "啟動: 未起始 Applet。"}, new Object[]{"appletpanel.notstarted", "停止: 未啟動 Applet。"}, new Object[]{"appletpanel.notstopped", "損毀: 未停止 Applet。"}, new Object[]{"appletpanel.notdestroyed", "處置: 未損毀 Applet。"}, new Object[]{"appletpanel.notdisposed", "載入: 未處置 Applet。"}, new Object[]{"appletpanel.bail", "已中斷: 正在結束。"}, new Object[]{"appletpanel.filenotfound", "尋找 {0} 時找不到檔案"}, new Object[]{"appletpanel.fileformat", "載入時發生檔案格式異常狀況: {0}"}, new Object[]{"appletpanel.fileioexception", "載入時發生 I/O 異常狀況: {0}"}, new Object[]{"appletpanel.fileexception", "載入時發生 {0} 異常狀況: {1}"}, new Object[]{"appletpanel.filedeath", "載入時刪除 {0}: {1}"}, new Object[]{"appletpanel.fileerror", "載入時發生 {0} 錯誤: {1}"}, new Object[]{"appletpanel.badattribute.exception", "HTML 剖析: 寬度/高度屬性的值不正確"}, new Object[]{"appletillegalargumentexception.objectinputstream", "AppletObjectInputStream 需要非空值載入器"}, new Object[]{"appletprops.title", "AppletViewer 屬性"}, new Object[]{"appletprops.label.http.server", "Http 代理主機伺服器:"}, new Object[]{"appletprops.label.http.proxy", "Http 代理主機連接埠:"}, new Object[]{"appletprops.label.network", "網路存取:"}, new Object[]{"appletprops.choice.network.item.none", "無"}, new Object[]{"appletprops.choice.network.item.applethost", "Applet 主機"}, new Object[]{"appletprops.choice.network.item.unrestricted", "不受限制"}, new Object[]{"appletprops.label.class", "類別存取:"}, new Object[]{"appletprops.choice.class.item.restricted", "受限制"}, new Object[]{"appletprops.choice.class.item.unrestricted", "不受限制"}, new Object[]{"appletprops.label.unsignedapplet", "允許未簽署的 Applet:"}, new Object[]{"appletprops.choice.unsignedapplet.no", "否"}, new Object[]{"appletprops.choice.unsignedapplet.yes", "是"}, new Object[]{"appletprops.button.apply", "套用"}, new Object[]{"appletprops.button.cancel", "取消"}, new Object[]{"appletprops.button.reset", "重設"}, new Object[]{"appletprops.apply.exception", "無法儲存屬性: {0}"}, new Object[]{"appletprops.title.invalidproxy", "無效的項目"}, new Object[]{"appletprops.label.invalidproxy", "代理主機連接埠必須是正整數值。"}, new Object[]{"appletprops.button.ok", "確定"}, new Object[]{"appletprops.prop.store", "AppletViewer 的使用者特定屬性"}, new Object[]{"appletsecurityexception.checkcreateclassloader", "安全異常狀況: classloader"}, new Object[]{"appletsecurityexception.checkaccess.thread", "安全異常狀況: thread"}, new Object[]{"appletsecurityexception.checkaccess.threadgroup", "安全異常狀況: threadgroup: {0}"}, new Object[]{"appletsecurityexception.checkexit", "安全異常狀況: exit: {0}"}, new Object[]{"appletsecurityexception.checkexec", "安全異常狀況: exec: {0}"}, new Object[]{"appletsecurityexception.checklink", "安全異常狀況: link: {0}"}, new Object[]{"appletsecurityexception.checkpropsaccess", "安全異常狀況: 屬性"}, new Object[]{"appletsecurityexception.checkpropsaccess.key", "安全異常狀況: 屬性存取 {0}"}, new Object[]{"appletsecurityexception.checkread.exception1", "安全異常狀況: {0}，{1}"}, new Object[]{"appletsecurityexception.checkread.exception2", "安全異常狀況: file.read: {0}"}, new Object[]{"appletsecurityexception.checkread", "安全異常狀況: file.read: {0} == {1}"}, new Object[]{"appletsecurityexception.checkwrite.exception", "安全異常狀況: {0}，{1}"}, new Object[]{"appletsecurityexception.checkwrite", "安全異常狀況: file.write: {0} == {1}"}, new Object[]{"appletsecurityexception.checkread.fd", "安全異常狀況: fd.read"}, new Object[]{"appletsecurityexception.checkwrite.fd", "安全異常狀況: fd.write"}, new Object[]{"appletsecurityexception.checklisten", "安全異常狀況: socket.listen: {0}"}, new Object[]{"appletsecurityexception.checkaccept", "安全異常狀況: socket.accept: {0}:{1}"}, new Object[]{"appletsecurityexception.checkconnect.networknone", "安全異常狀況: socket.connect: {0}->{1}"}, new Object[]{"appletsecurityexception.checkconnect.networkhost1", "安全異常狀況: 無法從來源 {1} 連線至 {0}。"}, new Object[]{"appletsecurityexception.checkconnect.networkhost2", "安全異常狀況: 無法解析主機 {0} 或 {1} 的 IP。"}, new Object[]{"appletsecurityexception.checkconnect.networkhost3", "安全異常狀況: 無法解析主機 {0} 的 IP。請參閱 trustProxy 屬性。"}, new Object[]{"appletsecurityexception.checkconnect", "安全異常狀況: connect: {0}->{1}"}, new Object[]{"appletsecurityexception.checkpackageaccess", "安全異常狀況: 無法存取套裝程式: {0}"}, new Object[]{"appletsecurityexception.checkpackagedefinition", "安全異常狀況: 無法定義套裝程式: {0}"}, new Object[]{"appletsecurityexception.cannotsetfactory", "安全異常狀況: 無法設定處理站"}, new Object[]{"appletsecurityexception.checkmemberaccess", "安全異常狀況: 檢查成員存取"}, new Object[]{"appletsecurityexception.checkgetprintjob", "安全異常狀況: getPrintJob"}, new Object[]{"appletsecurityexception.checksystemclipboardaccess", "安全異常狀況: getSystemClipboard"}, new Object[]{"appletsecurityexception.checkawteventqueueaccess", "安全異常狀況: getEventQueue"}, new Object[]{"appletsecurityexception.checksecurityaccess", "安全異常狀況: 安全作業: {0}"}, new Object[]{"appletsecurityexception.getsecuritycontext.unknown", "不明的類別載入器類型。無法檢查 getContext"}, new Object[]{"appletsecurityexception.checkread.unknown", "不明的類別載入器類型。無法檢查 read {0}"}, new Object[]{"appletsecurityexception.checkconnect.unknown", "不明的類別載入器類型。無法檢查連線"}};
    }
}
