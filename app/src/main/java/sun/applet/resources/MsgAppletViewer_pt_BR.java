package sun.applet.resources;

import java.util.ListResourceBundle;

/* loaded from: rt.jar:sun/applet/resources/MsgAppletViewer_pt_BR.class */
public class MsgAppletViewer_pt_BR extends ListResourceBundle {
    /* JADX WARN: Type inference failed for: r0v1, types: [java.lang.Object[], java.lang.Object[][]] */
    @Override // java.util.ListResourceBundle
    public Object[][] getContents() {
        return new Object[]{new Object[]{"textframe.button.dismiss", "Rejeitar"}, new Object[]{"appletviewer.tool.title", "Visualizador do Applet: {0}"}, new Object[]{"appletviewer.menu.applet", "Applet"}, new Object[]{"appletviewer.menuitem.restart", "Reiniciar"}, new Object[]{"appletviewer.menuitem.reload", "Recarregar"}, new Object[]{"appletviewer.menuitem.stop", "Interromper"}, new Object[]{"appletviewer.menuitem.save", "Salvar"}, new Object[]{"appletviewer.menuitem.start", "Iniciar"}, new Object[]{"appletviewer.menuitem.clone", "Clonar..."}, new Object[]{"appletviewer.menuitem.tag", "Tag..."}, new Object[]{"appletviewer.menuitem.info", "Informações..."}, new Object[]{"appletviewer.menuitem.edit", "Editar"}, new Object[]{"appletviewer.menuitem.encoding", "Codificação do Caractere"}, new Object[]{"appletviewer.menuitem.print", "Imprimir..."}, new Object[]{"appletviewer.menuitem.props", "Propriedades..."}, new Object[]{"appletviewer.menuitem.close", "Fechar"}, new Object[]{"appletviewer.menuitem.quit", "Sair"}, new Object[]{"appletviewer.label.hello", "Olá..."}, new Object[]{"appletviewer.status.start", "iniciando o applet..."}, new Object[]{"appletviewer.appletsave.filedialogtitle", "Serializar Applet no Arquivo"}, new Object[]{"appletviewer.appletsave.err1", "serializando um {0} para {1}"}, new Object[]{"appletviewer.appletsave.err2", "no appletSave: {0}"}, new Object[]{"appletviewer.applettag", "Tag mostrada"}, new Object[]{"appletviewer.applettag.textframe", "Tag HTML do Applet"}, new Object[]{"appletviewer.appletinfo.applet", "-- nenhuma informação do applet --"}, new Object[]{"appletviewer.appletinfo.param", "-- sem informação de parâmetro --"}, new Object[]{"appletviewer.appletinfo.textframe", "Informações do Applet"}, new Object[]{"appletviewer.appletprint.fail", "Falha na impressão."}, new Object[]{"appletviewer.appletprint.finish", "Impressão finalizada."}, new Object[]{"appletviewer.appletprint.cancel", "Impressão cancelada."}, new Object[]{"appletviewer.appletencoding", "Codificação de Caractere: {0}"}, new Object[]{"appletviewer.parse.warning.requiresname", "Advertência: a tag <param name=... value=...> requer um atributo de nome."}, new Object[]{"appletviewer.parse.warning.paramoutside", "Advertência: a tag <param> externa <applet> ... </applet>."}, new Object[]{"appletviewer.parse.warning.applet.requirescode", "Advertência: a tag <applet> requer um atributo de código."}, new Object[]{"appletviewer.parse.warning.applet.requiresheight", "Advertência: a tag <applet> requer um atributo de altura."}, new Object[]{"appletviewer.parse.warning.applet.requireswidth", "Advertência: a tag <applet> requer um atributo de largura."}, new Object[]{"appletviewer.parse.warning.object.requirescode", "Advertência: a tag <object> requer um atributo de código."}, new Object[]{"appletviewer.parse.warning.object.requiresheight", "Advertência: a tag <object> requer um atributo de altura."}, new Object[]{"appletviewer.parse.warning.object.requireswidth", "Advertência: a tag <object> requer um atributo de largura."}, new Object[]{"appletviewer.parse.warning.embed.requirescode", "Advertência: a tag <embed> requer um atributo de código."}, new Object[]{"appletviewer.parse.warning.embed.requiresheight", "Advertência: a tag <embed> requer um atributo de altura."}, new Object[]{"appletviewer.parse.warning.embed.requireswidth", "Advertência: a tag <embed> requer um atributo de largura."}, new Object[]{"appletviewer.parse.warning.appnotLongersupported", "Advertência: a tag <app> não é mais suportada; use <applet>:"}, new Object[]{"appletviewer.usage", "Uso: appletviewer <opções> url(s)\n\nem que as <opções> incluem:\n  -debug                  Inicia o visualizador do applet no depurador Java\n  -encoding <codificação>    Especifica a codificação de caractere usada pelos arquivos HTML\n  -J<flag de runtime>        Informa o argumento ao intepretador java\n\nA opção -J não é padrão e está sujeita à alteração sem notificação."}, new Object[]{"appletviewer.main.err.unsupportedopt", "Opção não suportada: {0}"}, new Object[]{"appletviewer.main.err.unrecognizedarg", "Argumento não reconhecido: {0}"}, new Object[]{"appletviewer.main.err.dupoption", "Uso duplicado da opção: {0}"}, new Object[]{"appletviewer.main.err.inputfile", "Nenhum arquivo de entrada especificado."}, new Object[]{"appletviewer.main.err.badurl", "URL Inválido: {0} ( {1} )"}, new Object[]{"appletviewer.main.err.io", "Exceção de E/S ao ler: {0}"}, new Object[]{"appletviewer.main.err.readablefile", "Certifique-se de que {0} seja um arquivo e seja legível."}, new Object[]{"appletviewer.main.err.correcturl", "O URL {0} está correto?"}, new Object[]{"appletviewer.main.prop.store", "Propriedades específicas do usuário do AppletViewer"}, new Object[]{"appletviewer.main.err.prop.cantread", "Não é possível ler o arquivo de propriedades do usuário: {0}"}, new Object[]{"appletviewer.main.err.prop.cantsave", "Não é possível salvar o arquivo de propriedades do usuário: {0}"}, new Object[]{"appletviewer.main.warn.nosecmgr", "Advertência: desativando a segurança."}, new Object[]{"appletviewer.main.debug.cantfinddebug", "Não é possível localizar o depurador!"}, new Object[]{"appletviewer.main.debug.cantfindmain", "Não é possível localizar o método main no depurador!"}, new Object[]{"appletviewer.main.debug.exceptionindebug", "Exceção no depurador!"}, new Object[]{"appletviewer.main.debug.cantaccess", "Não é possível acessar o depurador!"}, new Object[]{"appletviewer.main.nosecmgr", "Advertência: SecurityManager não instalado!"}, new Object[]{"appletviewer.main.warning", "Advertência: Nenhum applet iniciado. Certifique-se de que a entrada contenha uma tag <applet>."}, new Object[]{"appletviewer.main.warn.prop.overwrite", "Advertência: Substituindo a propriedade do sistema temporariamente a pedido do usuário: chave: {0} valor antigo: {1} valor novo: {2}"}, new Object[]{"appletviewer.main.warn.cantreadprops", "Advertência: Não é possível ler o arquivo de propriedades AppletViewer: {0} Usando padrões."}, new Object[]{"appletioexception.loadclass.throw.interrupted", "carregamento de classe interrompido: {0}"}, new Object[]{"appletioexception.loadclass.throw.notloaded", "classe não carregada: {0}"}, new Object[]{"appletclassloader.loadcode.verbose", "Fluxo de abertura para: {0} para obter {1}"}, new Object[]{"appletclassloader.filenotfound", "Arquivo não encontrado ao procurar: {0}"}, new Object[]{"appletclassloader.fileformat", "Exceção de formato do arquivo ao carregar: {0}"}, new Object[]{"appletclassloader.fileioexception", "Exceção de E/S ao carregar: {0}"}, new Object[]{"appletclassloader.fileexception", "exceção de {0} ao carregar: {1}"}, new Object[]{"appletclassloader.filedeath", "{0} eliminado ao carregar: {1}"}, new Object[]{"appletclassloader.fileerror", "erro de {0} ao carregar: {1}"}, new Object[]{"appletclassloader.findclass.verbose.openstream", "Fluxo de abertura para: {0} para obter {1}"}, new Object[]{"appletclassloader.getresource.verbose.forname", "AppletClassLoader.getResource do nome: {0}"}, new Object[]{"appletclassloader.getresource.verbose.found", "Recurso encontrado: {0} como um recurso do sistema"}, new Object[]{"appletclassloader.getresourceasstream.verbose", "Recurso encontrado: {0} como um recurso do sistema"}, new Object[]{"appletpanel.runloader.err", "Parâmetro de código ou objeto!"}, new Object[]{"appletpanel.runloader.exception", "exceção ao desserializar {0}"}, new Object[]{"appletpanel.destroyed", "Applet destruído."}, new Object[]{"appletpanel.loaded", "Applet carregado."}, new Object[]{"appletpanel.started", "Applet iniciado."}, new Object[]{"appletpanel.inited", "Applet inicializado."}, new Object[]{"appletpanel.stopped", "Applet interrompido."}, new Object[]{"appletpanel.disposed", "Applet descartado."}, new Object[]{"appletpanel.nocode", "A tag APPLET não encontrou o parâmetro CODE."}, new Object[]{"appletpanel.notfound", "carga: classe {0} não encontrada."}, new Object[]{"appletpanel.nocreate", "carga: {0} não pode ser instanciada."}, new Object[]{"appletpanel.noconstruct", "carga: {0} não é pública ou não tem construtor público."}, new Object[]{"appletpanel.death", "eliminado"}, new Object[]{"appletpanel.exception", "exceção: {0}."}, new Object[]{"appletpanel.exception2", "exceção: {0}: {1}."}, new Object[]{"appletpanel.error", "erro: {0}."}, new Object[]{"appletpanel.error2", "erro: {0}: {1}."}, new Object[]{"appletpanel.notloaded", "Inic: applet não carregado."}, new Object[]{"appletpanel.notinited", "Iniciar: applet não inicializado."}, new Object[]{"appletpanel.notstarted", "Interromper: applet não inicializado."}, new Object[]{"appletpanel.notstopped", "Destruir: applet não interrompido."}, new Object[]{"appletpanel.notdestroyed", "Descartar: applet não destruído."}, new Object[]{"appletpanel.notdisposed", "Carregar: applet não descartado."}, new Object[]{"appletpanel.bail", "Interrompido: esvaziando."}, new Object[]{"appletpanel.filenotfound", "Arquivo não encontrado ao procurar: {0}"}, new Object[]{"appletpanel.fileformat", "Exceção de formato do arquivo ao carregar: {0}"}, new Object[]{"appletpanel.fileioexception", "Exceção de E/S ao carregar: {0}"}, new Object[]{"appletpanel.fileexception", "exceção de {0} ao carregar: {1}"}, new Object[]{"appletpanel.filedeath", "{0} eliminado ao carregar: {1}"}, new Object[]{"appletpanel.fileerror", "erro de {0} ao carregar: {1}"}, new Object[]{"appletpanel.badattribute.exception", "Parsing de HTML: valor incorreto do atributo de largura/altura"}, new Object[]{"appletillegalargumentexception.objectinputstream", "AppletObjectInputStream requer um carregador não nulo"}, new Object[]{"appletprops.title", "Propriedades do AppletViewer"}, new Object[]{"appletprops.label.http.server", "Servidor proxy Http:"}, new Object[]{"appletprops.label.http.proxy", "Porta proxy Http:"}, new Object[]{"appletprops.label.network", "Acesso de rede:"}, new Object[]{"appletprops.choice.network.item.none", "Nenhum"}, new Object[]{"appletprops.choice.network.item.applethost", "Host do Applet"}, new Object[]{"appletprops.choice.network.item.unrestricted", "Irrestrito"}, new Object[]{"appletprops.label.class", "Acesso à classe:"}, new Object[]{"appletprops.choice.class.item.restricted", "Restrito"}, new Object[]{"appletprops.choice.class.item.unrestricted", "Irrestrito"}, new Object[]{"appletprops.label.unsignedapplet", "Permitir applets não assinados:"}, new Object[]{"appletprops.choice.unsignedapplet.no", "Não"}, new Object[]{"appletprops.choice.unsignedapplet.yes", "Sim"}, new Object[]{"appletprops.button.apply", "Aplicar"}, new Object[]{"appletprops.button.cancel", "Cancelar"}, new Object[]{"appletprops.button.reset", "Redefinir"}, new Object[]{"appletprops.apply.exception", "Falha ao salvar as propriedades: {0}"}, new Object[]{"appletprops.title.invalidproxy", "Entrada Inválida"}, new Object[]{"appletprops.label.invalidproxy", "A Porta Proxy deve ser um valor inteiro positivo."}, new Object[]{"appletprops.button.ok", "OK"}, new Object[]{"appletprops.prop.store", "Propriedades específicas do usuário do AppletViewer"}, new Object[]{"appletsecurityexception.checkcreateclassloader", "Exceção de Segurança: carregador de classes"}, new Object[]{"appletsecurityexception.checkaccess.thread", "Exceção de Segurança: thread"}, new Object[]{"appletsecurityexception.checkaccess.threadgroup", "Exceção de Segurança: grupo de threads: {0}"}, new Object[]{"appletsecurityexception.checkexit", "Exceção de Segurança: saída: {0}"}, new Object[]{"appletsecurityexception.checkexec", "Exceção de Segurança: exec.: {0}"}, new Object[]{"appletsecurityexception.checklink", "Exceção de Segurança: link: {0}"}, new Object[]{"appletsecurityexception.checkpropsaccess", "Exceção de Segurança: propriedades"}, new Object[]{"appletsecurityexception.checkpropsaccess.key", "Exceção de Segurança: acesso às propriedades {0}"}, new Object[]{"appletsecurityexception.checkread.exception1", "Exceção de Segurança: {0}, {1}"}, new Object[]{"appletsecurityexception.checkread.exception2", "Exceção de Segurança: file.read: {0}"}, new Object[]{"appletsecurityexception.checkread", "Exceção de Segurança: file.read: {0} == {1}"}, new Object[]{"appletsecurityexception.checkwrite.exception", "Exceção de Segurança: {0}, {1}"}, new Object[]{"appletsecurityexception.checkwrite", "Exceção de Segurança: file.write: {0} == {1}"}, new Object[]{"appletsecurityexception.checkread.fd", "Exceção de Segurança: fd.read"}, new Object[]{"appletsecurityexception.checkwrite.fd", "Exceção de Segurança: fd.write"}, new Object[]{"appletsecurityexception.checklisten", "Exceção de Segurança: socket.listen: {0}"}, new Object[]{"appletsecurityexception.checkaccept", "Exceção de Segurança: socket.accept: {0}:{1}"}, new Object[]{"appletsecurityexception.checkconnect.networknone", "Exceção de Segurança: socket.connect: {0}->{1}"}, new Object[]{"appletsecurityexception.checkconnect.networkhost1", "Exceção de Segurança: Não foi possível estabelecer conexão com {0} com a origem de {1}."}, new Object[]{"appletsecurityexception.checkconnect.networkhost2", "Exceção de Segurança: Não foi possível resolver o IP para o host {0} ou para {1}. "}, new Object[]{"appletsecurityexception.checkconnect.networkhost3", "Exceção de Segurança: Não foi possível resolver o IP para o host {0}. Consulte a propriedade trustProxy."}, new Object[]{"appletsecurityexception.checkconnect", "Exceção de Segurança: conectar: {0}->{1}"}, new Object[]{"appletsecurityexception.checkpackageaccess", "Exceção de Segurança: não é possível acessar o pacote: {0}"}, new Object[]{"appletsecurityexception.checkpackagedefinition", "Exceção de Segurança: não é possível definir o pacote: {0}"}, new Object[]{"appletsecurityexception.cannotsetfactory", "Exceção de Segurança: não é possível definir o factory"}, new Object[]{"appletsecurityexception.checkmemberaccess", "Exceção de Segurança: verificar acesso do membro"}, new Object[]{"appletsecurityexception.checkgetprintjob", "Exceção de Segurança: getPrintJob"}, new Object[]{"appletsecurityexception.checksystemclipboardaccess", "Exceção de Segurança: getSystemClipboard"}, new Object[]{"appletsecurityexception.checkawteventqueueaccess", "Exceção de Segurança: getEventQueue"}, new Object[]{"appletsecurityexception.checksecurityaccess", "Exceção de Segurança: operação de segurança: {0}"}, new Object[]{"appletsecurityexception.getsecuritycontext.unknown", "tipo de carregador de classe desconhecido. não é possível verificar getContext"}, new Object[]{"appletsecurityexception.checkread.unknown", "tipo de carregador de classe desconhecido. não é possível verificar a leitura {0}"}, new Object[]{"appletsecurityexception.checkconnect.unknown", "tipo de carregador de classe desconhecido. não é possível verificar a conexão"}};
    }
}
