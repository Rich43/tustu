package sun.security.tools.policytool;

import java.util.ListResourceBundle;

/* loaded from: rt.jar:sun/security/tools/policytool/Resources.class */
public class Resources extends ListResourceBundle {
    private static final Object[][] contents = {new Object[]{"NEWLINE", "\n"}, new Object[]{"Warning.A.public.key.for.alias.signers.i.does.not.exist.Make.sure.a.KeyStore.is.properly.configured.", "Warning: A public key for alias {0} does not exist.  Make sure a KeyStore is properly configured."}, new Object[]{"Warning.Class.not.found.class", "Warning: Class not found: {0}"}, new Object[]{"Warning.Invalid.argument.s.for.constructor.arg", "Warning: Invalid argument(s) for constructor: {0}"}, new Object[]{"Illegal.Principal.Type.type", "Illegal Principal Type: {0}"}, new Object[]{"Illegal.option.option", "Illegal option: {0}"}, new Object[]{"Usage.policytool.options.", "Usage: policytool [options]"}, new Object[]{".file.file.policy.file.location", "  [-file <file>]    policy file location"}, new Object[]{ToolWindow.NEW_POLICY_FILE, "&New"}, new Object[]{ToolWindow.OPEN_POLICY_FILE, "&Open..."}, new Object[]{ToolWindow.SAVE_POLICY_FILE, "&Save"}, new Object[]{ToolWindow.SAVE_AS_POLICY_FILE, "Save &As..."}, new Object[]{ToolWindow.VIEW_WARNINGS, "View &Warning Log"}, new Object[]{ToolWindow.QUIT, "E&xit"}, new Object[]{ToolWindow.ADD_POLICY_ENTRY, "&Add Policy Entry"}, new Object[]{ToolWindow.EDIT_POLICY_ENTRY, "&Edit Policy Entry"}, new Object[]{ToolWindow.REMOVE_POLICY_ENTRY, "&Remove Policy Entry"}, new Object[]{ToolWindow.EDIT_KEYSTORE, "&Edit"}, new Object[]{"Retain", "Retain"}, new Object[]{"Warning.File.name.may.include.escaped.backslash.characters.It.is.not.necessary.to.escape.backslash.characters.the.tool.escapes", "Warning: File name may include escaped backslash characters. It is not necessary to escape backslash characters (the tool escapes characters as necessary when writing the policy contents to the persistent store).\n\nClick on Retain to retain the entered name, or click on Edit to edit the name."}, new Object[]{ToolWindow.ADD_PUBKEY_ALIAS, "Add Public Key Alias"}, new Object[]{ToolWindow.REMOVE_PUBKEY_ALIAS, "Remove Public Key Alias"}, new Object[]{"File", "&File"}, new Object[]{"KeyStore", "&KeyStore"}, new Object[]{"Policy.File.", "Policy File:"}, new Object[]{"Could.not.open.policy.file.policyFile.e.toString.", "Could not open policy file: {0}: {1}"}, new Object[]{"Policy.Tool", "Policy Tool"}, new Object[]{"Errors.have.occurred.while.opening.the.policy.configuration.View.the.Warning.Log.for.more.information.", "Errors have occurred while opening the policy configuration.  View the Warning Log for more information."}, new Object[]{"Error", "Error"}, new Object[]{"OK", "OK"}, new Object[]{"Status", "Status"}, new Object[]{"Warning", "Warning"}, new Object[]{"Permission.", "Permission:                                                       "}, new Object[]{"Principal.Type.", "Principal Type:"}, new Object[]{"Principal.Name.", "Principal Name:"}, new Object[]{"Target.Name.", "Target Name:                                                    "}, new Object[]{"Actions.", "Actions:                                                             "}, new Object[]{"OK.to.overwrite.existing.file.filename.", "OK to overwrite existing file {0}?"}, new Object[]{"Cancel", "Cancel"}, new Object[]{"CodeBase.", "&CodeBase:"}, new Object[]{"SignedBy.", "&SignedBy:"}, new Object[]{"Add.Principal", "&Add Principal"}, new Object[]{"Edit.Principal", "&Edit Principal"}, new Object[]{"Remove.Principal", "&Remove Principal"}, new Object[]{"Principals.", "&Principals:"}, new Object[]{".Add.Permission", "  A&dd Permission"}, new Object[]{".Edit.Permission", "  Ed&it Permission"}, new Object[]{"Remove.Permission", "Re&move Permission"}, new Object[]{"Done", "Done"}, new Object[]{"KeyStore.URL.", "KeyStore &URL:"}, new Object[]{"KeyStore.Type.", "KeyStore &Type:"}, new Object[]{"KeyStore.Provider.", "KeyStore &Provider:"}, new Object[]{"KeyStore.Password.URL.", "KeyStore Pass&word URL:"}, new Object[]{"Principals", "Principals"}, new Object[]{".Edit.Principal.", "  Edit Principal:"}, new Object[]{".Add.New.Principal.", "  Add New Principal:"}, new Object[]{"Permissions", "Permissions"}, new Object[]{".Edit.Permission.", "  Edit Permission:"}, new Object[]{".Add.New.Permission.", "  Add New Permission:"}, new Object[]{"Signed.By.", "Signed By:"}, new Object[]{"Cannot.Specify.Principal.with.a.Wildcard.Class.without.a.Wildcard.Name", "Cannot Specify Principal with a Wildcard Class without a Wildcard Name"}, new Object[]{"Cannot.Specify.Principal.without.a.Name", "Cannot Specify Principal without a Name"}, new Object[]{"Permission.and.Target.Name.must.have.a.value", "Permission and Target Name must have a value"}, new Object[]{"Remove.this.Policy.Entry.", "Remove this Policy Entry?"}, new Object[]{"Overwrite.File", "Overwrite File"}, new Object[]{"Policy.successfully.written.to.filename", "Policy successfully written to {0}"}, new Object[]{"null.filename", "null filename"}, new Object[]{"Save.changes.", "Save changes?"}, new Object[]{"Yes", "&Yes"}, new Object[]{"No", "&No"}, new Object[]{"Policy.Entry", "Policy Entry"}, new Object[]{"Save.Changes", "Save Changes"}, new Object[]{"No.Policy.Entry.selected", "No Policy Entry selected"}, new Object[]{"Unable.to.open.KeyStore.ex.toString.", "Unable to open KeyStore: {0}"}, new Object[]{"No.principal.selected", "No principal selected"}, new Object[]{"No.permission.selected", "No permission selected"}, new Object[]{"name", "name"}, new Object[]{"configuration.type", "configuration type"}, new Object[]{"environment.variable.name", "environment variable name"}, new Object[]{"library.name", "library name"}, new Object[]{"package.name", "package name"}, new Object[]{"policy.type", "policy type"}, new Object[]{"property.name", "property name"}, new Object[]{"provider.name", "provider name"}, new Object[]{"url", "url"}, new Object[]{"method.list", "method list"}, new Object[]{"request.headers.list", "request headers list"}, new Object[]{"Principal.List", "Principal List"}, new Object[]{"Permission.List", "Permission List"}, new Object[]{"Code.Base", "Code Base"}, new Object[]{"KeyStore.U.R.L.", "KeyStore U R L:"}, new Object[]{"KeyStore.Password.U.R.L.", "KeyStore Password U R L:"}};

    @Override // java.util.ListResourceBundle
    public Object[][] getContents() {
        return contents;
    }
}
