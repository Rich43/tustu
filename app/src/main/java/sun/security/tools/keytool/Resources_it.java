package sun.security.tools.keytool;

import java.util.ListResourceBundle;
import org.icepdf.core.util.PdfOps;

/* loaded from: rt.jar:sun/security/tools/keytool/Resources_it.class */
public class Resources_it extends ListResourceBundle {
    private static final Object[][] contents = {new Object[]{"NEWLINE", "\n"}, new Object[]{"STAR", "*******************************************"}, new Object[]{"STARNN", "*******************************************\n\n"}, new Object[]{".OPTION.", " [OPTION]..."}, new Object[]{"Options.", "Opzioni:"}, new Object[]{"Use.keytool.help.for.all.available.commands", "Utilizzare \"keytool -help\" per visualizzare tutti i comandi disponibili"}, new Object[]{"Key.and.Certificate.Management.Tool", "Strumento di gestione di chiavi e certificati"}, new Object[]{"Commands.", "Comandi:"}, new Object[]{"Use.keytool.command.name.help.for.usage.of.command.name", "Utilizzare \"keytool -command_name -help\" per informazioni sull'uso di command_name"}, new Object[]{"Generates.a.certificate.request", "Genera una richiesta di certificato"}, new Object[]{"Changes.an.entry.s.alias", "Modifica l'alias di una voce"}, new Object[]{"Deletes.an.entry", "Elimina una voce"}, new Object[]{"Exports.certificate", "Esporta il certificato"}, new Object[]{"Generates.a.key.pair", "Genera una coppia di chiavi"}, new Object[]{"Generates.a.secret.key", "Genera una chiave segreta"}, new Object[]{"Generates.certificate.from.a.certificate.request", "Genera un certificato da una richiesta di certificato"}, new Object[]{"Generates.CRL", "Genera CRL"}, new Object[]{"Generated.keyAlgName.secret.key", "Generata chiave segreta {0}"}, new Object[]{"Generated.keysize.bit.keyAlgName.secret.key", "Generata chiave segreta {1} a {0} bit"}, new Object[]{"Imports.entries.from.a.JDK.1.1.x.style.identity.database", "Importa le voci da un database delle identità di tipo JDK 1.1.x"}, new Object[]{"Imports.a.certificate.or.a.certificate.chain", "Importa un certificato o una catena di certificati"}, new Object[]{"Imports.a.password", "Importa una password"}, new Object[]{"Imports.one.or.all.entries.from.another.keystore", "Importa una o tutte le voci da un altro keystore"}, new Object[]{"Clones.a.key.entry", "Duplica una voce di chiave"}, new Object[]{"Changes.the.key.password.of.an.entry", "Modifica la password della chiave per una voce"}, new Object[]{"Lists.entries.in.a.keystore", "Elenca le voci in un keystore"}, new Object[]{"Prints.the.content.of.a.certificate", "Visualizza i contenuti di un certificato"}, new Object[]{"Prints.the.content.of.a.certificate.request", "Visualizza i contenuti di una richiesta di certificato"}, new Object[]{"Prints.the.content.of.a.CRL.file", "Visualizza i contenuti di un file CRL"}, new Object[]{"Generates.a.self.signed.certificate", "Genera certificato con firma automatica"}, new Object[]{"Changes.the.store.password.of.a.keystore", "Modifica la password di area di memorizzazione di un keystore"}, new Object[]{"alias.name.of.the.entry.to.process", "nome alias della voce da elaborare"}, new Object[]{"destination.alias", "alias di destinazione"}, new Object[]{"destination.key.password", "password chiave di destinazione"}, new Object[]{"destination.keystore.name", "nome keystore di destinazione"}, new Object[]{"destination.keystore.password.protected", "password keystore di destinazione protetta"}, new Object[]{"destination.keystore.provider.name", "nome provider keystore di destinazione"}, new Object[]{"destination.keystore.password", "password keystore di destinazione"}, new Object[]{"destination.keystore.type", "tipo keystore di destinazione"}, new Object[]{"distinguished.name", "nome distinto"}, new Object[]{"X.509.extension", "estensione X.509"}, new Object[]{"output.file.name", "nome file di output"}, new Object[]{"input.file.name", "nome file di input"}, new Object[]{"key.algorithm.name", "nome algoritmo chiave"}, new Object[]{"key.password", "password chiave"}, new Object[]{"key.bit.size", "dimensione bit chiave"}, new Object[]{"keystore.name", "nome keystore"}, new Object[]{"new.password", "nuova password"}, new Object[]{"do.not.prompt", "non richiedere"}, new Object[]{"password.through.protected.mechanism", "password mediante meccanismo protetto"}, new Object[]{"provider.argument", "argomento provider"}, new Object[]{"provider.class.name", "nome classe provider"}, new Object[]{"provider.name", "nome provider"}, new Object[]{"provider.classpath", "classpath provider"}, new Object[]{"output.in.RFC.style", "output in stile RFC"}, new Object[]{"signature.algorithm.name", "nome algoritmo firma"}, new Object[]{"source.alias", "alias origine"}, new Object[]{"source.key.password", "password chiave di origine"}, new Object[]{"source.keystore.name", "nome keystore di origine"}, new Object[]{"source.keystore.password.protected", "password keystore di origine protetta"}, new Object[]{"source.keystore.provider.name", "nome provider keystore di origine"}, new Object[]{"source.keystore.password", "password keystore di origine"}, new Object[]{"source.keystore.type", "tipo keystore di origine"}, new Object[]{"SSL.server.host.and.port", "host e porta server SSL"}, new Object[]{"signed.jar.file", "file jar firmato"}, new Object[]{"certificate.validity.start.date.time", "data/ora di inizio validità certificato"}, new Object[]{"keystore.password", "password keystore"}, new Object[]{"keystore.type", "tipo keystore"}, new Object[]{"trust.certificates.from.cacerts", "considera sicuri i certificati da cacerts"}, new Object[]{"verbose.output", "output descrittivo"}, new Object[]{"validity.number.of.days", "numero di giorni di validità"}, new Object[]{"Serial.ID.of.cert.to.revoke", "ID seriale del certificato da revocare"}, new Object[]{"keytool.error.", "Errore keytool: "}, new Object[]{"Illegal.option.", "Opzione non valida:  "}, new Object[]{"Illegal.value.", "Valore non valido: "}, new Object[]{"Unknown.password.type.", "Tipo di password sconosciuto: "}, new Object[]{"Cannot.find.environment.variable.", "Impossibile trovare la variabile di ambiente: "}, new Object[]{"Cannot.find.file.", "Impossibile trovare il file: "}, new Object[]{"Command.option.flag.needs.an.argument.", "È necessario specificare un argomento per l''opzione di comando {0}."}, new Object[]{"Warning.Different.store.and.key.passwords.not.supported.for.PKCS12.KeyStores.Ignoring.user.specified.command.value.", "Avvertenza: non sono supportate password diverse di chiave e di archivio per i keystore PKCS12. Il valore {0} specificato dall''utente verrà ignorato."}, new Object[]{".keystore.must.be.NONE.if.storetype.is.{0}", "Se -storetype è impostato su {0}, -keystore deve essere impostato su NONE"}, new Object[]{"Too.many.retries.program.terminated", "Il numero dei tentativi consentiti è stato superato. Il programma verrà terminato."}, new Object[]{".storepasswd.and.keypasswd.commands.not.supported.if.storetype.is.{0}", "Se -storetype è impostato su {0}, i comandi -storepasswd e -keypasswd non sono supportati"}, new Object[]{".keypasswd.commands.not.supported.if.storetype.is.PKCS12", "Se -storetype è impostato su PKCS12 i comandi -keypasswd non vengono supportati"}, new Object[]{".keypass.and.new.can.not.be.specified.if.storetype.is.{0}", "Se -storetype è impostato su {0}, non è possibile specificare un valore per -keypass e -new"}, new Object[]{"if.protected.is.specified.then.storepass.keypass.and.new.must.not.be.specified", "Se è specificata l'opzione -protected, le opzioni -storepass, -keypass e -new non possono essere specificate"}, new Object[]{"if.srcprotected.is.specified.then.srcstorepass.and.srckeypass.must.not.be.specified", "Se viene specificato -srcprotected, -srcstorepass e -srckeypass non dovranno essere specificati"}, new Object[]{"if.keystore.is.not.password.protected.then.storepass.keypass.and.new.must.not.be.specified", "Se il file keystore non è protetto da password, non deve essere specificato alcun valore per -storepass, -keypass e -new"}, new Object[]{"if.source.keystore.is.not.password.protected.then.srcstorepass.and.srckeypass.must.not.be.specified", "Se il file keystore non è protetto da password, non deve essere specificato alcun valore per -srcstorepass e -srckeypass"}, new Object[]{"Illegal.startdate.value", "Valore di data di inizio non valido"}, new Object[]{"Validity.must.be.greater.than.zero", "La validità deve essere maggiore di zero"}, new Object[]{"provName.not.a.provider", "{0} non è un provider"}, new Object[]{"Usage.error.no.command.provided", "Errore di utilizzo: nessun comando specificato"}, new Object[]{"Source.keystore.file.exists.but.is.empty.", "Il file keystore di origine esiste, ma è vuoto: "}, new Object[]{"Please.specify.srckeystore", "Specificare -srckeystore"}, new Object[]{"Must.not.specify.both.v.and.rfc.with.list.command", "Impossibile specificare sia -v sia -rfc con il comando 'list'"}, new Object[]{"Key.password.must.be.at.least.6.characters", "La password della chiave deve contenere almeno 6 caratteri"}, new Object[]{"New.password.must.be.at.least.6.characters", "La nuova password deve contenere almeno 6 caratteri"}, new Object[]{"Keystore.file.exists.but.is.empty.", "Il file keystore esiste ma è vuoto: "}, new Object[]{"Keystore.file.does.not.exist.", "Il file keystore non esiste: "}, new Object[]{"Must.specify.destination.alias", "È necessario specificare l'alias di destinazione"}, new Object[]{"Must.specify.alias", "È necessario specificare l'alias"}, new Object[]{"Keystore.password.must.be.at.least.6.characters", "La password del keystore deve contenere almeno 6 caratteri"}, new Object[]{"Enter.the.password.to.be.stored.", "Immettere la password da memorizzare:  "}, new Object[]{"Enter.keystore.password.", "Immettere la password del keystore:  "}, new Object[]{"Enter.source.keystore.password.", "Immettere la password del keystore di origine:  "}, new Object[]{"Enter.destination.keystore.password.", "Immettere la password del keystore di destinazione:  "}, new Object[]{"Keystore.password.is.too.short.must.be.at.least.6.characters", "La password del keystore è troppo corta - deve contenere almeno 6 caratteri"}, new Object[]{"Unknown.Entry.Type", "Tipo di voce sconosciuto"}, new Object[]{"Too.many.failures.Alias.not.changed", "Numero eccessivo di errori. L'alias non è stato modificato."}, new Object[]{"Entry.for.alias.alias.successfully.imported.", "La voce dell''alias {0} è stata importata."}, new Object[]{"Entry.for.alias.alias.not.imported.", "La voce dell''alias {0} non è stata importata."}, new Object[]{"Problem.importing.entry.for.alias.alias.exception.Entry.for.alias.alias.not.imported.", "Si è verificato un problema durante l''importazione della voce dell''alias {0}: {1}.\nLa voce dell''alias {0} non è stata importata."}, new Object[]{"Import.command.completed.ok.entries.successfully.imported.fail.entries.failed.or.cancelled", "Comando di importazione completato: {0} voce/i importata/e, {1} voce/i non importata/e o annullata/e"}, new Object[]{"Warning.Overwriting.existing.alias.alias.in.destination.keystore", "Avvertenza: sovrascrittura in corso dell''alias {0} nel file keystore di destinazione"}, new Object[]{"Existing.entry.alias.alias.exists.overwrite.no.", "La voce dell''alias {0} esiste già. Sovrascrivere? [no]:  "}, new Object[]{"Too.many.failures.try.later", "Troppi errori - riprovare"}, new Object[]{"Certification.request.stored.in.file.filename.", "La richiesta di certificazione è memorizzata nel file <{0}>"}, new Object[]{"Submit.this.to.your.CA", "Sottomettere alla propria CA"}, new Object[]{"if.alias.not.specified.destalias.and.srckeypass.must.not.be.specified", "Se l'alias non è specificato, destalias e srckeypass non dovranno essere specificati"}, new Object[]{"The.destination.pkcs12.keystore.has.different.storepass.and.keypass.Please.retry.with.destkeypass.specified.", "Keystore pkcs12 di destinazione con storepass e keypass differenti. Riprovare con -destkeypass specificato."}, new Object[]{"Certificate.stored.in.file.filename.", "Il certificato è memorizzato nel file <{0}>"}, new Object[]{"Certificate.reply.was.installed.in.keystore", "La risposta del certificato è stata installata nel keystore"}, new Object[]{"Certificate.reply.was.not.installed.in.keystore", "La risposta del certificato non è stata installata nel keystore"}, new Object[]{"Certificate.was.added.to.keystore", "Il certificato è stato aggiunto al keystore"}, new Object[]{"Certificate.was.not.added.to.keystore", "Il certificato non è stato aggiunto al keystore"}, new Object[]{".Storing.ksfname.", "[Memorizzazione di {0}] in corso"}, new Object[]{"alias.has.no.public.key.certificate.", "{0} non dispone di chiave pubblica (certificato)"}, new Object[]{"Cannot.derive.signature.algorithm", "Impossibile derivare l'algoritmo di firma"}, new Object[]{"Alias.alias.does.not.exist", "L''alias <{0}> non esiste"}, new Object[]{"Alias.alias.has.no.certificate", "L''alias <{0}> non dispone di certificato"}, new Object[]{"Key.pair.not.generated.alias.alias.already.exists", "Non è stata generata la coppia di chiavi, l''alias <{0}> è già esistente"}, new Object[]{"Generating.keysize.bit.keyAlgName.key.pair.and.self.signed.certificate.sigAlgName.with.a.validity.of.validality.days.for", "Generazione in corso di una coppia di chiavi {1} da {0} bit e di un certificato autofirmato ({2}) con una validità di {3} giorni\n\tper: {4}"}, new Object[]{"Enter.key.password.for.alias.", "Immettere la password della chiave per <{0}>"}, new Object[]{".RETURN.if.same.as.keystore.password.", "\t(INVIO se corrisponde alla password del keystore):  "}, new Object[]{"Key.password.is.too.short.must.be.at.least.6.characters", "La password della chiave è troppo corta - deve contenere almeno 6 caratteri"}, new Object[]{"Too.many.failures.key.not.added.to.keystore", "Troppi errori - la chiave non è stata aggiunta al keystore"}, new Object[]{"Destination.alias.dest.already.exists", "L''alias di destinazione <{0}> è già esistente"}, new Object[]{"Password.is.too.short.must.be.at.least.6.characters", "La password è troppo corta - deve contenere almeno 6 caratteri"}, new Object[]{"Too.many.failures.Key.entry.not.cloned", "Numero eccessivo di errori. Il valore della chiave non è stato copiato."}, new Object[]{"key.password.for.alias.", "password della chiave per <{0}>"}, new Object[]{"Keystore.entry.for.id.getName.already.exists", "La voce del keystore per <{0}> esiste già"}, new Object[]{"Creating.keystore.entry.for.id.getName.", "Creazione della voce del keystore per <{0}> in corso..."}, new Object[]{"No.entries.from.identity.database.added", "Nessuna voce aggiunta dal database delle identità"}, new Object[]{"Alias.name.alias", "Nome alias: {0}"}, new Object[]{"Creation.date.keyStore.getCreationDate.alias.", "Data di creazione: {0,date}"}, new Object[]{"alias.keyStore.getCreationDate.alias.", "{0}, {1,date}, "}, new Object[]{"alias.", "{0}, "}, new Object[]{"Entry.type.type.", "Tipo di voce: {0}"}, new Object[]{"Certificate.chain.length.", "Lunghezza catena certificati: "}, new Object[]{"Certificate.i.1.", "Certificato[{0,number,integer}]:"}, new Object[]{"Certificate.fingerprint.SHA1.", "Impronta digitale certificato (SHA1): "}, new Object[]{"Keystore.type.", "Tipo keystore: "}, new Object[]{"Keystore.provider.", "Provider keystore: "}, new Object[]{"Your.keystore.contains.keyStore.size.entry", "Il keystore contiene {0,number,integer} voce"}, new Object[]{"Your.keystore.contains.keyStore.size.entries", "Il keystore contiene {0,number,integer} voci"}, new Object[]{"Failed.to.parse.input", "Impossibile analizzare l'input"}, new Object[]{"Empty.input", "Input vuoto"}, new Object[]{"Not.X.509.certificate", "Il certificato non è X.509"}, new Object[]{"alias.has.no.public.key", "{0} non dispone di chiave pubblica"}, new Object[]{"alias.has.no.X.509.certificate", "{0} non dispone di certificato X.509"}, new Object[]{"New.certificate.self.signed.", "Nuovo certificato (autofirmato):"}, new Object[]{"Reply.has.no.certificates", "La risposta non dispone di certificati"}, new Object[]{"Certificate.not.imported.alias.alias.already.exists", "Impossibile importare il certificato, l''alias <{0}> è già esistente"}, new Object[]{"Input.not.an.X.509.certificate", "L'input non è un certificato X.509"}, new Object[]{"Certificate.already.exists.in.keystore.under.alias.trustalias.", "Il certificato esiste già nel keystore con alias <{0}>"}, new Object[]{"Do.you.still.want.to.add.it.no.", "Aggiungerlo ugualmente? [no]:  "}, new Object[]{"Certificate.already.exists.in.system.wide.CA.keystore.under.alias.trustalias.", "Il certificato esiste già nel keystore CA con alias <{0}>"}, new Object[]{"Do.you.still.want.to.add.it.to.your.own.keystore.no.", "Aggiungerlo al proprio keystore? [no]:  "}, new Object[]{"Trust.this.certificate.no.", "Considerare sicuro questo certificato? [no]:  "}, new Object[]{"YES", "Sì"}, new Object[]{"New.prompt.", "Nuova {0}: "}, new Object[]{"Passwords.must.differ", "Le password non devono coincidere"}, new Object[]{"Re.enter.new.prompt.", "Reimmettere un nuovo valore per {0}: "}, new Object[]{"Re.enter.password.", "Reimmettere la password: "}, new Object[]{"Re.enter.new.password.", "Immettere nuovamente la nuova password: "}, new Object[]{"They.don.t.match.Try.again", "Non corrispondono. Riprovare."}, new Object[]{"Enter.prompt.alias.name.", "Immettere nome alias {0}:  "}, new Object[]{"Enter.new.alias.name.RETURN.to.cancel.import.for.this.entry.", "Immettere un nuovo nome alias\t(premere INVIO per annullare l'importazione della voce):  "}, new Object[]{"Enter.alias.name.", "Immettere nome alias:  "}, new Object[]{".RETURN.if.same.as.for.otherAlias.", "\t(INVIO se corrisponde al nome di <{0}>)"}, new Object[]{"What.is.your.first.and.last.name.", "Specificare nome e cognome"}, new Object[]{"What.is.the.name.of.your.organizational.unit.", "Specificare il nome dell'unità organizzativa"}, new Object[]{"What.is.the.name.of.your.organization.", "Specificare il nome dell'organizzazione"}, new Object[]{"What.is.the.name.of.your.City.or.Locality.", "Specificare la località"}, new Object[]{"What.is.the.name.of.your.State.or.Province.", "Specificare la provincia"}, new Object[]{"What.is.the.two.letter.country.code.for.this.unit.", "Specificare il codice a due lettere del paese in cui si trova l'unità"}, new Object[]{"Is.name.correct.", "Il dato {0} è corretto?"}, new Object[]{"no", "no"}, new Object[]{"yes", "sì"}, new Object[]{PdfOps.y_TOKEN, PdfOps.s_TOKEN}, new Object[]{".defaultValue.", "  [{0}]:  "}, new Object[]{"Alias.alias.has.no.key", "All''alias <{0}> non è associata alcuna chiave"}, new Object[]{"Alias.alias.references.an.entry.type.that.is.not.a.private.key.entry.The.keyclone.command.only.supports.cloning.of.private.key", "L''alias <{0}> fa riferimento a un tipo di voce che non è una voce di chiave privata. Il comando -keyclone supporta solo la copia delle voci di chiave private."}, new Object[]{".WARNING.WARNING.WARNING.", "*****************  WARNING WARNING WARNING  *****************"}, new Object[]{"Signer.d.", "Firmatario #%d:"}, new Object[]{"Timestamp.", "Indicatore orario:"}, new Object[]{"Signature.", "Firma:"}, new Object[]{"CRLs.", "CRL:"}, new Object[]{"Certificate.owner.", "Proprietario certificato: "}, new Object[]{"Not.a.signed.jar.file", "Non è un file jar firmato"}, new Object[]{"No.certificate.from.the.SSL.server", "Nessun certificato dal server SSL"}, new Object[]{".The.integrity.of.the.information.stored.in.your.keystore.", "* L'integrità delle informazioni memorizzate nel keystore *\n* NON è stata verificata. Per verificarne l'integrità *\n* è necessario fornire la password del keystore.                  *"}, new Object[]{".The.integrity.of.the.information.stored.in.the.srckeystore.", "* L'integrità delle informazioni memorizzate nel srckeystore *\n* NON è stata verificata. Per verificarne l'integrità *\n* è necessario fornire la password del srckeystore.                  *"}, new Object[]{"Certificate.reply.does.not.contain.public.key.for.alias.", "La risposta del certificato non contiene la chiave pubblica per <{0}>"}, new Object[]{"Incomplete.certificate.chain.in.reply", "Catena dei certificati incompleta nella risposta"}, new Object[]{"Certificate.chain.in.reply.does.not.verify.", "La catena dei certificati nella risposta non verifica: "}, new Object[]{"Top.level.certificate.in.reply.", "Certificato di primo livello nella risposta:\n"}, new Object[]{".is.not.trusted.", "...non è considerato sicuro. "}, new Object[]{"Install.reply.anyway.no.", "Installare la risposta? [no]:  "}, new Object[]{"NO", "NO"}, new Object[]{"Public.keys.in.reply.and.keystore.don.t.match", "Le chiavi pubbliche nella risposta e nel keystore non corrispondono"}, new Object[]{"Certificate.reply.and.certificate.in.keystore.are.identical", "La risposta del certificato e il certificato nel keystore sono identici"}, new Object[]{"Failed.to.establish.chain.from.reply", "Impossibile stabilire la catena dalla risposta"}, new Object[]{PdfOps.n_TOKEN, PdfOps.n_TOKEN}, new Object[]{"Wrong.answer.try.again", "Risposta errata, riprovare"}, new Object[]{"Secret.key.not.generated.alias.alias.already.exists", "La chiave segreta non è stata generata; l''alias <{0}> esiste già"}, new Object[]{"Please.provide.keysize.for.secret.key.generation", "Specificare il valore -keysize per la generazione della chiave segreta"}, new Object[]{"warning.not.verified.make.sure.keystore.is.correct", "AVVERTENZA: non verificato. Assicurarsi che -keystore sia corretto."}, new Object[]{"Extensions.", "Estensioni: "}, new Object[]{".Empty.value.", "(valore vuoto)"}, new Object[]{"Extension.Request.", "Richiesta di estensione:"}, new Object[]{"Unknown.keyUsage.type.", "Tipo keyUsage sconosciuto: "}, new Object[]{"Unknown.extendedkeyUsage.type.", "Tipo extendedkeyUsage sconosciuto: "}, new Object[]{"Unknown.AccessDescription.type.", "Tipo AccessDescription sconosciuto: "}, new Object[]{"Unrecognized.GeneralName.type.", "Tipo GeneralName non riconosciuto: "}, new Object[]{"This.extension.cannot.be.marked.as.critical.", "Impossibile contrassegnare questa estensione come critica. "}, new Object[]{"Odd.number.of.hex.digits.found.", "È stato trovato un numero dispari di cifre esadecimali: "}, new Object[]{"Unknown.extension.type.", "Tipo di estensione sconosciuto: "}, new Object[]{"command.{0}.is.ambiguous.", "il comando {0} è ambiguo:"}, new Object[]{"the.certificate.request", "La richiesta di certificato"}, new Object[]{"the.issuer", "L'emittente"}, new Object[]{"the.generated.certificate", "Il certificato generato"}, new Object[]{"the.generated.crl", "La CRL generata"}, new Object[]{"the.generated.certificate.request", "La richiesta di certificato generata"}, new Object[]{"the.certificate", "Il certificato"}, new Object[]{"the.crl", "La CRL"}, new Object[]{"the.tsa.certificate", "Il certificato TSA"}, new Object[]{"the.input", "L'input"}, new Object[]{"reply", "Rispondi"}, new Object[]{"one.in.many", "%1$s #%2$d di %3$d"}, new Object[]{"alias.in.cacerts", "Emittente <%s> in cacerts"}, new Object[]{"alias.in.keystore", "Emittente <%s>"}, new Object[]{"with.weak", "%s (debole)"}, new Object[]{"key.bit", "Chiave %2$s a %1$d bit"}, new Object[]{"key.bit.weak", "Chiave %2$s a %1$d bit (debole)"}, new Object[]{".PATTERN.printX509Cert.with.weak", "Proprietario: {0}\nEmittente: {1}\nNumero di serie: {2}\nValido da: {3} a: {4}\nImpronte certificato:\n\t MD5:  {5}\n\t SHA1: {6}\n\t SHA256: {7}\nNome algoritmo firma: {8}\nAlgoritmo di chiave pubblica oggetto: {9}\nVersione: {10}"}, new Object[]{"PKCS.10.with.weak", "Richiesta di certificato PKCS #10 (versione 1.0)\nOggetto: %1$s\nFormato: %2$s\nChiave pubblica: %3$s\nAlgoritmo firma: %4$s\n"}, new Object[]{"verified.by.s.in.s.weak", "Verificato da %1$s in %2$s con un %3$s"}, new Object[]{"whose.sigalg.risk", "%1$s utilizza l'algoritmo firma %2$s che è considerato un rischio per la sicurezza."}, new Object[]{"whose.key.risk", "%1$s utilizza un %2$s che è considerato un rischio per la sicurezza."}, new Object[]{"jks.storetype.warning", "Il keystore %1$s utilizza un formato proprietario. Si consiglia di eseguire la migrazione a PKCS12, un formato standard di settore, utilizzando il comando \"keytool -importkeystore -srckeystore %2$s -destkeystore %2$s -deststoretype pkcs12\"."}, new Object[]{"migrate.keystore.warning", "Migrazione di \"%1$s\" in %4$s eseguita. Backup del keystore %2$s eseguito con il nome \"%3$s\"."}, new Object[]{"backup.keystore.warning", "Backup del keystore originale \"%1$s\" eseguito con il nome \"%3$s\"..."}, new Object[]{"importing.keystore.status", "Importazione del keystore %1$s in %2$s in corso..."}};

    @Override // java.util.ListResourceBundle
    public Object[][] getContents() {
        return contents;
    }
}
