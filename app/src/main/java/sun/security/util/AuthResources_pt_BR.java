package sun.security.util;

import java.util.ListResourceBundle;
import org.icepdf.core.util.PdfOps;

/* loaded from: rt.jar:sun/security/util/AuthResources_pt_BR.class */
public class AuthResources_pt_BR extends ListResourceBundle {
    private static final Object[][] contents = {new Object[]{"invalid.null.input.value", "entrada nula inválida: {0}"}, new Object[]{"NTDomainPrincipal.name", "NTDomainPrincipal: {0}"}, new Object[]{"NTNumericCredential.name", "NTNumericCredential: {0}"}, new Object[]{"Invalid.NTSid.value", "Valor de NTSid inválido"}, new Object[]{"NTSid.name", "NTSid: {0}"}, new Object[]{"NTSidDomainPrincipal.name", "NTSidDomainPrincipal: {0}"}, new Object[]{"NTSidGroupPrincipal.name", "NTSidGroupPrincipal: {0}"}, new Object[]{"NTSidPrimaryGroupPrincipal.name", "NTSidPrimaryGroupPrincipal: {0}"}, new Object[]{"NTSidUserPrincipal.name", "NTSidUserPrincipal: {0}"}, new Object[]{"NTUserPrincipal.name", "NTUserPrincipal: {0}"}, new Object[]{"UnixNumericGroupPrincipal.Primary.Group.name", "UnixNumericGroupPrincipal [Grupo Principal]: {0}"}, new Object[]{"UnixNumericGroupPrincipal.Supplementary.Group.name", "UnixNumericGroupPrincipal [Grupo Complementar]: {0}"}, new Object[]{"UnixNumericUserPrincipal.name", "UnixNumericUserPrincipal: {0}"}, new Object[]{"UnixPrincipal.name", "UnixPrincipal: {0}"}, new Object[]{"Unable.to.properly.expand.config", "Não é possível expandir corretamente {0}"}, new Object[]{"extra.config.No.such.file.or.directory.", "{0} (tal arquivo ou diretório não existe)"}, new Object[]{"Configuration.Error.No.such.file.or.directory", "Erro de Configuração:\n\tNão há tal arquivo ou diretório"}, new Object[]{"Configuration.Error.Invalid.control.flag.flag", "Erro de Configuração:\n\tFlag de controle inválido, {0}"}, new Object[]{"Configuration.Error.Can.not.specify.multiple.entries.for.appName", "Erro de Configuração:\n\tNão é possível especificar várias entradas para {0}"}, new Object[]{"Configuration.Error.expected.expect.read.end.of.file.", "Erro de Configuração:\n\tesperado [{0}], lido [fim do arquivo]"}, new Object[]{"Configuration.Error.Line.line.expected.expect.found.value.", "Erro de Configuração:\n\tLinha {0}: esperada [{1}], encontrada [{2}]"}, new Object[]{"Configuration.Error.Line.line.expected.expect.", "Erro de Configuração:\n\tLinha {0}: esperada [{1}]"}, new Object[]{"Configuration.Error.Line.line.system.property.value.expanded.to.empty.value", "Erro de Configuração:\n\tLinha {0}: propriedade do sistema [{1}] expandida para valor vazio"}, new Object[]{"username.", "nome do usuário: "}, new Object[]{"password.", "senha: "}, new Object[]{"Please.enter.keystore.information", "Especifique as informações do armazenamento de chaves"}, new Object[]{"Keystore.alias.", "Alias do armazenamento de chaves: "}, new Object[]{"Keystore.password.", "Senha do armazenamento de chaves: "}, new Object[]{"Private.key.password.optional.", "Senha da chave privada (opcional): "}, new Object[]{"Kerberos.username.defUsername.", "Nome do usuário de Kerberos [{0}]: "}, new Object[]{"Kerberos.password.for.username.", "Senha de Kerberos de {0}: "}, new Object[]{".error.parsing.", ": erro de parsing "}, new Object[]{"COLON", ": "}, new Object[]{".error.adding.Permission.", ": erro ao adicionar a Permissão "}, new Object[]{"SPACE", " "}, new Object[]{".error.adding.Entry.", ": erro ao adicionar a Entrada "}, new Object[]{"LPARAM", "("}, new Object[]{"RPARAM", ")"}, new Object[]{"attempt.to.add.a.Permission.to.a.readonly.PermissionCollection", "tentativa de adicionar uma Permissão a um PermissionCollection somente para leitura"}, new Object[]{"expected.keystore.type", "tipo de armazenamento de chaves esperado"}, new Object[]{"can.not.specify.Principal.with.a.wildcard.class.without.a.wildcard.name", "não é possível especificar um principal com uma classe curinga sem um nome curinga"}, new Object[]{"expected.codeBase.or.SignedBy", "CodeBase ou SignedBy esperado"}, new Object[]{"only.Principal.based.grant.entries.permitted", "somente é permitido conceder entradas com base no Principal"}, new Object[]{"expected.permission.entry", "entrada de permissão esperada"}, new Object[]{"number.", "número "}, new Object[]{"expected.expect.read.end.of.file.", "esperado {0}, ler fim do arquivo"}, new Object[]{"expected.read.end.of.file", "esperado ';', fim de arquivo lido"}, new Object[]{"line.", "linha "}, new Object[]{".expected.", ": esperado '"}, new Object[]{".found.", "', encontrado '"}, new Object[]{"QUOTE", PdfOps.SINGLE_QUOTE_TOKEN}, new Object[]{"SolarisNumericGroupPrincipal.Primary.Group.", "SolarisNumericGroupPrincipal [Grupo Principal]: "}, new Object[]{"SolarisNumericGroupPrincipal.Supplementary.Group.", "SolarisNumericGroupPrincipal [Grupo Complementar]: "}, new Object[]{"SolarisNumericUserPrincipal.", "SolarisNumericUserPrincipal: "}, new Object[]{"SolarisPrincipal.", "SolarisPrincipal: "}, new Object[]{"provided.null.name", "nome nulo fornecido"}};

    @Override // java.util.ListResourceBundle
    public Object[][] getContents() {
        return contents;
    }
}
