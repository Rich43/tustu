package sun.security.util.math.intpoly;

import java.math.BigInteger;

/* loaded from: rt.jar:sun/security/util/math/intpoly/P256OrderField.class */
public class P256OrderField extends IntegerPolynomial {
    private static final int BITS_PER_LIMB = 26;
    private static final int NUM_LIMBS = 10;
    private static final int MAX_ADDS = 1;
    public static final BigInteger MODULUS = evaluateModulus();
    private static final long CARRY_ADD = 33554432;
    private static final int LIMB_MASK = 67108863;

    public P256OrderField() {
        super(26, 10, 1, MODULUS);
    }

    private static BigInteger evaluateModulus() {
        return BigInteger.valueOf(2L).pow(256).add(BigInteger.valueOf(6497617L)).subtract(BigInteger.valueOf(2L).pow(26).multiply(BigInteger.valueOf(26038081L))).add(BigInteger.valueOf(2L).pow(52).multiply(BigInteger.valueOf(32001852L))).subtract(BigInteger.valueOf(2L).pow(78).multiply(BigInteger.valueOf(21586850L))).subtract(BigInteger.valueOf(2L).pow(104).multiply(BigInteger.valueOf(4397317L))).add(BigInteger.valueOf(2L).pow(182).multiply(BigInteger.valueOf(1024L))).subtract(BigInteger.valueOf(2L).pow(208).multiply(BigInteger.valueOf(65536L)));
    }

    @Override // sun.security.util.math.intpoly.IntegerPolynomial
    protected void finalCarryReduceLast(long[] jArr) {
        long j2 = jArr[9] >> 22;
        jArr[9] = jArr[9] - (j2 << 22);
        jArr[0] = jArr[0] + ((-6497617) * j2);
        jArr[1] = jArr[1] + (26038081 * j2);
        jArr[2] = jArr[2] + ((-32001852) * j2);
        jArr[3] = jArr[3] + (21586850 * j2);
        jArr[4] = jArr[4] + (4397317 * j2);
        jArr[7] = jArr[7] + ((-1024) * j2);
        jArr[8] = jArr[8] + (65536 * j2);
    }

    private void carryReduce(long[] jArr, long j2, long j3, long j4, long j5, long j6, long j7, long j8, long j9, long j10, long j11, long j12, long j13, long j14, long j15, long j16, long j17, long j18, long j19, long j20) {
        long j21 = (j2 + 33554432) >> 26;
        long j22 = j2 - (j21 << 26);
        long j23 = j3 + j21;
        long j24 = (j23 + 33554432) >> 26;
        long j25 = j23 - (j24 << 26);
        long j26 = j4 + j24;
        long j27 = (j26 + 33554432) >> 26;
        long j28 = j26 - (j27 << 26);
        long j29 = j5 + j27;
        long j30 = (j29 + 33554432) >> 26;
        long j31 = j29 - (j30 << 26);
        long j32 = j6 + j30;
        long j33 = (j32 + 33554432) >> 26;
        long j34 = j32 - (j33 << 26);
        long j35 = j7 + j33;
        long j36 = (j35 + 33554432) >> 26;
        long j37 = j35 - (j36 << 26);
        long j38 = j8 + j36;
        long j39 = (j38 + 33554432) >> 26;
        long j40 = j38 - (j39 << 26);
        long j41 = j9 + j39;
        long j42 = (j41 + 33554432) >> 26;
        long j43 = j41 - (j42 << 26);
        long j44 = j10 + j42;
        long j45 = (j44 + 33554432) >> 26;
        long j46 = j44 - (j45 << 26);
        long j47 = j11 + j45;
        long j48 = (j47 + 33554432) >> 26;
        long j49 = j47 - (j48 << 26);
        long j50 = j12 + j48;
        long j51 = (j50 + 33554432) >> 26;
        long j52 = j50 - (j51 << 26);
        long j53 = j13 + j51;
        long j54 = (j53 + 33554432) >> 26;
        long j55 = j53 - (j54 << 26);
        long j56 = j14 + j54;
        long j57 = (j56 + 33554432) >> 26;
        long j58 = j56 - (j57 << 26);
        long j59 = j15 + j57;
        long j60 = (j59 + 33554432) >> 26;
        long j61 = j59 - (j60 << 26);
        long j62 = j16 + j60;
        long j63 = (j62 + 33554432) >> 26;
        long j64 = j62 - (j63 << 26);
        long j65 = j17 + j63;
        long j66 = (j65 + 33554432) >> 26;
        long j67 = j65 - (j66 << 26);
        long j68 = j18 + j66;
        long j69 = (j68 + 33554432) >> 26;
        long j70 = j68 - (j69 << 26);
        long j71 = j19 + j69;
        long j72 = (j71 + 33554432) >> 26;
        long j73 = j71 - (j72 << 26);
        long j74 = j20 + j72;
        long j75 = (j74 + 33554432) >> 26;
        carryReduce0(jArr, j22, j25, j28, j31, j34, j37, j40, j43, j46, j49, j52, j55, j58, j61, j64, j67, j70, j73, j74 - (j75 << 26), 0 + j75);
    }

    void carryReduce0(long[] jArr, long j2, long j3, long j4, long j5, long j6, long j7, long j8, long j9, long j10, long j11, long j12, long j13, long j14, long j15, long j16, long j17, long j18, long j19, long j20, long j21) {
        long j22 = (-6497617) * j21;
        long j23 = j11 + ((j22 << 4) & 67108863);
        long j24 = j12 + (j22 >> 22);
        long j25 = 26038081 * j21;
        long j26 = j24 + ((j25 << 4) & 67108863);
        long j27 = j13 + (j25 >> 22);
        long j28 = (-32001852) * j21;
        long j29 = j27 + ((j28 << 4) & 67108863);
        long j30 = j14 + (j28 >> 22);
        long j31 = 21586850 * j21;
        long j32 = j30 + ((j31 << 4) & 67108863);
        long j33 = j15 + (j31 >> 22);
        long j34 = 4397317 * j21;
        long j35 = j33 + ((j34 << 4) & 67108863);
        long j36 = j16 + (j34 >> 22);
        long j37 = (-1024) * j21;
        long j38 = j18 + ((j37 << 4) & 67108863);
        long j39 = j19 + (j37 >> 22);
        long j40 = 65536 * j21;
        long j41 = j39 + ((j40 << 4) & 67108863);
        long j42 = j20 + (j40 >> 22);
        long j43 = (-6497617) * j42;
        long j44 = j10 + ((j43 << 4) & 67108863);
        long j45 = j23 + (j43 >> 22);
        long j46 = 26038081 * j42;
        long j47 = j45 + ((j46 << 4) & 67108863);
        long j48 = j26 + (j46 >> 22);
        long j49 = (-32001852) * j42;
        long j50 = j48 + ((j49 << 4) & 67108863);
        long j51 = j29 + (j49 >> 22);
        long j52 = 21586850 * j42;
        long j53 = j51 + ((j52 << 4) & 67108863);
        long j54 = j32 + (j52 >> 22);
        long j55 = 4397317 * j42;
        long j56 = j54 + ((j55 << 4) & 67108863);
        long j57 = j35 + (j55 >> 22);
        long j58 = (-1024) * j42;
        long j59 = j17 + ((j58 << 4) & 67108863);
        long j60 = j38 + (j58 >> 22);
        long j61 = 65536 * j42;
        long j62 = j60 + ((j61 << 4) & 67108863);
        long j63 = j41 + (j61 >> 22);
        long j64 = (-6497617) * j63;
        long j65 = j9 + ((j64 << 4) & 67108863);
        long j66 = j44 + (j64 >> 22);
        long j67 = 26038081 * j63;
        long j68 = j66 + ((j67 << 4) & 67108863);
        long j69 = j47 + (j67 >> 22);
        long j70 = (-32001852) * j63;
        long j71 = j69 + ((j70 << 4) & 67108863);
        long j72 = j50 + (j70 >> 22);
        long j73 = 21586850 * j63;
        long j74 = j72 + ((j73 << 4) & 67108863);
        long j75 = j53 + (j73 >> 22);
        long j76 = 4397317 * j63;
        long j77 = j75 + ((j76 << 4) & 67108863);
        long j78 = j56 + (j76 >> 22);
        long j79 = (-1024) * j63;
        long j80 = j36 + ((j79 << 4) & 67108863);
        long j81 = j59 + (j79 >> 22);
        long j82 = 65536 * j63;
        long j83 = j81 + ((j82 << 4) & 67108863);
        long j84 = j62 + (j82 >> 22);
        long j85 = (-6497617) * j84;
        long j86 = j8 + ((j85 << 4) & 67108863);
        long j87 = j65 + (j85 >> 22);
        long j88 = 26038081 * j84;
        long j89 = j87 + ((j88 << 4) & 67108863);
        long j90 = j68 + (j88 >> 22);
        long j91 = (-32001852) * j84;
        long j92 = j90 + ((j91 << 4) & 67108863);
        long j93 = j71 + (j91 >> 22);
        long j94 = 21586850 * j84;
        long j95 = j93 + ((j94 << 4) & 67108863);
        long j96 = j74 + (j94 >> 22);
        long j97 = 4397317 * j84;
        long j98 = j96 + ((j97 << 4) & 67108863);
        long j99 = j77 + (j97 >> 22);
        long j100 = (-1024) * j84;
        long j101 = j57 + ((j100 << 4) & 67108863);
        long j102 = j80 + (j100 >> 22);
        long j103 = 65536 * j84;
        long j104 = j102 + ((j103 << 4) & 67108863);
        long j105 = j83 + (j103 >> 22);
        long j106 = (-6497617) * j105;
        long j107 = j7 + ((j106 << 4) & 67108863);
        long j108 = j86 + (j106 >> 22);
        long j109 = 26038081 * j105;
        long j110 = j108 + ((j109 << 4) & 67108863);
        long j111 = j89 + (j109 >> 22);
        long j112 = (-32001852) * j105;
        long j113 = j111 + ((j112 << 4) & 67108863);
        long j114 = j92 + (j112 >> 22);
        long j115 = 21586850 * j105;
        long j116 = j114 + ((j115 << 4) & 67108863);
        long j117 = j95 + (j115 >> 22);
        long j118 = 4397317 * j105;
        long j119 = j117 + ((j118 << 4) & 67108863);
        long j120 = j98 + (j118 >> 22);
        long j121 = (-1024) * j105;
        long j122 = j78 + ((j121 << 4) & 67108863);
        long j123 = j101 + (j121 >> 22);
        long j124 = 65536 * j105;
        long j125 = j123 + ((j124 << 4) & 67108863);
        long j126 = j104 + (j124 >> 22);
        long j127 = (-6497617) * j126;
        long j128 = j6 + ((j127 << 4) & 67108863);
        long j129 = j107 + (j127 >> 22);
        long j130 = 26038081 * j126;
        long j131 = j129 + ((j130 << 4) & 67108863);
        long j132 = j110 + (j130 >> 22);
        long j133 = (-32001852) * j126;
        long j134 = j132 + ((j133 << 4) & 67108863);
        long j135 = j113 + (j133 >> 22);
        long j136 = 21586850 * j126;
        long j137 = j135 + ((j136 << 4) & 67108863);
        long j138 = j116 + (j136 >> 22);
        long j139 = 4397317 * j126;
        long j140 = j138 + ((j139 << 4) & 67108863);
        long j141 = j119 + (j139 >> 22);
        long j142 = (-1024) * j126;
        long j143 = j99 + ((j142 << 4) & 67108863);
        long j144 = j122 + (j142 >> 22);
        long j145 = 65536 * j126;
        long j146 = j144 + ((j145 << 4) & 67108863);
        long j147 = j125 + (j145 >> 22);
        long j148 = (-6497617) * j147;
        long j149 = j5 + ((j148 << 4) & 67108863);
        long j150 = j128 + (j148 >> 22);
        long j151 = 26038081 * j147;
        long j152 = j150 + ((j151 << 4) & 67108863);
        long j153 = j131 + (j151 >> 22);
        long j154 = (-32001852) * j147;
        long j155 = j153 + ((j154 << 4) & 67108863);
        long j156 = j134 + (j154 >> 22);
        long j157 = 21586850 * j147;
        long j158 = j156 + ((j157 << 4) & 67108863);
        long j159 = j137 + (j157 >> 22);
        long j160 = 4397317 * j147;
        long j161 = j159 + ((j160 << 4) & 67108863);
        long j162 = j140 + (j160 >> 22);
        long j163 = (-1024) * j147;
        long j164 = j120 + ((j163 << 4) & 67108863);
        long j165 = j143 + (j163 >> 22);
        long j166 = 65536 * j147;
        long j167 = j165 + ((j166 << 4) & 67108863);
        long j168 = j146 + (j166 >> 22);
        long j169 = (-6497617) * j168;
        long j170 = j4 + ((j169 << 4) & 67108863);
        long j171 = j149 + (j169 >> 22);
        long j172 = 26038081 * j168;
        long j173 = j171 + ((j172 << 4) & 67108863);
        long j174 = j152 + (j172 >> 22);
        long j175 = (-32001852) * j168;
        long j176 = j174 + ((j175 << 4) & 67108863);
        long j177 = j155 + (j175 >> 22);
        long j178 = 21586850 * j168;
        long j179 = j177 + ((j178 << 4) & 67108863);
        long j180 = j158 + (j178 >> 22);
        long j181 = 4397317 * j168;
        long j182 = j180 + ((j181 << 4) & 67108863);
        long j183 = j161 + (j181 >> 22);
        long j184 = (-1024) * j168;
        long j185 = j141 + ((j184 << 4) & 67108863);
        long j186 = j164 + (j184 >> 22);
        long j187 = 65536 * j168;
        long j188 = j186 + ((j187 << 4) & 67108863);
        long j189 = j167 + (j187 >> 22);
        long j190 = (-6497617) * j189;
        long j191 = j3 + ((j190 << 4) & 67108863);
        long j192 = j170 + (j190 >> 22);
        long j193 = 26038081 * j189;
        long j194 = j192 + ((j193 << 4) & 67108863);
        long j195 = j173 + (j193 >> 22);
        long j196 = (-32001852) * j189;
        long j197 = j195 + ((j196 << 4) & 67108863);
        long j198 = j176 + (j196 >> 22);
        long j199 = 21586850 * j189;
        long j200 = j198 + ((j199 << 4) & 67108863);
        long j201 = j179 + (j199 >> 22);
        long j202 = 4397317 * j189;
        long j203 = j201 + ((j202 << 4) & 67108863);
        long j204 = j182 + (j202 >> 22);
        long j205 = (-1024) * j189;
        long j206 = j162 + ((j205 << 4) & 67108863);
        long j207 = j185 + (j205 >> 22);
        long j208 = 65536 * j189;
        long j209 = j207 + ((j208 << 4) & 67108863);
        long j210 = j188 + (j208 >> 22);
        long j211 = (-6497617) * j210;
        long j212 = j2 + ((j211 << 4) & 67108863);
        long j213 = j191 + (j211 >> 22);
        long j214 = 26038081 * j210;
        long j215 = j213 + ((j214 << 4) & 67108863);
        long j216 = j194 + (j214 >> 22);
        long j217 = (-32001852) * j210;
        long j218 = j216 + ((j217 << 4) & 67108863);
        long j219 = j197 + (j217 >> 22);
        long j220 = 21586850 * j210;
        long j221 = j219 + ((j220 << 4) & 67108863);
        long j222 = j200 + (j220 >> 22);
        long j223 = 4397317 * j210;
        long j224 = j222 + ((j223 << 4) & 67108863);
        long j225 = j203 + (j223 >> 22);
        long j226 = (-1024) * j210;
        long j227 = j183 + ((j226 << 4) & 67108863);
        long j228 = j206 + (j226 >> 22);
        long j229 = 65536 * j210;
        carryReduce1(jArr, j212, j215, j218, j221, j224, j225, j204, j227, j228 + ((j229 << 4) & 67108863), j209 + (j229 >> 22), 0L, j189, j168, j147, j126, j105, j84, j63, j42, j21);
    }

    void carryReduce1(long[] jArr, long j2, long j3, long j4, long j5, long j6, long j7, long j8, long j9, long j10, long j11, long j12, long j13, long j14, long j15, long j16, long j17, long j18, long j19, long j20, long j21) {
        long j22 = (j2 + 33554432) >> 26;
        long j23 = j2 - (j22 << 26);
        long j24 = j3 + j22;
        long j25 = (j24 + 33554432) >> 26;
        long j26 = j24 - (j25 << 26);
        long j27 = j4 + j25;
        long j28 = (j27 + 33554432) >> 26;
        long j29 = j27 - (j28 << 26);
        long j30 = j5 + j28;
        long j31 = (j30 + 33554432) >> 26;
        long j32 = j30 - (j31 << 26);
        long j33 = j6 + j31;
        long j34 = (j33 + 33554432) >> 26;
        long j35 = j33 - (j34 << 26);
        long j36 = j7 + j34;
        long j37 = (j36 + 33554432) >> 26;
        long j38 = j36 - (j37 << 26);
        long j39 = j8 + j37;
        long j40 = (j39 + 33554432) >> 26;
        long j41 = j39 - (j40 << 26);
        long j42 = j9 + j40;
        long j43 = (j42 + 33554432) >> 26;
        long j44 = j42 - (j43 << 26);
        long j45 = j10 + j43;
        long j46 = (j45 + 33554432) >> 26;
        long j47 = j45 - (j46 << 26);
        long j48 = j11 + j46;
        long j49 = (j48 + 33554432) >> 26;
        carryReduce2(jArr, j23, j26, j29, j32, j35, j38, j41, j44, j47, j48 - (j49 << 26), j12 + j49, j13, j14, j15, j16, j17, j18, j19, j20, j21);
    }

    void carryReduce2(long[] jArr, long j2, long j3, long j4, long j5, long j6, long j7, long j8, long j9, long j10, long j11, long j12, long j13, long j14, long j15, long j16, long j17, long j18, long j19, long j20, long j21) {
        long j22 = (-6497617) * j12;
        long j23 = j2 + ((j22 << 4) & 67108863);
        long j24 = j3 + (j22 >> 22);
        long j25 = 26038081 * j12;
        long j26 = j24 + ((j25 << 4) & 67108863);
        long j27 = j4 + (j25 >> 22);
        long j28 = (-32001852) * j12;
        long j29 = j27 + ((j28 << 4) & 67108863);
        long j30 = j5 + (j28 >> 22);
        long j31 = 21586850 * j12;
        long j32 = j30 + ((j31 << 4) & 67108863);
        long j33 = j6 + (j31 >> 22);
        long j34 = 4397317 * j12;
        long j35 = j33 + ((j34 << 4) & 67108863);
        long j36 = j7 + (j34 >> 22);
        long j37 = (-1024) * j12;
        long j38 = j9 + ((j37 << 4) & 67108863);
        long j39 = j10 + (j37 >> 22);
        long j40 = 65536 * j12;
        long j41 = j39 + ((j40 << 4) & 67108863);
        long j42 = j11 + (j40 >> 22);
        long j43 = (j23 + 33554432) >> 26;
        long j44 = j23 - (j43 << 26);
        long j45 = j26 + j43;
        long j46 = (j45 + 33554432) >> 26;
        long j47 = j45 - (j46 << 26);
        long j48 = j29 + j46;
        long j49 = (j48 + 33554432) >> 26;
        long j50 = j48 - (j49 << 26);
        long j51 = j32 + j49;
        long j52 = (j51 + 33554432) >> 26;
        long j53 = j51 - (j52 << 26);
        long j54 = j35 + j52;
        long j55 = (j54 + 33554432) >> 26;
        long j56 = j54 - (j55 << 26);
        long j57 = j36 + j55;
        long j58 = (j57 + 33554432) >> 26;
        long j59 = j57 - (j58 << 26);
        long j60 = j8 + j58;
        long j61 = (j60 + 33554432) >> 26;
        long j62 = j60 - (j61 << 26);
        long j63 = j38 + j61;
        long j64 = (j63 + 33554432) >> 26;
        long j65 = j63 - (j64 << 26);
        long j66 = j41 + j64;
        long j67 = (j66 + 33554432) >> 26;
        jArr[0] = j44;
        jArr[1] = j47;
        jArr[2] = j50;
        jArr[3] = j53;
        jArr[4] = j56;
        jArr[5] = j59;
        jArr[6] = j62;
        jArr[7] = j65;
        jArr[8] = j66 - (j67 << 26);
        jArr[9] = j42 + j67;
    }

    private void carryReduce(long[] jArr, long j2, long j3, long j4, long j5, long j6, long j7, long j8, long j9, long j10, long j11) {
        long j12 = (j2 + 33554432) >> 26;
        long j13 = j2 - (j12 << 26);
        long j14 = j3 + j12;
        long j15 = (j14 + 33554432) >> 26;
        long j16 = j14 - (j15 << 26);
        long j17 = j4 + j15;
        long j18 = (j17 + 33554432) >> 26;
        long j19 = j17 - (j18 << 26);
        long j20 = j5 + j18;
        long j21 = (j20 + 33554432) >> 26;
        long j22 = j20 - (j21 << 26);
        long j23 = j6 + j21;
        long j24 = (j23 + 33554432) >> 26;
        long j25 = j23 - (j24 << 26);
        long j26 = j7 + j24;
        long j27 = (j26 + 33554432) >> 26;
        long j28 = j26 - (j27 << 26);
        long j29 = j8 + j27;
        long j30 = (j29 + 33554432) >> 26;
        long j31 = j29 - (j30 << 26);
        long j32 = j9 + j30;
        long j33 = (j32 + 33554432) >> 26;
        long j34 = j32 - (j33 << 26);
        long j35 = j10 + j33;
        long j36 = (j35 + 33554432) >> 26;
        long j37 = j35 - (j36 << 26);
        long j38 = j11 + j36;
        long j39 = (j38 + 33554432) >> 26;
        carryReduce0(jArr, j13, j16, j19, j22, j25, j28, j31, j34, j37, j38 - (j39 << 26), 0 + j39);
    }

    void carryReduce0(long[] jArr, long j2, long j3, long j4, long j5, long j6, long j7, long j8, long j9, long j10, long j11, long j12) {
        long j13 = (-6497617) * j12;
        long j14 = j2 + ((j13 << 4) & 67108863);
        long j15 = j3 + (j13 >> 22);
        long j16 = 26038081 * j12;
        long j17 = j15 + ((j16 << 4) & 67108863);
        long j18 = j4 + (j16 >> 22);
        long j19 = (-32001852) * j12;
        long j20 = j18 + ((j19 << 4) & 67108863);
        long j21 = j5 + (j19 >> 22);
        long j22 = 21586850 * j12;
        long j23 = j21 + ((j22 << 4) & 67108863);
        long j24 = j6 + (j22 >> 22);
        long j25 = 4397317 * j12;
        long j26 = j24 + ((j25 << 4) & 67108863);
        long j27 = j7 + (j25 >> 22);
        long j28 = (-1024) * j12;
        long j29 = j9 + ((j28 << 4) & 67108863);
        long j30 = j10 + (j28 >> 22);
        long j31 = 65536 * j12;
        long j32 = j30 + ((j31 << 4) & 67108863);
        long j33 = j11 + (j31 >> 22);
        long j34 = (j14 + 33554432) >> 26;
        long j35 = j14 - (j34 << 26);
        long j36 = j17 + j34;
        long j37 = (j36 + 33554432) >> 26;
        long j38 = j36 - (j37 << 26);
        long j39 = j20 + j37;
        long j40 = (j39 + 33554432) >> 26;
        long j41 = j39 - (j40 << 26);
        long j42 = j23 + j40;
        long j43 = (j42 + 33554432) >> 26;
        long j44 = j42 - (j43 << 26);
        long j45 = j26 + j43;
        long j46 = (j45 + 33554432) >> 26;
        long j47 = j45 - (j46 << 26);
        long j48 = j27 + j46;
        long j49 = (j48 + 33554432) >> 26;
        long j50 = j48 - (j49 << 26);
        long j51 = j8 + j49;
        long j52 = (j51 + 33554432) >> 26;
        long j53 = j51 - (j52 << 26);
        long j54 = j29 + j52;
        long j55 = (j54 + 33554432) >> 26;
        long j56 = j54 - (j55 << 26);
        long j57 = j32 + j55;
        long j58 = (j57 + 33554432) >> 26;
        jArr[0] = j35;
        jArr[1] = j38;
        jArr[2] = j41;
        jArr[3] = j44;
        jArr[4] = j47;
        jArr[5] = j50;
        jArr[6] = j53;
        jArr[7] = j56;
        jArr[8] = j57 - (j58 << 26);
        jArr[9] = j33 + j58;
    }

    @Override // sun.security.util.math.intpoly.IntegerPolynomial
    protected void mult(long[] jArr, long[] jArr2, long[] jArr3) {
        carryReduce(jArr3, jArr[0] * jArr2[0], (jArr[0] * jArr2[1]) + (jArr[1] * jArr2[0]), (jArr[0] * jArr2[2]) + (jArr[1] * jArr2[1]) + (jArr[2] * jArr2[0]), (jArr[0] * jArr2[3]) + (jArr[1] * jArr2[2]) + (jArr[2] * jArr2[1]) + (jArr[3] * jArr2[0]), (jArr[0] * jArr2[4]) + (jArr[1] * jArr2[3]) + (jArr[2] * jArr2[2]) + (jArr[3] * jArr2[1]) + (jArr[4] * jArr2[0]), (jArr[0] * jArr2[5]) + (jArr[1] * jArr2[4]) + (jArr[2] * jArr2[3]) + (jArr[3] * jArr2[2]) + (jArr[4] * jArr2[1]) + (jArr[5] * jArr2[0]), (jArr[0] * jArr2[6]) + (jArr[1] * jArr2[5]) + (jArr[2] * jArr2[4]) + (jArr[3] * jArr2[3]) + (jArr[4] * jArr2[2]) + (jArr[5] * jArr2[1]) + (jArr[6] * jArr2[0]), (jArr[0] * jArr2[7]) + (jArr[1] * jArr2[6]) + (jArr[2] * jArr2[5]) + (jArr[3] * jArr2[4]) + (jArr[4] * jArr2[3]) + (jArr[5] * jArr2[2]) + (jArr[6] * jArr2[1]) + (jArr[7] * jArr2[0]), (jArr[0] * jArr2[8]) + (jArr[1] * jArr2[7]) + (jArr[2] * jArr2[6]) + (jArr[3] * jArr2[5]) + (jArr[4] * jArr2[4]) + (jArr[5] * jArr2[3]) + (jArr[6] * jArr2[2]) + (jArr[7] * jArr2[1]) + (jArr[8] * jArr2[0]), (jArr[0] * jArr2[9]) + (jArr[1] * jArr2[8]) + (jArr[2] * jArr2[7]) + (jArr[3] * jArr2[6]) + (jArr[4] * jArr2[5]) + (jArr[5] * jArr2[4]) + (jArr[6] * jArr2[3]) + (jArr[7] * jArr2[2]) + (jArr[8] * jArr2[1]) + (jArr[9] * jArr2[0]), (jArr[1] * jArr2[9]) + (jArr[2] * jArr2[8]) + (jArr[3] * jArr2[7]) + (jArr[4] * jArr2[6]) + (jArr[5] * jArr2[5]) + (jArr[6] * jArr2[4]) + (jArr[7] * jArr2[3]) + (jArr[8] * jArr2[2]) + (jArr[9] * jArr2[1]), (jArr[2] * jArr2[9]) + (jArr[3] * jArr2[8]) + (jArr[4] * jArr2[7]) + (jArr[5] * jArr2[6]) + (jArr[6] * jArr2[5]) + (jArr[7] * jArr2[4]) + (jArr[8] * jArr2[3]) + (jArr[9] * jArr2[2]), (jArr[3] * jArr2[9]) + (jArr[4] * jArr2[8]) + (jArr[5] * jArr2[7]) + (jArr[6] * jArr2[6]) + (jArr[7] * jArr2[5]) + (jArr[8] * jArr2[4]) + (jArr[9] * jArr2[3]), (jArr[4] * jArr2[9]) + (jArr[5] * jArr2[8]) + (jArr[6] * jArr2[7]) + (jArr[7] * jArr2[6]) + (jArr[8] * jArr2[5]) + (jArr[9] * jArr2[4]), (jArr[5] * jArr2[9]) + (jArr[6] * jArr2[8]) + (jArr[7] * jArr2[7]) + (jArr[8] * jArr2[6]) + (jArr[9] * jArr2[5]), (jArr[6] * jArr2[9]) + (jArr[7] * jArr2[8]) + (jArr[8] * jArr2[7]) + (jArr[9] * jArr2[6]), (jArr[7] * jArr2[9]) + (jArr[8] * jArr2[8]) + (jArr[9] * jArr2[7]), (jArr[8] * jArr2[9]) + (jArr[9] * jArr2[8]), jArr[9] * jArr2[9]);
    }

    @Override // sun.security.util.math.intpoly.IntegerPolynomial
    protected void reduce(long[] jArr) {
        carryReduce(jArr, jArr[0], jArr[1], jArr[2], jArr[3], jArr[4], jArr[5], jArr[6], jArr[7], jArr[8], jArr[9]);
    }

    @Override // sun.security.util.math.intpoly.IntegerPolynomial
    protected void square(long[] jArr, long[] jArr2) {
        carryReduce(jArr2, jArr[0] * jArr[0], 2 * jArr[0] * jArr[1], (2 * jArr[0] * jArr[2]) + (jArr[1] * jArr[1]), 2 * ((jArr[0] * jArr[3]) + (jArr[1] * jArr[2])), (2 * ((jArr[0] * jArr[4]) + (jArr[1] * jArr[3]))) + (jArr[2] * jArr[2]), 2 * ((jArr[0] * jArr[5]) + (jArr[1] * jArr[4]) + (jArr[2] * jArr[3])), (2 * ((jArr[0] * jArr[6]) + (jArr[1] * jArr[5]) + (jArr[2] * jArr[4]))) + (jArr[3] * jArr[3]), 2 * ((jArr[0] * jArr[7]) + (jArr[1] * jArr[6]) + (jArr[2] * jArr[5]) + (jArr[3] * jArr[4])), (2 * ((jArr[0] * jArr[8]) + (jArr[1] * jArr[7]) + (jArr[2] * jArr[6]) + (jArr[3] * jArr[5]))) + (jArr[4] * jArr[4]), 2 * ((jArr[0] * jArr[9]) + (jArr[1] * jArr[8]) + (jArr[2] * jArr[7]) + (jArr[3] * jArr[6]) + (jArr[4] * jArr[5])), (2 * ((jArr[1] * jArr[9]) + (jArr[2] * jArr[8]) + (jArr[3] * jArr[7]) + (jArr[4] * jArr[6]))) + (jArr[5] * jArr[5]), 2 * ((jArr[2] * jArr[9]) + (jArr[3] * jArr[8]) + (jArr[4] * jArr[7]) + (jArr[5] * jArr[6])), (2 * ((jArr[3] * jArr[9]) + (jArr[4] * jArr[8]) + (jArr[5] * jArr[7]))) + (jArr[6] * jArr[6]), 2 * ((jArr[4] * jArr[9]) + (jArr[5] * jArr[8]) + (jArr[6] * jArr[7])), (2 * ((jArr[5] * jArr[9]) + (jArr[6] * jArr[8]))) + (jArr[7] * jArr[7]), 2 * ((jArr[6] * jArr[9]) + (jArr[7] * jArr[8])), (2 * jArr[7] * jArr[9]) + (jArr[8] * jArr[8]), 2 * jArr[8] * jArr[9], jArr[9] * jArr[9]);
    }
}
